{"1":{"patchId":"1","code":"process = vgroup(\"Kisana\",environment{declare name \t\"Kisana\";\r\ndeclare author \"Yann Orlarey\";\r\n\r\n//Modifications GRAME July 2015\r\n\r\n/* ========= DESCRITPION =============\r\n\r\n- Kisana : 3-loops string instrument (based on Karplus-Strong)\r\n- Head = Silence\r\n- Tilt = High frequencies \r\n- Front = High + Medium frequencies\r\n- Bottom = High + Medium + Low frequencies\r\n- Left = Minimum brightness\r\n- Right = Maximum birghtness\r\n- Front = Long notes\r\n- Back = Short notes\r\n\r\n*/\r\n\r\nimport(\"music.lib\"); \r\n\r\nKEY = 60;\t// basic midi key\r\nNCY = 15; \t// note cycle length\r\nCCY = 15;\t// control cycle length\r\nBPS = 360;\t// general tempo (beat per sec)\r\n\r\n\r\nprocess = kisana; \r\n\r\n\r\n//-------------------------------kisana----------------------------------\r\n// USAGE: kisana : _,_;\r\n// \t\t3-loops string instrument\r\n//-----------------------------------------------------------------------\r\n\r\nkisana = vgroup(\"Kisana\", harpe(C,11,48), harpe(C,11,60), (harpe(C,11,72) : *(1.5), *(1.5)) \r\n\t:>*(l))\r\n\twith {\r\n\t\tl = -20 : db2linear;//hslider(\"[1]Volume\",-20, -60, 0, 0.01) : db2linear;\r\n\t\tC = hslider(\"[2]Brightness[acc:0 0 -10 0 10]\", 0.2, 0, 1, 0.01) : automat(BPS, CCY, 0.0);\r\n\t};\r\n \r\n\r\n\r\n//----------------------------------Harpe--------------------------------\r\n// USAGE: harpe(C,10,60) : _,_;\r\n//\t\tC is the filter coefficient 0..1\r\n// \t\tBuild a N (10) strings harpe using a pentatonic scale \r\n//\t\tbased on midi key b (60)\r\n//\t\tEach string is triggered by a specific\r\n//\t\tposition of the \"hand\"\r\n//-----------------------------------------------------------------------\r\nharpe(C,N,b) = \thand(b) <: par(i, N, position(i+1)\r\n\t\t\t\t\t\t\t: string(C,Penta(b).degree2Hz(i), att, lvl)\r\n\t\t\t\t\t\t\t: pan((i+0.5)/N) )\r\n\t\t\t\t \t:> _,_\r\n\twith {\r\n\t\tatt = hslider(\"[3]Resonance[acc:2 0 -10 0 12]\", 4, 0.1, 10, 0.01); \r\n\t\thand(48) = vslider(\"h:[1]Instrument Hands/1 (Note %b)[unit:pk][acc:1 1 -10 0 14]\", 0, 0, N, 1) : int : automat(120, CCY, 0.0);\r\n\t\thand(60) = vslider(\"h:[1]Instrument Hands/2 (Note %b)[unit:pk][acc:1 1 -10 0 14]\", 2, 0, N, 1) : int : automat(240, CCY, 0.0);\r\n\t\thand(72) = vslider(\"h:[1]Instrument Hands/3 (Note %b)[unit:pk][acc:1 1 -10 0 10]\", 4, 0, N, 1) : int : automat(480, CCY, 0.0);\r\n\t\t//lvl = vslider(\"h:loop/level\", 0, 0, 6, 1) : int : automat(BPS, CCY, 0.0) : -(6) : db2linear; \r\n\t\tlvl = 1;\r\n\t\tpan(p) = _ <: *(sqrt(1-p)), *(sqrt(p));\r\n\t\tposition(a,x) = abs(x - a) < 0.5;\r\n\t\tdb2linear(x)\t= pow(10, x/20.0);\r\n\r\n\t};\r\n\r\n\r\n//----------------------------------Penta-------------------------------\r\n// Pentatonic scale with degree to midi and degree to Hz conversion\r\n// USAGE: Penta(60).degree2midi(3) ==> 67 midikey\r\n// Penta(60).degree2Hz(4) ==> 440 Hz\r\n//-----------------------------------------------------------------------\r\n\r\nPenta(key) = environment {\r\n\r\n\tA4Hz = 440; \r\n\t\r\n\tdegree2midi(0) = key+0;\r\n\tdegree2midi(1) = key+2;\r\n\tdegree2midi(2) = key+4;\r\n\tdegree2midi(3) = key+7;\r\n\tdegree2midi(4) = key+9;\r\n\tdegree2midi(d) = degree2midi(d-5)+12;\r\n\t\r\n\tdegree2Hz(d) = A4Hz*semiton(degree2midi(d)-69) with { semiton(n) = 2.0^(n/12.0); };\r\n\r\n}; \r\n \r\n\r\n//----------------------------------String-------------------------------\r\n// A karplus-strong string.\r\n//\r\n// USAGE: string(440Hz, 4s, 1.0, button(\"play\"))\r\n// or\t button(\"play\") : string(440Hz, 4s, 1.0)\r\n//-----------------------------------------------------------------------\r\n\r\nstring(coef, freq, t60, level, trig) = noise*level\r\n\t\t\t\t\t\t\t: *(trig : trigger(freq2samples(freq)))\r\n\t\t\t\t\t\t\t: resonator(freq2samples(freq), att)\r\n\twith {\r\n\t\tresonator(d,a)\t= (+ : @(d-1)) ~ (average : *(a));\r\n\t\taverage(x)\t\t= (x*(1+coef)+x'*(1-coef))/2;\r\n\t\ttrigger(n) \t\t= upfront : + ~ decay(n) : >(0.0);\r\n\t\tupfront(x) \t\t= (x-x') > 0.0;\r\n\t\tdecay(n,x)\t\t= x - (x>0.0)/n;\r\n\t\tfreq2samples(f) = 44100.0/f;\r\n\t\tatt \t\t\t= pow(0.001,1.0/(freq*t60)); // attenuation coefficient\r\n\t\trandom \t\t= +(12345)~*(1103515245);\r\n\t\tnoise \t\t= random/2147483647.0;\r\n\t};\r\n\r\n \r\n}.process);","name":"Kisana","x":"165","y":"560","inputs":{"source":[]},"outputs":{"destination":["6"]},"params":{"sliders":[{"path":"/Kisana/Kisana/Instrument_Hands/1_(Note_48)","value":0},{"path":"/Kisana/Kisana/Instrument_Hands/2_(Note_60)","value":2},{"path":"/Kisana/Kisana/Instrument_Hands/3_(Note_72)","value":4},{"path":"/Kisana/Kisana/Brightness","value":0.20000000298023224},{"path":"/Kisana/Kisana/Resonance","value":4}]},"factory":{"name":"mydsp1","code":"/* ------------------------------------------------------------author: \"Yann Orlarey\"name: \"Kisana\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp1Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var abs = global.Math.abs;var fabsf = global.Math.abs;var max = global.Math.max;var min = global.Math.min;var powf = global.Math.pow;function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputsmydsp1SIG0(dsp) {dsp = dsp | 0;return 0;}function getNumOutputsmydsp1SIG0(dsp) {dsp = dsp | 0;return 1;}function instanceInitmydsp1SIG0(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function fillmydsp1SIG0(dsp, count, output) {dsp = dsp | 0;count = count | 0;output = output | 0;var i = 0;for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAPF32[output + ((i | 0) << 2) >> 2] = 0.;}}function getNumInputs(dsp) {dsp = dsp | 0;return 0;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;var i6 = 0;var i7 = 0;var i8 = 0;var i9 = 0;var i10 = 0;var i11 = 0;var i12 = 0;var i13 = 0;var i14 = 0;var i15 = 0;var i16 = 0;var i17 = 0;var i18 = 0;var i19 = 0;var i20 = 0;var i21 = 0;var i22 = 0;var i23 = 0;var i24 = 0;var i25 = 0;var i26 = 0;var i27 = 0;var i28 = 0;var i29 = 0;var i30 = 0;var i31 = 0;var i32 = 0;var i33 = 0;var i34 = 0;var i35 = 0;var i36 = 0;var i37 = 0;var i38 = 0;var i39 = 0;var i40 = 0;var i41 = 0;var i42 = 0;var i43 = 0;var i44 = 0;var i45 = 0;var i46 = 0;var i47 = 0;var i48 = 0;var i49 = 0;var i50 = 0;var i51 = 0;var i52 = 0;var i53 = 0;var i54 = 0;var i55 = 0;var i56 = 0;var i57 = 0;var i58 = 0;var i59 = 0;var i60 = 0;var i61 = 0;var i62 = 0;var i63 = 0;var i64 = 0;var i65 = 0;var i66 = 0;var i67 = 0;var i68 = 0;var i69 = 0;var i70 = 0;var i71 = 0;var i72 = 0;var i73 = 0;var i74 = 0;var i75 = 0;var i76 = 0;var i77 = 0;var i78 = 0;var i79 = 0;var i80 = 0;var i81 = 0;var i82 = 0;var i83 = 0;var i84 = 0;var i85 = 0;var i86 = 0;var i87 = 0;var i88 = 0;var i89 = 0;var i90 = 0;var i91 = 0;var i92 = 0;var i93 = 0;var i94 = 0;var i95 = 0;var i96 = 0;var i97 = 0;var i98 = 0;var i99 = 0;var i100 = 0;var i101 = 0;var i102 = 0;var i103 = 0;var i104 = 0;var i105 = 0;var i106 = 0;var i107 = 0;var i108 = 0;var i109 = 0;var i110 = 0;var i111 = 0;var i112 = 0;var i113 = 0;var i114 = 0;var i115 = 0;var i116 = 0;var i117 = 0;var i118 = 0;var i119 = 0;var i120 = 0;var i121 = 0;var i122 = 0;var i123 = 0;var i124 = 0;var i125 = 0;var i126 = 0;var i127 = 0;var i128 = 0;var i129 = 0;var i130 = 0;var i131 = 0;var i132 = 0;var i133 = 0;var i134 = 0;var i135 = 0;var i136 = 0;var i137 = 0;var i138 = 0;var i139 = 0;var i140 = 0;var i141 = 0;var i142 = 0;var i143 = 0;var i144 = 0;var i145 = 0;var i146 = 0;var i147 = 0;var i148 = 0;var i149 = 0;var i150 = 0;var i151 = 0;var i152 = 0;HEAP32[dsp + 23752 >> 2] = (samplingFreq | 0);HEAPF32[dsp + 23748 >> 2] = +(4.);instanceInitmydsp1SIG0(dsp, (samplingFreq | 0));fillmydsp1SIG0(dsp, 16, (dsp + 22400 | 0));HEAP32[dsp + 23756 >> 2] = ((min(192000, ((max(1, (HEAP32[dsp + 23752 >> 2] | 0))) | 0))) | 0);HEAP32[dsp + 23760 >> 2] = ~~(+(0.166667 * +((HEAP32[dsp + 23756 >> 2] | 0))));for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAP32[dsp + 23052 + ((i0 | 0) << 2) >> 2] = 0;}for (i1 = 0; (((i1 | 0) < 2) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAP32[dsp + 23060 + ((i1 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 23764 >> 2] = +(0.2);for (i2 = 0; (((i2 | 0) < 2) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAPF32[dsp + 23068 + ((i2 | 0) << 2) >> 2] = 0.;}for (i3 = 0; (((i3 | 0) < 2) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAPF32[dsp + 23076 + ((i3 | 0) << 2) >> 2] = 0.;}for (i4 = 0; (((i4 | 0) < 2) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAP32[dsp + 23084 + ((i4 | 0) << 2) >> 2] = 0;}for (i5 = 0; (((i5 | 0) < 2) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAP32[dsp + 23092 + ((i5 | 0) << 2) >> 2] = 0;}instanceInitmydsp1SIG0(dsp, (samplingFreq | 0));fillmydsp1SIG0(dsp, 16, (dsp + 22464 | 0));HEAP32[dsp + 23768 >> 2] = ~~(+(0.125 * +((HEAP32[dsp + 23756 >> 2] | 0))));for (i6 = 0; (((i6 | 0) < 2) | 0); i6 = (((i6 | 0) + 1) | 0)) {HEAP32[dsp + 23100 + ((i6 | 0) << 2) >> 2] = 0;}for (i7 = 0; (((i7 | 0) < 2) | 0); i7 = (((i7 | 0) + 1) | 0)) {HEAP32[dsp + 23108 + ((i7 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 23772 >> 2] = +(4.);for (i8 = 0; (((i8 | 0) < 2) | 0); i8 = (((i8 | 0) + 1) | 0)) {HEAP32[dsp + 23116 + ((i8 | 0) << 2) >> 2] = 0;}for (i9 = 0; (((i9 | 0) < 2) | 0); i9 = (((i9 | 0) + 1) | 0)) {HEAP32[dsp + 23124 + ((i9 | 0) << 2) >> 2] = 0;}for (i10 = 0; (((i10 | 0) < 2) | 0); i10 = (((i10 | 0) + 1) | 0)) {HEAP32[dsp + 23132 + ((i10 | 0) << 2) >> 2] = 0;}for (i11 = 0; (((i11 | 0) < 2) | 0); i11 = (((i11 | 0) + 1) | 0)) {HEAP32[dsp + 23140 + ((i11 | 0) << 2) >> 2] = 0;}for (i12 = 0; (((i12 | 0) < 2) | 0); i12 = (((i12 | 0) + 1) | 0)) {HEAPF32[dsp + 23148 + ((i12 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 23776 >> 2] = 0;for (i13 = 0; (((i13 | 0) < 64) | 0); i13 = (((i13 | 0) + 1) | 0)) {HEAPF32[dsp + 19968 + ((i13 | 0) << 2) >> 2] = 0.;}for (i14 = 0; (((i14 | 0) < 3) | 0); i14 = (((i14 | 0) + 1) | 0)) {HEAPF32[dsp + 22656 + ((i14 | 0) << 2) >> 2] = 0.;}for (i15 = 0; (((i15 | 0) < 2) | 0); i15 = (((i15 | 0) + 1) | 0)) {HEAP32[dsp + 23156 + ((i15 | 0) << 2) >> 2] = 0;}for (i16 = 0; (((i16 | 0) < 2) | 0); i16 = (((i16 | 0) + 1) | 0)) {HEAPF32[dsp + 23164 + ((i16 | 0) << 2) >> 2] = 0.;}for (i17 = 0; (((i17 | 0) < 128) | 0); i17 = (((i17 | 0) + 1) | 0)) {HEAPF32[dsp + 14336 + ((i17 | 0) << 2) >> 2] = 0.;}for (i18 = 0; (((i18 | 0) < 3) | 0); i18 = (((i18 | 0) + 1) | 0)) {HEAPF32[dsp + 22668 + ((i18 | 0) << 2) >> 2] = 0.;}for (i19 = 0; (((i19 | 0) < 2) | 0); i19 = (((i19 | 0) + 1) | 0)) {HEAP32[dsp + 23172 + ((i19 | 0) << 2) >> 2] = 0;}for (i20 = 0; (((i20 | 0) < 2) | 0); i20 = (((i20 | 0) + 1) | 0)) {HEAPF32[dsp + 23180 + ((i20 | 0) << 2) >> 2] = 0.;}for (i21 = 0; (((i21 | 0) < 128) | 0); i21 = (((i21 | 0) + 1) | 0)) {HEAPF32[dsp + 14848 + ((i21 | 0) << 2) >> 2] = 0.;}for (i22 = 0; (((i22 | 0) < 3) | 0); i22 = (((i22 | 0) + 1) | 0)) {HEAPF32[dsp + 22680 + ((i22 | 0) << 2) >> 2] = 0.;}for (i23 = 0; (((i23 | 0) < 2) | 0); i23 = (((i23 | 0) + 1) | 0)) {HEAP32[dsp + 23188 + ((i23 | 0) << 2) >> 2] = 0;}for (i24 = 0; (((i24 | 0) < 2) | 0); i24 = (((i24 | 0) + 1) | 0)) {HEAPF32[dsp + 23196 + ((i24 | 0) << 2) >> 2] = 0.;}for (i25 = 0; (((i25 | 0) < 128) | 0); i25 = (((i25 | 0) + 1) | 0)) {HEAPF32[dsp + 15360 + ((i25 | 0) << 2) >> 2] = 0.;}for (i26 = 0; (((i26 | 0) < 3) | 0); i26 = (((i26 | 0) + 1) | 0)) {HEAPF32[dsp + 22692 + ((i26 | 0) << 2) >> 2] = 0.;}for (i27 = 0; (((i27 | 0) < 2) | 0); i27 = (((i27 | 0) + 1) | 0)) {HEAP32[dsp + 23204 + ((i27 | 0) << 2) >> 2] = 0;}for (i28 = 0; (((i28 | 0) < 2) | 0); i28 = (((i28 | 0) + 1) | 0)) {HEAPF32[dsp + 23212 + ((i28 | 0) << 2) >> 2] = 0.;}for (i29 = 0; (((i29 | 0) < 64) | 0); i29 = (((i29 | 0) + 1) | 0)) {HEAPF32[dsp + 20224 + ((i29 | 0) << 2) >> 2] = 0.;}for (i30 = 0; (((i30 | 0) < 3) | 0); i30 = (((i30 | 0) + 1) | 0)) {HEAPF32[dsp + 22704 + ((i30 | 0) << 2) >> 2] = 0.;}for (i31 = 0; (((i31 | 0) < 2) | 0); i31 = (((i31 | 0) + 1) | 0)) {HEAP32[dsp + 23220 + ((i31 | 0) << 2) >> 2] = 0;}for (i32 = 0; (((i32 | 0) < 2) | 0); i32 = (((i32 | 0) + 1) | 0)) {HEAPF32[dsp + 23228 + ((i32 | 0) << 2) >> 2] = 0.;}for (i33 = 0; (((i33 | 0) < 64) | 0); i33 = (((i33 | 0) + 1) | 0)) {HEAPF32[dsp + 20480 + ((i33 | 0) << 2) >> 2] = 0.;}for (i34 = 0; (((i34 | 0) < 3) | 0); i34 = (((i34 | 0) + 1) | 0)) {HEAPF32[dsp + 22716 + ((i34 | 0) << 2) >> 2] = 0.;}for (i35 = 0; (((i35 | 0) < 2) | 0); i35 = (((i35 | 0) + 1) | 0)) {HEAP32[dsp + 23236 + ((i35 | 0) << 2) >> 2] = 0;}for (i36 = 0; (((i36 | 0) < 2) | 0); i36 = (((i36 | 0) + 1) | 0)) {HEAPF32[dsp + 23244 + ((i36 | 0) << 2) >> 2] = 0.;}for (i37 = 0; (((i37 | 0) < 64) | 0); i37 = (((i37 | 0) + 1) | 0)) {HEAPF32[dsp + 20736 + ((i37 | 0) << 2) >> 2] = 0.;}for (i38 = 0; (((i38 | 0) < 3) | 0); i38 = (((i38 | 0) + 1) | 0)) {HEAPF32[dsp + 22728 + ((i38 | 0) << 2) >> 2] = 0.;}for (i39 = 0; (((i39 | 0) < 2) | 0); i39 = (((i39 | 0) + 1) | 0)) {HEAP32[dsp + 23252 + ((i39 | 0) << 2) >> 2] = 0;}for (i40 = 0; (((i40 | 0) < 2) | 0); i40 = (((i40 | 0) + 1) | 0)) {HEAPF32[dsp + 23260 + ((i40 | 0) << 2) >> 2] = 0.;}for (i41 = 0; (((i41 | 0) < 64) | 0); i41 = (((i41 | 0) + 1) | 0)) {HEAPF32[dsp + 20992 + ((i41 | 0) << 2) >> 2] = 0.;}for (i42 = 0; (((i42 | 0) < 3) | 0); i42 = (((i42 | 0) + 1) | 0)) {HEAPF32[dsp + 22740 + ((i42 | 0) << 2) >> 2] = 0.;}for (i43 = 0; (((i43 | 0) < 2) | 0); i43 = (((i43 | 0) + 1) | 0)) {HEAP32[dsp + 23268 + ((i43 | 0) << 2) >> 2] = 0;}for (i44 = 0; (((i44 | 0) < 2) | 0); i44 = (((i44 | 0) + 1) | 0)) {HEAPF32[dsp + 23276 + ((i44 | 0) << 2) >> 2] = 0.;}for (i45 = 0; (((i45 | 0) < 32) | 0); i45 = (((i45 | 0) + 1) | 0)) {HEAPF32[dsp + 22016 + ((i45 | 0) << 2) >> 2] = 0.;}for (i46 = 0; (((i46 | 0) < 3) | 0); i46 = (((i46 | 0) + 1) | 0)) {HEAPF32[dsp + 22752 + ((i46 | 0) << 2) >> 2] = 0.;}for (i47 = 0; (((i47 | 0) < 2) | 0); i47 = (((i47 | 0) + 1) | 0)) {HEAP32[dsp + 23284 + ((i47 | 0) << 2) >> 2] = 0;}for (i48 = 0; (((i48 | 0) < 2) | 0); i48 = (((i48 | 0) + 1) | 0)) {HEAPF32[dsp + 23292 + ((i48 | 0) << 2) >> 2] = 0.;}for (i49 = 0; (((i49 | 0) < 32) | 0); i49 = (((i49 | 0) + 1) | 0)) {HEAPF32[dsp + 22144 + ((i49 | 0) << 2) >> 2] = 0.;}for (i50 = 0; (((i50 | 0) < 3) | 0); i50 = (((i50 | 0) + 1) | 0)) {HEAPF32[dsp + 22764 + ((i50 | 0) << 2) >> 2] = 0.;}for (i51 = 0; (((i51 | 0) < 2) | 0); i51 = (((i51 | 0) + 1) | 0)) {HEAP32[dsp + 23300 + ((i51 | 0) << 2) >> 2] = 0;}for (i52 = 0; (((i52 | 0) < 2) | 0); i52 = (((i52 | 0) + 1) | 0)) {HEAPF32[dsp + 23308 + ((i52 | 0) << 2) >> 2] = 0.;}for (i53 = 0; (((i53 | 0) < 32) | 0); i53 = (((i53 | 0) + 1) | 0)) {HEAPF32[dsp + 22272 + ((i53 | 0) << 2) >> 2] = 0.;}for (i54 = 0; (((i54 | 0) < 3) | 0); i54 = (((i54 | 0) + 1) | 0)) {HEAPF32[dsp + 22776 + ((i54 | 0) << 2) >> 2] = 0.;}instanceInitmydsp1SIG0(dsp, (samplingFreq | 0));fillmydsp1SIG0(dsp, 16, (dsp + 22528 | 0));HEAP32[dsp + 23780 >> 2] = ~~(+(0.5 * +((HEAP32[dsp + 23756 >> 2] | 0))));for (i55 = 0; (((i55 | 0) < 2) | 0); i55 = (((i55 | 0) + 1) | 0)) {HEAP32[dsp + 23316 + ((i55 | 0) << 2) >> 2] = 0;}for (i56 = 0; (((i56 | 0) < 2) | 0); i56 = (((i56 | 0) + 1) | 0)) {HEAP32[dsp + 23324 + ((i56 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 23784 >> 2] = +(0.);for (i57 = 0; (((i57 | 0) < 2) | 0); i57 = (((i57 | 0) + 1) | 0)) {HEAP32[dsp + 23332 + ((i57 | 0) << 2) >> 2] = 0;}for (i58 = 0; (((i58 | 0) < 2) | 0); i58 = (((i58 | 0) + 1) | 0)) {HEAP32[dsp + 23340 + ((i58 | 0) << 2) >> 2] = 0;}for (i59 = 0; (((i59 | 0) < 2) | 0); i59 = (((i59 | 0) + 1) | 0)) {HEAP32[dsp + 23348 + ((i59 | 0) << 2) >> 2] = 0;}for (i60 = 0; (((i60 | 0) < 2) | 0); i60 = (((i60 | 0) + 1) | 0)) {HEAP32[dsp + 23356 + ((i60 | 0) << 2) >> 2] = 0;}for (i61 = 0; (((i61 | 0) < 2) | 0); i61 = (((i61 | 0) + 1) | 0)) {HEAPF32[dsp + 23364 + ((i61 | 0) << 2) >> 2] = 0.;}for (i62 = 0; (((i62 | 0) < 128) | 0); i62 = (((i62 | 0) + 1) | 0)) {HEAPF32[dsp + 15872 + ((i62 | 0) << 2) >> 2] = 0.;}for (i63 = 0; (((i63 | 0) < 3) | 0); i63 = (((i63 | 0) + 1) | 0)) {HEAPF32[dsp + 22788 + ((i63 | 0) << 2) >> 2] = 0.;}for (i64 = 0; (((i64 | 0) < 2) | 0); i64 = (((i64 | 0) + 1) | 0)) {HEAP32[dsp + 23372 + ((i64 | 0) << 2) >> 2] = 0;}for (i65 = 0; (((i65 | 0) < 2) | 0); i65 = (((i65 | 0) + 1) | 0)) {HEAPF32[dsp + 23380 + ((i65 | 0) << 2) >> 2] = 0.;}for (i66 = 0; (((i66 | 0) < 512) | 0); i66 = (((i66 | 0) + 1) | 0)) {HEAPF32[dsp + 0 + ((i66 | 0) << 2) >> 2] = 0.;}for (i67 = 0; (((i67 | 0) < 3) | 0); i67 = (((i67 | 0) + 1) | 0)) {HEAPF32[dsp + 22800 + ((i67 | 0) << 2) >> 2] = 0.;}for (i68 = 0; (((i68 | 0) < 2) | 0); i68 = (((i68 | 0) + 1) | 0)) {HEAP32[dsp + 23388 + ((i68 | 0) << 2) >> 2] = 0;}for (i69 = 0; (((i69 | 0) < 2) | 0); i69 = (((i69 | 0) + 1) | 0)) {HEAPF32[dsp + 23396 + ((i69 | 0) << 2) >> 2] = 0.;}for (i70 = 0; (((i70 | 0) < 512) | 0); i70 = (((i70 | 0) + 1) | 0)) {HEAPF32[dsp + 2048 + ((i70 | 0) << 2) >> 2] = 0.;}for (i71 = 0; (((i71 | 0) < 3) | 0); i71 = (((i71 | 0) + 1) | 0)) {HEAPF32[dsp + 22812 + ((i71 | 0) << 2) >> 2] = 0.;}for (i72 = 0; (((i72 | 0) < 2) | 0); i72 = (((i72 | 0) + 1) | 0)) {HEAP32[dsp + 23404 + ((i72 | 0) << 2) >> 2] = 0;}for (i73 = 0; (((i73 | 0) < 2) | 0); i73 = (((i73 | 0) + 1) | 0)) {HEAPF32[dsp + 23412 + ((i73 | 0) << 2) >> 2] = 0.;}for (i74 = 0; (((i74 | 0) < 512) | 0); i74 = (((i74 | 0) + 1) | 0)) {HEAPF32[dsp + 4096 + ((i74 | 0) << 2) >> 2] = 0.;}for (i75 = 0; (((i75 | 0) < 3) | 0); i75 = (((i75 | 0) + 1) | 0)) {HEAPF32[dsp + 22824 + ((i75 | 0) << 2) >> 2] = 0.;}for (i76 = 0; (((i76 | 0) < 2) | 0); i76 = (((i76 | 0) + 1) | 0)) {HEAP32[dsp + 23420 + ((i76 | 0) << 2) >> 2] = 0;}for (i77 = 0; (((i77 | 0) < 2) | 0); i77 = (((i77 | 0) + 1) | 0)) {HEAPF32[dsp + 23428 + ((i77 | 0) << 2) >> 2] = 0.;}for (i78 = 0; (((i78 | 0) < 256) | 0); i78 = (((i78 | 0) + 1) | 0)) {HEAPF32[dsp + 6144 + ((i78 | 0) << 2) >> 2] = 0.;}for (i79 = 0; (((i79 | 0) < 3) | 0); i79 = (((i79 | 0) + 1) | 0)) {HEAPF32[dsp + 22836 + ((i79 | 0) << 2) >> 2] = 0.;}for (i80 = 0; (((i80 | 0) < 2) | 0); i80 = (((i80 | 0) + 1) | 0)) {HEAP32[dsp + 23436 + ((i80 | 0) << 2) >> 2] = 0;}for (i81 = 0; (((i81 | 0) < 2) | 0); i81 = (((i81 | 0) + 1) | 0)) {HEAPF32[dsp + 23444 + ((i81 | 0) << 2) >> 2] = 0.;}for (i82 = 0; (((i82 | 0) < 256) | 0); i82 = (((i82 | 0) + 1) | 0)) {HEAPF32[dsp + 7168 + ((i82 | 0) << 2) >> 2] = 0.;}for (i83 = 0; (((i83 | 0) < 3) | 0); i83 = (((i83 | 0) + 1) | 0)) {HEAPF32[dsp + 22848 + ((i83 | 0) << 2) >> 2] = 0.;}for (i84 = 0; (((i84 | 0) < 2) | 0); i84 = (((i84 | 0) + 1) | 0)) {HEAP32[dsp + 23452 + ((i84 | 0) << 2) >> 2] = 0;}for (i85 = 0; (((i85 | 0) < 2) | 0); i85 = (((i85 | 0) + 1) | 0)) {HEAPF32[dsp + 23460 + ((i85 | 0) << 2) >> 2] = 0.;}for (i86 = 0; (((i86 | 0) < 256) | 0); i86 = (((i86 | 0) + 1) | 0)) {HEAPF32[dsp + 8192 + ((i86 | 0) << 2) >> 2] = 0.;}for (i87 = 0; (((i87 | 0) < 3) | 0); i87 = (((i87 | 0) + 1) | 0)) {HEAPF32[dsp + 22860 + ((i87 | 0) << 2) >> 2] = 0.;}for (i88 = 0; (((i88 | 0) < 2) | 0); i88 = (((i88 | 0) + 1) | 0)) {HEAP32[dsp + 23468 + ((i88 | 0) << 2) >> 2] = 0;}for (i89 = 0; (((i89 | 0) < 2) | 0); i89 = (((i89 | 0) + 1) | 0)) {HEAPF32[dsp + 23476 + ((i89 | 0) << 2) >> 2] = 0.;}for (i90 = 0; (((i90 | 0) < 256) | 0); i90 = (((i90 | 0) + 1) | 0)) {HEAPF32[dsp + 9216 + ((i90 | 0) << 2) >> 2] = 0.;}for (i91 = 0; (((i91 | 0) < 3) | 0); i91 = (((i91 | 0) + 1) | 0)) {HEAPF32[dsp + 22872 + ((i91 | 0) << 2) >> 2] = 0.;}for (i92 = 0; (((i92 | 0) < 2) | 0); i92 = (((i92 | 0) + 1) | 0)) {HEAP32[dsp + 23484 + ((i92 | 0) << 2) >> 2] = 0;}for (i93 = 0; (((i93 | 0) < 2) | 0); i93 = (((i93 | 0) + 1) | 0)) {HEAPF32[dsp + 23492 + ((i93 | 0) << 2) >> 2] = 0.;}for (i94 = 0; (((i94 | 0) < 256) | 0); i94 = (((i94 | 0) + 1) | 0)) {HEAPF32[dsp + 10240 + ((i94 | 0) << 2) >> 2] = 0.;}for (i95 = 0; (((i95 | 0) < 3) | 0); i95 = (((i95 | 0) + 1) | 0)) {HEAPF32[dsp + 22884 + ((i95 | 0) << 2) >> 2] = 0.;}for (i96 = 0; (((i96 | 0) < 2) | 0); i96 = (((i96 | 0) + 1) | 0)) {HEAP32[dsp + 23500 + ((i96 | 0) << 2) >> 2] = 0;}for (i97 = 0; (((i97 | 0) < 2) | 0); i97 = (((i97 | 0) + 1) | 0)) {HEAPF32[dsp + 23508 + ((i97 | 0) << 2) >> 2] = 0.;}for (i98 = 0; (((i98 | 0) < 128) | 0); i98 = (((i98 | 0) + 1) | 0)) {HEAPF32[dsp + 16384 + ((i98 | 0) << 2) >> 2] = 0.;}for (i99 = 0; (((i99 | 0) < 3) | 0); i99 = (((i99 | 0) + 1) | 0)) {HEAPF32[dsp + 22896 + ((i99 | 0) << 2) >> 2] = 0.;}for (i100 = 0; (((i100 | 0) < 2) | 0); i100 = (((i100 | 0) + 1) | 0)) {HEAP32[dsp + 23516 + ((i100 | 0) << 2) >> 2] = 0;}for (i101 = 0; (((i101 | 0) < 2) | 0); i101 = (((i101 | 0) + 1) | 0)) {HEAPF32[dsp + 23524 + ((i101 | 0) << 2) >> 2] = 0.;}for (i102 = 0; (((i102 | 0) < 128) | 0); i102 = (((i102 | 0) + 1) | 0)) {HEAPF32[dsp + 16896 + ((i102 | 0) << 2) >> 2] = 0.;}for (i103 = 0; (((i103 | 0) < 3) | 0); i103 = (((i103 | 0) + 1) | 0)) {HEAPF32[dsp + 22908 + ((i103 | 0) << 2) >> 2] = 0.;}instanceInitmydsp1SIG0(dsp, (samplingFreq | 0));fillmydsp1SIG0(dsp, 16, (dsp + 22592 | 0));HEAP32[dsp + 23788 >> 2] = ~~(+(0.25 * +((HEAP32[dsp + 23756 >> 2] | 0))));for (i104 = 0; (((i104 | 0) < 2) | 0); i104 = (((i104 | 0) + 1) | 0)) {HEAP32[dsp + 23532 + ((i104 | 0) << 2) >> 2] = 0;}for (i105 = 0; (((i105 | 0) < 2) | 0); i105 = (((i105 | 0) + 1) | 0)) {HEAP32[dsp + 23540 + ((i105 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 23792 >> 2] = +(2.);for (i106 = 0; (((i106 | 0) < 2) | 0); i106 = (((i106 | 0) + 1) | 0)) {HEAP32[dsp + 23548 + ((i106 | 0) << 2) >> 2] = 0;}for (i107 = 0; (((i107 | 0) < 2) | 0); i107 = (((i107 | 0) + 1) | 0)) {HEAP32[dsp + 23556 + ((i107 | 0) << 2) >> 2] = 0;}for (i108 = 0; (((i108 | 0) < 2) | 0); i108 = (((i108 | 0) + 1) | 0)) {HEAP32[dsp + 23564 + ((i108 | 0) << 2) >> 2] = 0;}for (i109 = 0; (((i109 | 0) < 2) | 0); i109 = (((i109 | 0) + 1) | 0)) {HEAP32[dsp + 23572 + ((i109 | 0) << 2) >> 2] = 0;}for (i110 = 0; (((i110 | 0) < 2) | 0); i110 = (((i110 | 0) + 1) | 0)) {HEAPF32[dsp + 23580 + ((i110 | 0) << 2) >> 2] = 0.;}for (i111 = 0; (((i111 | 0) < 64) | 0); i111 = (((i111 | 0) + 1) | 0)) {HEAPF32[dsp + 21248 + ((i111 | 0) << 2) >> 2] = 0.;}for (i112 = 0; (((i112 | 0) < 3) | 0); i112 = (((i112 | 0) + 1) | 0)) {HEAPF32[dsp + 22920 + ((i112 | 0) << 2) >> 2] = 0.;}for (i113 = 0; (((i113 | 0) < 2) | 0); i113 = (((i113 | 0) + 1) | 0)) {HEAP32[dsp + 23588 + ((i113 | 0) << 2) >> 2] = 0;}for (i114 = 0; (((i114 | 0) < 2) | 0); i114 = (((i114 | 0) + 1) | 0)) {HEAPF32[dsp + 23596 + ((i114 | 0) << 2) >> 2] = 0.;}for (i115 = 0; (((i115 | 0) < 256) | 0); i115 = (((i115 | 0) + 1) | 0)) {HEAPF32[dsp + 11264 + ((i115 | 0) << 2) >> 2] = 0.;}for (i116 = 0; (((i116 | 0) < 3) | 0); i116 = (((i116 | 0) + 1) | 0)) {HEAPF32[dsp + 22932 + ((i116 | 0) << 2) >> 2] = 0.;}for (i117 = 0; (((i117 | 0) < 2) | 0); i117 = (((i117 | 0) + 1) | 0)) {HEAP32[dsp + 23604 + ((i117 | 0) << 2) >> 2] = 0;}for (i118 = 0; (((i118 | 0) < 2) | 0); i118 = (((i118 | 0) + 1) | 0)) {HEAPF32[dsp + 23612 + ((i118 | 0) << 2) >> 2] = 0.;}for (i119 = 0; (((i119 | 0) < 256) | 0); i119 = (((i119 | 0) + 1) | 0)) {HEAPF32[dsp + 12288 + ((i119 | 0) << 2) >> 2] = 0.;}for (i120 = 0; (((i120 | 0) < 3) | 0); i120 = (((i120 | 0) + 1) | 0)) {HEAPF32[dsp + 22944 + ((i120 | 0) << 2) >> 2] = 0.;}for (i121 = 0; (((i121 | 0) < 2) | 0); i121 = (((i121 | 0) + 1) | 0)) {HEAP32[dsp + 23620 + ((i121 | 0) << 2) >> 2] = 0;}for (i122 = 0; (((i122 | 0) < 2) | 0); i122 = (((i122 | 0) + 1) | 0)) {HEAPF32[dsp + 23628 + ((i122 | 0) << 2) >> 2] = 0.;}for (i123 = 0; (((i123 | 0) < 256) | 0); i123 = (((i123 | 0) + 1) | 0)) {HEAPF32[dsp + 13312 + ((i123 | 0) << 2) >> 2] = 0.;}for (i124 = 0; (((i124 | 0) < 3) | 0); i124 = (((i124 | 0) + 1) | 0)) {HEAPF32[dsp + 22956 + ((i124 | 0) << 2) >> 2] = 0.;}for (i125 = 0; (((i125 | 0) < 2) | 0); i125 = (((i125 | 0) + 1) | 0)) {HEAP32[dsp + 23636 + ((i125 | 0) << 2) >> 2] = 0;}for (i126 = 0; (((i126 | 0) < 2) | 0); i126 = (((i126 | 0) + 1) | 0)) {HEAPF32[dsp + 23644 + ((i126 | 0) << 2) >> 2] = 0.;}for (i127 = 0; (((i127 | 0) < 128) | 0); i127 = (((i127 | 0) + 1) | 0)) {HEAPF32[dsp + 17408 + ((i127 | 0) << 2) >> 2] = 0.;}for (i128 = 0; (((i128 | 0) < 3) | 0); i128 = (((i128 | 0) + 1) | 0)) {HEAPF32[dsp + 22968 + ((i128 | 0) << 2) >> 2] = 0.;}for (i129 = 0; (((i129 | 0) < 2) | 0); i129 = (((i129 | 0) + 1) | 0)) {HEAP32[dsp + 23652 + ((i129 | 0) << 2) >> 2] = 0;}for (i130 = 0; (((i130 | 0) < 2) | 0); i130 = (((i130 | 0) + 1) | 0)) {HEAPF32[dsp + 23660 + ((i130 | 0) << 2) >> 2] = 0.;}for (i131 = 0; (((i131 | 0) < 128) | 0); i131 = (((i131 | 0) + 1) | 0)) {HEAPF32[dsp + 17920 + ((i131 | 0) << 2) >> 2] = 0.;}for (i132 = 0; (((i132 | 0) < 3) | 0); i132 = (((i132 | 0) + 1) | 0)) {HEAPF32[dsp + 22980 + ((i132 | 0) << 2) >> 2] = 0.;}for (i133 = 0; (((i133 | 0) < 2) | 0); i133 = (((i133 | 0) + 1) | 0)) {HEAP32[dsp + 23668 + ((i133 | 0) << 2) >> 2] = 0;}for (i134 = 0; (((i134 | 0) < 2) | 0); i134 = (((i134 | 0) + 1) | 0)) {HEAPF32[dsp + 23676 + ((i134 | 0) << 2) >> 2] = 0.;}for (i135 = 0; (((i135 | 0) < 128) | 0); i135 = (((i135 | 0) + 1) | 0)) {HEAPF32[dsp + 18432 + ((i135 | 0) << 2) >> 2] = 0.;}for (i136 = 0; (((i136 | 0) < 3) | 0); i136 = (((i136 | 0) + 1) | 0)) {HEAPF32[dsp + 22992 + ((i136 | 0) << 2) >> 2] = 0.;}for (i137 = 0; (((i137 | 0) < 2) | 0); i137 = (((i137 | 0) + 1) | 0)) {HEAP32[dsp + 23684 + ((i137 | 0) << 2) >> 2] = 0;}for (i138 = 0; (((i138 | 0) < 2) | 0); i138 = (((i138 | 0) + 1) | 0)) {HEAPF32[dsp + 23692 + ((i138 | 0) << 2) >> 2] = 0.;}for (i139 = 0; (((i139 | 0) < 128) | 0); i139 = (((i139 | 0) + 1) | 0)) {HEAPF32[dsp + 18944 + ((i139 | 0) << 2) >> 2] = 0.;}for (i140 = 0; (((i140 | 0) < 3) | 0); i140 = (((i140 | 0) + 1) | 0)) {HEAPF32[dsp + 23004 + ((i140 | 0) << 2) >> 2] = 0.;}for (i141 = 0; (((i141 | 0) < 2) | 0); i141 = (((i141 | 0) + 1) | 0)) {HEAP32[dsp + 23700 + ((i141 | 0) << 2) >> 2] = 0;}for (i142 = 0; (((i142 | 0) < 2) | 0); i142 = (((i142 | 0) + 1) | 0)) {HEAPF32[dsp + 23708 + ((i142 | 0) << 2) >> 2] = 0.;}for (i143 = 0; (((i143 | 0) < 128) | 0); i143 = (((i143 | 0) + 1) | 0)) {HEAPF32[dsp + 19456 + ((i143 | 0) << 2) >> 2] = 0.;}for (i144 = 0; (((i144 | 0) < 3) | 0); i144 = (((i144 | 0) + 1) | 0)) {HEAPF32[dsp + 23016 + ((i144 | 0) << 2) >> 2] = 0.;}for (i145 = 0; (((i145 | 0) < 2) | 0); i145 = (((i145 | 0) + 1) | 0)) {HEAP32[dsp + 23716 + ((i145 | 0) << 2) >> 2] = 0;}for (i146 = 0; (((i146 | 0) < 2) | 0); i146 = (((i146 | 0) + 1) | 0)) {HEAPF32[dsp + 23724 + ((i146 | 0) << 2) >> 2] = 0.;}for (i147 = 0; (((i147 | 0) < 64) | 0); i147 = (((i147 | 0) + 1) | 0)) {HEAPF32[dsp + 21504 + ((i147 | 0) << 2) >> 2] = 0.;}for (i148 = 0; (((i148 | 0) < 3) | 0); i148 = (((i148 | 0) + 1) | 0)) {HEAPF32[dsp + 23028 + ((i148 | 0) << 2) >> 2] = 0.;}for (i149 = 0; (((i149 | 0) < 2) | 0); i149 = (((i149 | 0) + 1) | 0)) {HEAP32[dsp + 23732 + ((i149 | 0) << 2) >> 2] = 0;}for (i150 = 0; (((i150 | 0) < 2) | 0); i150 = (((i150 | 0) + 1) | 0)) {HEAPF32[dsp + 23740 + ((i150 | 0) << 2) >> 2] = 0.;}for (i151 = 0; (((i151 | 0) < 64) | 0); i151 = (((i151 | 0) + 1) | 0)) {HEAPF32[dsp + 21760 + ((i151 | 0) << 2) >> 2] = 0.;}for (i152 = 0; (((i152 | 0) < 3) | 0); i152 = (((i152 | 0) + 1) | 0)) {HEAPF32[dsp + 23040 + ((i152 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var output0 = 0;var fSlow0 = 0.;var fSlow1 = 0.;var fSlow2 = 0.;var iSlow3 = 0;var iSlow4 = 0;var iSlow5 = 0;var fSlow6 = 0.;var fSlow7 = 0.;var fSlow8 = 0.;var fSlow9 = 0.;var fSlow10 = 0.;var fSlow11 = 0.;var fSlow12 = 0.;var fSlow13 = 0.;var fSlow14 = 0.;var fSlow15 = 0.;var iSlow16 = 0;var iSlow17 = 0;var fSlow18 = 0.;var fSlow19 = 0.;var fSlow20 = 0.;var fSlow21 = 0.;var fSlow22 = 0.;var fSlow23 = 0.;var fSlow24 = 0.;var fSlow25 = 0.;var fSlow26 = 0.;var fSlow27 = 0.;var iSlow28 = 0;var iSlow29 = 0;var i = 0;var iTemp0 = 0;var fSel0 = 0.;var fTemp1 = 0.;var fTemp2 = 0.;var iTemp3 = 0;var iSel0 = 0;var iTemp4 = 0;var fTemp5 = 0.;var iTemp6 = 0;var iTemp7 = 0;var iTemp8 = 0;var iTemp9 = 0;var iTemp10 = 0;var iTemp11 = 0;var iTemp12 = 0;var iTemp13 = 0;var iTemp14 = 0;var iTemp15 = 0;var iTemp16 = 0;var iSel1 = 0;var iTemp17 = 0;var iTemp18 = 0;var iTemp19 = 0;var iTemp20 = 0;var iTemp21 = 0;var iTemp22 = 0;var iTemp23 = 0;var iTemp24 = 0;var iTemp25 = 0;var iTemp26 = 0;var iTemp27 = 0;var iTemp28 = 0;var iSel2 = 0;var iTemp29 = 0;var iTemp30 = 0;var iTemp31 = 0;var iTemp32 = 0;var iTemp33 = 0;var iTemp34 = 0;var iTemp35 = 0;var iTemp36 = 0;var iTemp37 = 0;var iTemp38 = 0;var iTemp39 = 0;output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);fSlow0 = +(+(HEAPF32[dsp + 23748 >> 2]));fSlow1 = +(0.5 * +(powf(0.001, +(0.000955564 / +(fSlow0)))));fSlow2 = +(+(HEAPF32[dsp + 23764 >> 2]));iSlow3 = ((+(fSlow2) <= 0.) | 0);iSlow4 = ~~(+(+(HEAPF32[dsp + 23772 >> 2])));iSlow5 = ((+((iSlow4 | 0)) <= 0.) | 0);fSlow6 = +(0.5 * +(powf(0.001, +(0.00191113 / +(fSlow0)))));fSlow7 = +(0.5 * +(powf(0.001, +(0.00170262 / +(fSlow0)))));fSlow8 = +(0.5 * +(powf(0.001, +(0.00151686 / +(fSlow0)))));fSlow9 = +(0.5 * +(powf(0.001, +(0.00127553 / +(fSlow0)))));fSlow10 = +(0.5 * +(powf(0.001, +(0.00113636 / +(fSlow0)))));fSlow11 = +(0.5 * +(powf(0.001, +(0.000851311 / +(fSlow0)))));fSlow12 = +(0.5 * +(powf(0.001, +(0.000758432 / +(fSlow0)))));fSlow13 = +(0.5 * +(powf(0.001, +(0.000637763 / +(fSlow0)))));fSlow14 = +(0.5 * +(powf(0.001, +(0.000568182 / +(fSlow0)))));fSlow15 = +(0.5 * +(powf(0.001, +(0.000477782 / +(fSlow0)))));iSlow16 = ~~(+(+(HEAPF32[dsp + 23784 >> 2])));iSlow17 = ((+((iSlow16 | 0)) <= 0.) | 0);fSlow18 = +(0.5 * +(powf(0.001, +(0.00764451 / +(fSlow0)))));fSlow19 = +(0.5 * +(powf(0.001, +(0.00681049 / +(fSlow0)))));fSlow20 = +(0.5 * +(powf(0.001, +(0.00606745 / +(fSlow0)))));fSlow21 = +(0.5 * +(powf(0.001, +(0.0051021 / +(fSlow0)))));fSlow22 = +(0.5 * +(powf(0.001, +(0.00454545 / +(fSlow0)))));fSlow23 = +(0.5 * +(powf(0.001, +(0.00382226 / +(fSlow0)))));fSlow24 = +(0.5 * +(powf(0.001, +(0.00340524 / +(fSlow0)))));fSlow25 = +(0.5 * +(powf(0.001, +(0.00303373 / +(fSlow0)))));fSlow26 = +(0.5 * +(powf(0.001, +(0.00255105 / +(fSlow0)))));fSlow27 = +(0.5 * +(powf(0.001, +(0.00227273 / +(fSlow0)))));iSlow28 = ~~(+(+(HEAPF32[dsp + 23792 >> 2])));iSlow29 = ((+((iSlow28 | 0)) <= 0.) | 0);for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAP32[dsp + 23052 + (0 << 2) >> 2] = ((((1 + (HEAP32[dsp + 23052 + (1 << 2) >> 2] | 0)) | 0) % (HEAP32[dsp + 23760 >> 2] | 0)) | 0);iTemp0 = (((HEAP32[dsp + 23052 + (0 << 2) >> 2] | 0) == 0) | 0);HEAP32[dsp + 23060 + (0 << 2) >> 2] = (iTemp0 | 0);HEAPF32[dsp + 23068 + (0 << 2) >> 2] = +(fSlow2);fSel0 = 0.;if (((HEAP32[dsp + 23060 + (1 << 2) >> 2] | 0) != 0) | 0) {fSel0 = 0.;} else {fSel0 = +(+(HEAPF32[dsp + 23076 + (1 << 2) >> 2]) + +(fabsf(+(+(fSlow2) - +(HEAPF32[dsp + 23068 + (1 << 2) >> 2])))));}HEAPF32[dsp + 23076 + (0 << 2) >> 2] = +(fSel0);HEAP32[dsp + 23084 + (0 << 2) >> 2] = (((((iTemp0 | 0) + (HEAP32[dsp + 23084 + (1 << 2) >> 2] | 0)) | 0) % 15) | 0);HEAPF32[dsp + 22400 + ((((((iTemp0 | 0) & ((((+(HEAPF32[dsp + 23076 + (0 << 2) >> 2]) > 0.) | 0) | (iSlow3 | 0)) | 0)) | 0)?(HEAP32[dsp + 23084 + (0 << 2) >> 2] | 0):15) | 0) << 2) >> 2] = +(fSlow2);fTemp1 = +(1. + +(HEAPF32[dsp + 22400 + ((HEAP32[dsp + 23084 + (0 << 2) >> 2] | 0) << 2) >> 2]));fTemp2 = +(1. - +(HEAPF32[dsp + 22400 + ((HEAP32[dsp + 23084 + (0 << 2) >> 2] | 0) << 2) >> 2]));HEAP32[dsp + 23092 + (0 << 2) >> 2] = ((12345 + (imul(1103515245, (HEAP32[dsp + 23092 + (1 << 2) >> 2] | 0)) | 0)) | 0);HEAP32[dsp + 23100 + (0 << 2) >> 2] = ((((1 + (HEAP32[dsp + 23100 + (1 << 2) >> 2] | 0)) | 0) % (HEAP32[dsp + 23768 >> 2] | 0)) | 0);iTemp3 = (((HEAP32[dsp + 23100 + (0 << 2) >> 2] | 0) == 0) | 0);HEAP32[dsp + 23108 + (0 << 2) >> 2] = (iTemp3 | 0);HEAP32[dsp + 23116 + (0 << 2) >> 2] = (iSlow4 | 0);iSel0 = 0;if (((HEAP32[dsp + 23108 + (1 << 2) >> 2] | 0) != 0) | 0) {iSel0 = 0;} else {iSel0 = (((HEAP32[dsp + 23124 + (1 << 2) >> 2] | 0) + ((abs((((iSlow4 | 0) - (HEAP32[dsp + 23116 + (1 << 2) >> 2] | 0)) | 0))) | 0)) | 0);}HEAP32[dsp + 23124 + (0 << 2) >> 2] = (iSel0 | 0);HEAP32[dsp + 23132 + (0 << 2) >> 2] = (((((iTemp3 | 0) + (HEAP32[dsp + 23132 + (1 << 2) >> 2] | 0)) | 0) % 15) | 0);HEAPF32[dsp + 22464 + ((((((iTemp3 | 0) & (((((HEAP32[dsp + 23124 + (0 << 2) >> 2] | 0) > 0) | 0) | (iSlow5 | 0)) | 0)) | 0)?(HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0):15) | 0) << 2) >> 2] = +((iSlow4 | 0));iTemp4 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 6.))) < 0.5) | 0);HEAP32[dsp + 23140 + (0 << 2) >> 2] = (iTemp4 | 0);HEAPF32[dsp + 23148 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23148 + (1 << 2) >> 2]) + +(((+((((iTemp4 | 0) - (HEAP32[dsp + 23140 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0237302 * +(((+(HEAPF32[dsp + 23148 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 19968 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(+(fSlow1) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22656 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22656 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23148 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22656 + (0 << 2) >> 2] = +(HEAPF32[dsp + 19968 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 41) | 0) & 63) | 0) << 2) >> 2]);fTemp5 = +(0.707107 * +(HEAPF32[dsp + 22656 + (0 << 2) >> 2]));iTemp6 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 1.))) < 0.5) | 0);HEAP32[dsp + 23156 + (0 << 2) >> 2] = (iTemp6 | 0);HEAPF32[dsp + 23164 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23164 + (1 << 2) >> 2]) + +(((+((((iTemp6 | 0) - (HEAP32[dsp + 23156 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0118651 * +(((+(HEAPF32[dsp + 23164 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 14336 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow6) * +(+(+(fTemp2) * +(HEAPF32[dsp + 22668 + (2 << 2) >> 2])) + +(+(fTemp1) * +(HEAPF32[dsp + 22668 + (1 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23164 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22668 + (0 << 2) >> 2] = +(HEAPF32[dsp + 14336 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 83) | 0) & 127) | 0) << 2) >> 2]);iTemp7 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 2.))) < 0.5) | 0);HEAP32[dsp + 23172 + (0 << 2) >> 2] = (iTemp7 | 0);HEAPF32[dsp + 23180 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23180 + (1 << 2) >> 2]) + +(((+((((iTemp7 | 0) - (HEAP32[dsp + 23172 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0133181 * +(((+(HEAPF32[dsp + 23180 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 14848 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow7) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22680 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22680 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23180 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22680 + (0 << 2) >> 2] = +(HEAPF32[dsp + 14848 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 74) | 0) & 127) | 0) << 2) >> 2]);iTemp8 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 3.))) < 0.5) | 0);HEAP32[dsp + 23188 + (0 << 2) >> 2] = (iTemp8 | 0);HEAPF32[dsp + 23196 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23196 + (1 << 2) >> 2]) + +(((+((((iTemp8 | 0) - (HEAP32[dsp + 23188 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0149491 * +(((+(HEAPF32[dsp + 23196 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 15360 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow8) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22692 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22692 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23196 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22692 + (0 << 2) >> 2] = +(HEAPF32[dsp + 15360 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 65) | 0) & 127) | 0) << 2) >> 2]);iTemp9 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 4.))) < 0.5) | 0);HEAP32[dsp + 23204 + (0 << 2) >> 2] = (iTemp9 | 0);HEAPF32[dsp + 23212 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23212 + (1 << 2) >> 2]) + +(((+((((iTemp9 | 0) - (HEAP32[dsp + 23204 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0177776 * +(((+(HEAPF32[dsp + 23212 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 20224 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(+(fSlow9) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22704 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22704 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23212 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22704 + (0 << 2) >> 2] = +(HEAPF32[dsp + 20224 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 55) | 0) & 63) | 0) << 2) >> 2]);iTemp10 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 5.))) < 0.5) | 0);HEAP32[dsp + 23220 + (0 << 2) >> 2] = (iTemp10 | 0);HEAPF32[dsp + 23228 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23228 + (1 << 2) >> 2]) + +(((+((((iTemp10 | 0) - (HEAP32[dsp + 23220 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0199546 * +(((+(HEAPF32[dsp + 23228 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 20480 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(+(fSlow10) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22716 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22716 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23228 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22716 + (0 << 2) >> 2] = +(HEAPF32[dsp + 20480 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 49) | 0) & 63) | 0) << 2) >> 2]);iTemp11 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 7.))) < 0.5) | 0);HEAP32[dsp + 23236 + (0 << 2) >> 2] = (iTemp11 | 0);HEAPF32[dsp + 23244 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23244 + (1 << 2) >> 2]) + +(((+((((iTemp11 | 0) - (HEAP32[dsp + 23236 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0266363 * +(((+(HEAPF32[dsp + 23244 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 20736 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(+(fSlow11) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22728 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22728 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23244 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22728 + (0 << 2) >> 2] = +(HEAPF32[dsp + 20736 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 36) | 0) & 63) | 0) << 2) >> 2]);iTemp12 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 8.))) < 0.5) | 0);HEAP32[dsp + 23252 + (0 << 2) >> 2] = (iTemp12 | 0);HEAPF32[dsp + 23260 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23260 + (1 << 2) >> 2]) + +(((+((((iTemp12 | 0) - (HEAP32[dsp + 23252 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0298982 * +(((+(HEAPF32[dsp + 23260 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 20992 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(+(fSlow12) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22740 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22740 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23260 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22740 + (0 << 2) >> 2] = +(HEAPF32[dsp + 20992 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 32) | 0) & 63) | 0) << 2) >> 2]);iTemp13 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 9.))) < 0.5) | 0);HEAP32[dsp + 23268 + (0 << 2) >> 2] = (iTemp13 | 0);HEAPF32[dsp + 23276 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23276 + (1 << 2) >> 2]) + +(((+((((iTemp13 | 0) - (HEAP32[dsp + 23268 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0355551 * +(((+(HEAPF32[dsp + 23276 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 22016 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 31) | 0) << 2) >> 2] = +(+(+(fSlow13) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22752 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22752 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23276 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22752 + (0 << 2) >> 2] = +(HEAPF32[dsp + 22016 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 27) | 0) & 31) | 0) << 2) >> 2]);iTemp14 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 10.))) < 0.5) | 0);HEAP32[dsp + 23284 + (0 << 2) >> 2] = (iTemp14 | 0);HEAPF32[dsp + 23292 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23292 + (1 << 2) >> 2]) + +(((+((((iTemp14 | 0) - (HEAP32[dsp + 23284 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0399093 * +(((+(HEAPF32[dsp + 23292 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 22144 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 31) | 0) << 2) >> 2] = +(+(+(fSlow14) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22764 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22764 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23292 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22764 + (0 << 2) >> 2] = +(HEAPF32[dsp + 22144 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 24) | 0) & 31) | 0) << 2) >> 2]);iTemp15 = ((+(fabsf(+(+(HEAPF32[dsp + 22464 + ((HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 11.))) < 0.5) | 0);HEAP32[dsp + 23300 + (0 << 2) >> 2] = (iTemp15 | 0);HEAPF32[dsp + 23308 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23308 + (1 << 2) >> 2]) + +(((+((((iTemp15 | 0) - (HEAP32[dsp + 23300 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0474604 * +(((+(HEAPF32[dsp + 23308 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 22272 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 31) | 0) << 2) >> 2] = +(+(+(fSlow15) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22776 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22776 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23308 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22776 + (0 << 2) >> 2] = +(HEAPF32[dsp + 22272 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 20) | 0) & 31) | 0) << 2) >> 2]);HEAP32[dsp + 23316 + (0 << 2) >> 2] = ((((1 + (HEAP32[dsp + 23316 + (1 << 2) >> 2] | 0)) | 0) % (HEAP32[dsp + 23780 >> 2] | 0)) | 0);iTemp16 = (((HEAP32[dsp + 23316 + (0 << 2) >> 2] | 0) == 0) | 0);HEAP32[dsp + 23324 + (0 << 2) >> 2] = (iTemp16 | 0);HEAP32[dsp + 23332 + (0 << 2) >> 2] = (iSlow16 | 0);iSel1 = 0;if (((HEAP32[dsp + 23324 + (1 << 2) >> 2] | 0) != 0) | 0) {iSel1 = 0;} else {iSel1 = (((HEAP32[dsp + 23340 + (1 << 2) >> 2] | 0) + ((abs((((iSlow16 | 0) - (HEAP32[dsp + 23332 + (1 << 2) >> 2] | 0)) | 0))) | 0)) | 0);}HEAP32[dsp + 23340 + (0 << 2) >> 2] = (iSel1 | 0);HEAP32[dsp + 23348 + (0 << 2) >> 2] = (((((iTemp16 | 0) + (HEAP32[dsp + 23348 + (1 << 2) >> 2] | 0)) | 0) % 15) | 0);HEAPF32[dsp + 22528 + ((((((iTemp16 | 0) & (((((HEAP32[dsp + 23340 + (0 << 2) >> 2] | 0) > 0) | 0) | (iSlow17 | 0)) | 0)) | 0)?(HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0):15) | 0) << 2) >> 2] = +((iSlow16 | 0));iTemp17 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 11.))) < 0.5) | 0);HEAP32[dsp + 23356 + (0 << 2) >> 2] = (iTemp17 | 0);HEAPF32[dsp + 23364 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23364 + (1 << 2) >> 2]) + +(((+((((iTemp17 | 0) - (HEAP32[dsp + 23356 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0118651 * +(((+(HEAPF32[dsp + 23364 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 15872 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow6) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22788 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22788 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23364 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22788 + (0 << 2) >> 2] = +(HEAPF32[dsp + 15872 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 83) | 0) & 127) | 0) << 2) >> 2]);iTemp18 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 1.))) < 0.5) | 0);HEAP32[dsp + 23372 + (0 << 2) >> 2] = (iTemp18 | 0);HEAPF32[dsp + 23380 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23380 + (1 << 2) >> 2]) + +(((+((((iTemp18 | 0) - (HEAP32[dsp + 23372 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00296628 * +(((+(HEAPF32[dsp + 23380 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 0 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(+(fSlow18) * +(+(+(HEAPF32[dsp + 22800 + (1 << 2) >> 2]) * +(fTemp1)) + +(+(HEAPF32[dsp + 22800 + (2 << 2) >> 2]) * +(fTemp2)))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23380 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22800 + (0 << 2) >> 2] = +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 336) | 0) & 511) | 0) << 2) >> 2]);iTemp19 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 2.))) < 0.5) | 0);HEAP32[dsp + 23388 + (0 << 2) >> 2] = (iTemp19 | 0);HEAPF32[dsp + 23396 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23396 + (1 << 2) >> 2]) + +(((+((((iTemp19 | 0) - (HEAP32[dsp + 23388 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00332953 * +(((+(HEAPF32[dsp + 23396 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 2048 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(+(fSlow19) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22812 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22812 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23396 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22812 + (0 << 2) >> 2] = +(HEAPF32[dsp + 2048 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 299) | 0) & 511) | 0) << 2) >> 2]);iTemp20 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 3.))) < 0.5) | 0);HEAP32[dsp + 23404 + (0 << 2) >> 2] = (iTemp20 | 0);HEAPF32[dsp + 23412 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23412 + (1 << 2) >> 2]) + +(((+((((iTemp20 | 0) - (HEAP32[dsp + 23404 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00373727 * +(((+(HEAPF32[dsp + 23412 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 4096 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(+(fSlow20) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22824 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22824 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23412 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22824 + (0 << 2) >> 2] = +(HEAPF32[dsp + 4096 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 266) | 0) & 511) | 0) << 2) >> 2]);iTemp21 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 4.))) < 0.5) | 0);HEAP32[dsp + 23420 + (0 << 2) >> 2] = (iTemp21 | 0);HEAPF32[dsp + 23428 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23428 + (1 << 2) >> 2]) + +(((+((((iTemp21 | 0) - (HEAP32[dsp + 23420 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00444439 * +(((+(HEAPF32[dsp + 23428 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 6144 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(+(fSlow21) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22836 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22836 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23428 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22836 + (0 << 2) >> 2] = +(HEAPF32[dsp + 6144 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 224) | 0) & 255) | 0) << 2) >> 2]);iTemp22 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 5.))) < 0.5) | 0);HEAP32[dsp + 23436 + (0 << 2) >> 2] = (iTemp22 | 0);HEAPF32[dsp + 23444 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23444 + (1 << 2) >> 2]) + +(((+((((iTemp22 | 0) - (HEAP32[dsp + 23436 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00498866 * +(((+(HEAPF32[dsp + 23444 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 7168 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(+(fSlow22) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22848 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22848 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23444 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22848 + (0 << 2) >> 2] = +(HEAPF32[dsp + 7168 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 199) | 0) & 255) | 0) << 2) >> 2]);iTemp23 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 6.))) < 0.5) | 0);HEAP32[dsp + 23452 + (0 << 2) >> 2] = (iTemp23 | 0);HEAPF32[dsp + 23460 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23460 + (1 << 2) >> 2]) + +(((+((((iTemp23 | 0) - (HEAP32[dsp + 23452 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00593255 * +(((+(HEAPF32[dsp + 23460 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 8192 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(+(fSlow23) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22860 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22860 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23460 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22860 + (0 << 2) >> 2] = +(HEAPF32[dsp + 8192 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 167) | 0) & 255) | 0) << 2) >> 2]);iTemp24 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 7.))) < 0.5) | 0);HEAP32[dsp + 23468 + (0 << 2) >> 2] = (iTemp24 | 0);HEAPF32[dsp + 23476 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23476 + (1 << 2) >> 2]) + +(((+((((iTemp24 | 0) - (HEAP32[dsp + 23468 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00665906 * +(((+(HEAPF32[dsp + 23476 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 9216 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(+(fSlow24) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22872 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22872 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23476 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22872 + (0 << 2) >> 2] = +(HEAPF32[dsp + 9216 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 149) | 0) & 255) | 0) << 2) >> 2]);iTemp25 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 8.))) < 0.5) | 0);HEAP32[dsp + 23484 + (0 << 2) >> 2] = (iTemp25 | 0);HEAPF32[dsp + 23492 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23492 + (1 << 2) >> 2]) + +(((+((((iTemp25 | 0) - (HEAP32[dsp + 23484 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00747455 * +(((+(HEAPF32[dsp + 23492 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 10240 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(+(fSlow25) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22884 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22884 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23492 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22884 + (0 << 2) >> 2] = +(HEAPF32[dsp + 10240 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 132) | 0) & 255) | 0) << 2) >> 2]);iTemp26 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 9.))) < 0.5) | 0);HEAP32[dsp + 23500 + (0 << 2) >> 2] = (iTemp26 | 0);HEAPF32[dsp + 23508 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23508 + (1 << 2) >> 2]) + +(((+((((iTemp26 | 0) - (HEAP32[dsp + 23500 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00888879 * +(((+(HEAPF32[dsp + 23508 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 16384 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow26) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22896 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22896 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23508 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22896 + (0 << 2) >> 2] = +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 111) | 0) & 127) | 0) << 2) >> 2]);iTemp27 = ((+(fabsf(+(+(HEAPF32[dsp + 22528 + ((HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 10.))) < 0.5) | 0);HEAP32[dsp + 23516 + (0 << 2) >> 2] = (iTemp27 | 0);HEAPF32[dsp + 23524 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23524 + (1 << 2) >> 2]) + +(((+((((iTemp27 | 0) - (HEAP32[dsp + 23516 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00997732 * +(((+(HEAPF32[dsp + 23524 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 16896 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow27) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22908 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22908 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23524 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22908 + (0 << 2) >> 2] = +(HEAPF32[dsp + 16896 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 99) | 0) & 127) | 0) << 2) >> 2]);HEAP32[dsp + 23532 + (0 << 2) >> 2] = ((((1 + (HEAP32[dsp + 23532 + (1 << 2) >> 2] | 0)) | 0) % (HEAP32[dsp + 23788 >> 2] | 0)) | 0);iTemp28 = (((HEAP32[dsp + 23532 + (0 << 2) >> 2] | 0) == 0) | 0);HEAP32[dsp + 23540 + (0 << 2) >> 2] = (iTemp28 | 0);HEAP32[dsp + 23548 + (0 << 2) >> 2] = (iSlow28 | 0);iSel2 = 0;if (((HEAP32[dsp + 23540 + (1 << 2) >> 2] | 0) != 0) | 0) {iSel2 = 0;} else {iSel2 = (((HEAP32[dsp + 23556 + (1 << 2) >> 2] | 0) + ((abs((((iSlow28 | 0) - (HEAP32[dsp + 23548 + (1 << 2) >> 2] | 0)) | 0))) | 0)) | 0);}HEAP32[dsp + 23556 + (0 << 2) >> 2] = (iSel2 | 0);HEAP32[dsp + 23564 + (0 << 2) >> 2] = (((((iTemp28 | 0) + (HEAP32[dsp + 23564 + (1 << 2) >> 2] | 0)) | 0) % 15) | 0);HEAPF32[dsp + 22592 + ((((((iTemp28 | 0) & (((((HEAP32[dsp + 23556 + (0 << 2) >> 2] | 0) > 0) | 0) | (iSlow29 | 0)) | 0)) | 0)?(HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0):15) | 0) << 2) >> 2] = +((iSlow28 | 0));iTemp29 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 11.))) < 0.5) | 0);HEAP32[dsp + 23572 + (0 << 2) >> 2] = (iTemp29 | 0);HEAPF32[dsp + 23580 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23580 + (1 << 2) >> 2]) + +(((+((((iTemp29 | 0) - (HEAP32[dsp + 23572 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0237302 * +(((+(HEAPF32[dsp + 23580 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 21248 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(+(fSlow1) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22920 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22920 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23580 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22920 + (0 << 2) >> 2] = +(HEAPF32[dsp + 21248 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 41) | 0) & 63) | 0) << 2) >> 2]);iTemp30 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 1.))) < 0.5) | 0);HEAP32[dsp + 23588 + (0 << 2) >> 2] = (iTemp30 | 0);HEAPF32[dsp + 23596 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23596 + (1 << 2) >> 2]) + +(((+((((iTemp30 | 0) - (HEAP32[dsp + 23588 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00593255 * +(((+(HEAPF32[dsp + 23596 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 11264 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(+(fSlow23) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22932 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22932 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23596 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22932 + (0 << 2) >> 2] = +(HEAPF32[dsp + 11264 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 167) | 0) & 255) | 0) << 2) >> 2]);iTemp31 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 2.))) < 0.5) | 0);HEAP32[dsp + 23604 + (0 << 2) >> 2] = (iTemp31 | 0);HEAPF32[dsp + 23612 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23612 + (1 << 2) >> 2]) + +(((+((((iTemp31 | 0) - (HEAP32[dsp + 23604 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00665906 * +(((+(HEAPF32[dsp + 23612 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 12288 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(+(fSlow24) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22944 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22944 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23612 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22944 + (0 << 2) >> 2] = +(HEAPF32[dsp + 12288 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 149) | 0) & 255) | 0) << 2) >> 2]);iTemp32 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 3.))) < 0.5) | 0);HEAP32[dsp + 23620 + (0 << 2) >> 2] = (iTemp32 | 0);HEAPF32[dsp + 23628 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23628 + (1 << 2) >> 2]) + +(((+((((iTemp32 | 0) - (HEAP32[dsp + 23620 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00747455 * +(((+(HEAPF32[dsp + 23628 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 13312 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(+(fSlow25) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22956 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22956 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23628 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22956 + (0 << 2) >> 2] = +(HEAPF32[dsp + 13312 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 132) | 0) & 255) | 0) << 2) >> 2]);iTemp33 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 4.))) < 0.5) | 0);HEAP32[dsp + 23636 + (0 << 2) >> 2] = (iTemp33 | 0);HEAPF32[dsp + 23644 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23644 + (1 << 2) >> 2]) + +(((+((((iTemp33 | 0) - (HEAP32[dsp + 23636 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00888879 * +(((+(HEAPF32[dsp + 23644 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 17408 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow26) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22968 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22968 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23644 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22968 + (0 << 2) >> 2] = +(HEAPF32[dsp + 17408 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 111) | 0) & 127) | 0) << 2) >> 2]);iTemp34 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 5.))) < 0.5) | 0);HEAP32[dsp + 23652 + (0 << 2) >> 2] = (iTemp34 | 0);HEAPF32[dsp + 23660 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23660 + (1 << 2) >> 2]) + +(((+((((iTemp34 | 0) - (HEAP32[dsp + 23652 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.00997732 * +(((+(HEAPF32[dsp + 23660 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 17920 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow27) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22980 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22980 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23660 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22980 + (0 << 2) >> 2] = +(HEAPF32[dsp + 17920 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 99) | 0) & 127) | 0) << 2) >> 2]);iTemp35 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 6.))) < 0.5) | 0);HEAP32[dsp + 23668 + (0 << 2) >> 2] = (iTemp35 | 0);HEAPF32[dsp + 23676 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23676 + (1 << 2) >> 2]) + +(((+((((iTemp35 | 0) - (HEAP32[dsp + 23668 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0118651 * +(((+(HEAPF32[dsp + 23676 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 18432 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow6) * +(+(+(fTemp1) * +(HEAPF32[dsp + 22992 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 22992 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23676 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 22992 + (0 << 2) >> 2] = +(HEAPF32[dsp + 18432 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 83) | 0) & 127) | 0) << 2) >> 2]);iTemp36 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 7.))) < 0.5) | 0);HEAP32[dsp + 23684 + (0 << 2) >> 2] = (iTemp36 | 0);HEAPF32[dsp + 23692 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23692 + (1 << 2) >> 2]) + +(((+((((iTemp36 | 0) - (HEAP32[dsp + 23684 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0133181 * +(((+(HEAPF32[dsp + 23692 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 18944 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow7) * +(+(+(fTemp1) * +(HEAPF32[dsp + 23004 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 23004 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23692 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 23004 + (0 << 2) >> 2] = +(HEAPF32[dsp + 18944 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 74) | 0) & 127) | 0) << 2) >> 2]);iTemp37 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 8.))) < 0.5) | 0);HEAP32[dsp + 23700 + (0 << 2) >> 2] = (iTemp37 | 0);HEAPF32[dsp + 23708 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23708 + (1 << 2) >> 2]) + +(((+((((iTemp37 | 0) - (HEAP32[dsp + 23700 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0149491 * +(((+(HEAPF32[dsp + 23708 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 19456 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(+(fSlow8) * +(+(+(fTemp1) * +(HEAPF32[dsp + 23016 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 23016 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23708 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 23016 + (0 << 2) >> 2] = +(HEAPF32[dsp + 19456 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 65) | 0) & 127) | 0) << 2) >> 2]);iTemp38 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 9.))) < 0.5) | 0);HEAP32[dsp + 23716 + (0 << 2) >> 2] = (iTemp38 | 0);HEAPF32[dsp + 23724 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23724 + (1 << 2) >> 2]) + +(((+((((iTemp38 | 0) - (HEAP32[dsp + 23716 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0177776 * +(((+(HEAPF32[dsp + 23724 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 21504 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(+(fSlow9) * +(+(+(fTemp1) * +(HEAPF32[dsp + 23028 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 23028 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23724 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 23028 + (0 << 2) >> 2] = +(HEAPF32[dsp + 21504 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 55) | 0) & 63) | 0) << 2) >> 2]);iTemp39 = ((+(fabsf(+(+(HEAPF32[dsp + 22592 + ((HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 10.))) < 0.5) | 0);HEAP32[dsp + 23732 + (0 << 2) >> 2] = (iTemp39 | 0);HEAPF32[dsp + 23740 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 23740 + (1 << 2) >> 2]) + +(((+((((iTemp39 | 0) - (HEAP32[dsp + 23732 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0199546 * +(((+(HEAPF32[dsp + 23740 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 21760 + ((((HEAP32[dsp + 23776 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(+(fSlow10) * +(+(+(fTemp1) * +(HEAPF32[dsp + 23040 + (1 << 2) >> 2])) + +(+(fTemp2) * +(HEAPF32[dsp + 23040 + (2 << 2) >> 2])))) + +(4.65661e-10 * +((imul((HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 23740 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));HEAPF32[dsp + 23040 + (0 << 2) >> 2] = +(HEAPF32[dsp + 21760 + ((((((HEAP32[dsp + 23776 >> 2] | 0) - 49) | 0) & 63) | 0) << 2) >> 2]);HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(0.15 * +(+(+(+(+(+(+(+(fTemp5) + +(+(+(+(+(0.213201 * +(HEAPF32[dsp + 22668 + (0 << 2) >> 2])) + +(0.369274 * +(HEAPF32[dsp + 22680 + (0 << 2) >> 2]))) + +(0.476731 * +(HEAPF32[dsp + 22692 + (0 << 2) >> 2]))) + +(0.564076 * +(HEAPF32[dsp + 22704 + (0 << 2) >> 2]))) + +(0.639602 * +(HEAPF32[dsp + 22716 + (0 << 2) >> 2])))) + +(0.768706 * +(HEAPF32[dsp + 22728 + (0 << 2) >> 2]))) + +(0.825723 * +(HEAPF32[dsp + 22740 + (0 << 2) >> 2]))) + +(0.879049 * +(HEAPF32[dsp + 22752 + (0 << 2) >> 2]))) + +(0.92932 * +(HEAPF32[dsp + 22764 + (0 << 2) >> 2]))) + +(0.977008 * +(HEAPF32[dsp + 22776 + (0 << 2) >> 2]))) + +(+(+(+(+(+(+(+(+(+(+(+(0.977008 * +(HEAPF32[dsp + 22668 + (0 << 2) >> 2])) + +(0.92932 * +(HEAPF32[dsp + 22680 + (0 << 2) >> 2]))) + +(0.879049 * +(HEAPF32[dsp + 22692 + (0 << 2) >> 2]))) + +(0.825723 * +(HEAPF32[dsp + 22704 + (0 << 2) >> 2]))) + +(0.768706 * +(HEAPF32[dsp + 22716 + (0 << 2) >> 2]))) + +(fTemp5)) + +(0.639602 * +(HEAPF32[dsp + 22728 + (0 << 2) >> 2]))) + +(0.564076 * +(HEAPF32[dsp + 22740 + (0 << 2) >> 2]))) + +(0.476731 * +(HEAPF32[dsp + 22752 + (0 << 2) >> 2]))) + +(0.369274 * +(HEAPF32[dsp + 22764 + (0 << 2) >> 2]))) + +(0.213201 * +(HEAPF32[dsp + 22776 + (0 << 2) >> 2]))) + +(0.793473 * +(+(+(HEAPF32[dsp + 22788 + (0 << 2) >> 2]) + +(+(+(+(+(+(+(+(+(+(HEAPF32[dsp + 22800 + (0 << 2) >> 2]) + +(1.09106 * +(HEAPF32[dsp + 22812 + (0 << 2) >> 2]))) + +(1.13911 * +(HEAPF32[dsp + 22824 + (0 << 2) >> 2]))) + +(1.16769 * +(HEAPF32[dsp + 22836 + (0 << 2) >> 2]))) + +(1.18324 * +(HEAPF32[dsp + 22848 + (0 << 2) >> 2]))) + +(1.18821 * +(HEAPF32[dsp + 22860 + (0 << 2) >> 2]))) + +(1.18324 * +(HEAPF32[dsp + 22872 + (0 << 2) >> 2]))) + +(1.16769 * +(HEAPF32[dsp + 22884 + (0 << 2) >> 2]))) + +(1.13911 * +(HEAPF32[dsp + 22896 + (0 << 2) >> 2]))) + +(1.09106 * +(HEAPF32[dsp + 22908 + (0 << 2) >> 2])))) + +(+(HEAPF32[dsp + 22920 + (0 << 2) >> 2]) + +(+(+(+(+(+(+(+(+(+(HEAPF32[dsp + 22932 + (0 << 2) >> 2]) + +(1.09106 * +(HEAPF32[dsp + 22944 + (0 << 2) >> 2]))) + +(1.13911 * +(HEAPF32[dsp + 22956 + (0 << 2) >> 2]))) + +(1.16769 * +(HEAPF32[dsp + 22968 + (0 << 2) >> 2]))) + +(1.18324 * +(HEAPF32[dsp + 22980 + (0 << 2) >> 2]))) + +(1.18821 * +(HEAPF32[dsp + 22992 + (0 << 2) >> 2]))) + +(1.18324 * +(HEAPF32[dsp + 23004 + (0 << 2) >> 2]))) + +(1.16769 * +(HEAPF32[dsp + 23016 + (0 << 2) >> 2]))) + +(1.13911 * +(HEAPF32[dsp + 23028 + (0 << 2) >> 2]))) + +(1.09106 * +(HEAPF32[dsp + 23040 + (0 << 2) >> 2]))))))))));HEAP32[dsp + 23052 + (1 << 2) >> 2] = (HEAP32[dsp + 23052 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23060 + (1 << 2) >> 2] = (HEAP32[dsp + 23060 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23068 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23068 + (0 << 2) >> 2]);HEAPF32[dsp + 23076 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23076 + (0 << 2) >> 2]);HEAP32[dsp + 23084 + (1 << 2) >> 2] = (HEAP32[dsp + 23084 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23092 + (1 << 2) >> 2] = (HEAP32[dsp + 23092 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23100 + (1 << 2) >> 2] = (HEAP32[dsp + 23100 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23108 + (1 << 2) >> 2] = (HEAP32[dsp + 23108 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23116 + (1 << 2) >> 2] = (HEAP32[dsp + 23116 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23124 + (1 << 2) >> 2] = (HEAP32[dsp + 23124 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23132 + (1 << 2) >> 2] = (HEAP32[dsp + 23132 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23140 + (1 << 2) >> 2] = (HEAP32[dsp + 23140 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23148 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23148 + (0 << 2) >> 2]);HEAP32[dsp + 23776 >> 2] = (((HEAP32[dsp + 23776 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 22656 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22656 + (1 << 2) >> 2]);HEAPF32[dsp + 22656 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22656 + (0 << 2) >> 2]);HEAP32[dsp + 23156 + (1 << 2) >> 2] = (HEAP32[dsp + 23156 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23164 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23164 + (0 << 2) >> 2]);HEAPF32[dsp + 22668 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22668 + (1 << 2) >> 2]);HEAPF32[dsp + 22668 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22668 + (0 << 2) >> 2]);HEAP32[dsp + 23172 + (1 << 2) >> 2] = (HEAP32[dsp + 23172 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23180 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23180 + (0 << 2) >> 2]);HEAPF32[dsp + 22680 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22680 + (1 << 2) >> 2]);HEAPF32[dsp + 22680 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22680 + (0 << 2) >> 2]);HEAP32[dsp + 23188 + (1 << 2) >> 2] = (HEAP32[dsp + 23188 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23196 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23196 + (0 << 2) >> 2]);HEAPF32[dsp + 22692 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22692 + (1 << 2) >> 2]);HEAPF32[dsp + 22692 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22692 + (0 << 2) >> 2]);HEAP32[dsp + 23204 + (1 << 2) >> 2] = (HEAP32[dsp + 23204 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23212 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23212 + (0 << 2) >> 2]);HEAPF32[dsp + 22704 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22704 + (1 << 2) >> 2]);HEAPF32[dsp + 22704 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22704 + (0 << 2) >> 2]);HEAP32[dsp + 23220 + (1 << 2) >> 2] = (HEAP32[dsp + 23220 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23228 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23228 + (0 << 2) >> 2]);HEAPF32[dsp + 22716 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22716 + (1 << 2) >> 2]);HEAPF32[dsp + 22716 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22716 + (0 << 2) >> 2]);HEAP32[dsp + 23236 + (1 << 2) >> 2] = (HEAP32[dsp + 23236 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23244 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23244 + (0 << 2) >> 2]);HEAPF32[dsp + 22728 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22728 + (1 << 2) >> 2]);HEAPF32[dsp + 22728 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22728 + (0 << 2) >> 2]);HEAP32[dsp + 23252 + (1 << 2) >> 2] = (HEAP32[dsp + 23252 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23260 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23260 + (0 << 2) >> 2]);HEAPF32[dsp + 22740 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22740 + (1 << 2) >> 2]);HEAPF32[dsp + 22740 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22740 + (0 << 2) >> 2]);HEAP32[dsp + 23268 + (1 << 2) >> 2] = (HEAP32[dsp + 23268 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23276 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23276 + (0 << 2) >> 2]);HEAPF32[dsp + 22752 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22752 + (1 << 2) >> 2]);HEAPF32[dsp + 22752 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22752 + (0 << 2) >> 2]);HEAP32[dsp + 23284 + (1 << 2) >> 2] = (HEAP32[dsp + 23284 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23292 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23292 + (0 << 2) >> 2]);HEAPF32[dsp + 22764 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22764 + (1 << 2) >> 2]);HEAPF32[dsp + 22764 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22764 + (0 << 2) >> 2]);HEAP32[dsp + 23300 + (1 << 2) >> 2] = (HEAP32[dsp + 23300 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23308 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23308 + (0 << 2) >> 2]);HEAPF32[dsp + 22776 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22776 + (1 << 2) >> 2]);HEAPF32[dsp + 22776 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22776 + (0 << 2) >> 2]);HEAP32[dsp + 23316 + (1 << 2) >> 2] = (HEAP32[dsp + 23316 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23324 + (1 << 2) >> 2] = (HEAP32[dsp + 23324 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23332 + (1 << 2) >> 2] = (HEAP32[dsp + 23332 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23340 + (1 << 2) >> 2] = (HEAP32[dsp + 23340 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23348 + (1 << 2) >> 2] = (HEAP32[dsp + 23348 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23356 + (1 << 2) >> 2] = (HEAP32[dsp + 23356 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23364 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23364 + (0 << 2) >> 2]);HEAPF32[dsp + 22788 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22788 + (1 << 2) >> 2]);HEAPF32[dsp + 22788 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22788 + (0 << 2) >> 2]);HEAP32[dsp + 23372 + (1 << 2) >> 2] = (HEAP32[dsp + 23372 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23380 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23380 + (0 << 2) >> 2]);HEAPF32[dsp + 22800 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22800 + (1 << 2) >> 2]);HEAPF32[dsp + 22800 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22800 + (0 << 2) >> 2]);HEAP32[dsp + 23388 + (1 << 2) >> 2] = (HEAP32[dsp + 23388 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23396 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23396 + (0 << 2) >> 2]);HEAPF32[dsp + 22812 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22812 + (1 << 2) >> 2]);HEAPF32[dsp + 22812 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22812 + (0 << 2) >> 2]);HEAP32[dsp + 23404 + (1 << 2) >> 2] = (HEAP32[dsp + 23404 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23412 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23412 + (0 << 2) >> 2]);HEAPF32[dsp + 22824 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22824 + (1 << 2) >> 2]);HEAPF32[dsp + 22824 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22824 + (0 << 2) >> 2]);HEAP32[dsp + 23420 + (1 << 2) >> 2] = (HEAP32[dsp + 23420 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23428 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23428 + (0 << 2) >> 2]);HEAPF32[dsp + 22836 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22836 + (1 << 2) >> 2]);HEAPF32[dsp + 22836 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22836 + (0 << 2) >> 2]);HEAP32[dsp + 23436 + (1 << 2) >> 2] = (HEAP32[dsp + 23436 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23444 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23444 + (0 << 2) >> 2]);HEAPF32[dsp + 22848 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22848 + (1 << 2) >> 2]);HEAPF32[dsp + 22848 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22848 + (0 << 2) >> 2]);HEAP32[dsp + 23452 + (1 << 2) >> 2] = (HEAP32[dsp + 23452 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23460 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23460 + (0 << 2) >> 2]);HEAPF32[dsp + 22860 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22860 + (1 << 2) >> 2]);HEAPF32[dsp + 22860 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22860 + (0 << 2) >> 2]);HEAP32[dsp + 23468 + (1 << 2) >> 2] = (HEAP32[dsp + 23468 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23476 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23476 + (0 << 2) >> 2]);HEAPF32[dsp + 22872 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22872 + (1 << 2) >> 2]);HEAPF32[dsp + 22872 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22872 + (0 << 2) >> 2]);HEAP32[dsp + 23484 + (1 << 2) >> 2] = (HEAP32[dsp + 23484 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23492 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23492 + (0 << 2) >> 2]);HEAPF32[dsp + 22884 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22884 + (1 << 2) >> 2]);HEAPF32[dsp + 22884 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22884 + (0 << 2) >> 2]);HEAP32[dsp + 23500 + (1 << 2) >> 2] = (HEAP32[dsp + 23500 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23508 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23508 + (0 << 2) >> 2]);HEAPF32[dsp + 22896 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22896 + (1 << 2) >> 2]);HEAPF32[dsp + 22896 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22896 + (0 << 2) >> 2]);HEAP32[dsp + 23516 + (1 << 2) >> 2] = (HEAP32[dsp + 23516 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23524 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23524 + (0 << 2) >> 2]);HEAPF32[dsp + 22908 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22908 + (1 << 2) >> 2]);HEAPF32[dsp + 22908 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22908 + (0 << 2) >> 2]);HEAP32[dsp + 23532 + (1 << 2) >> 2] = (HEAP32[dsp + 23532 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23540 + (1 << 2) >> 2] = (HEAP32[dsp + 23540 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23548 + (1 << 2) >> 2] = (HEAP32[dsp + 23548 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23556 + (1 << 2) >> 2] = (HEAP32[dsp + 23556 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23564 + (1 << 2) >> 2] = (HEAP32[dsp + 23564 + (0 << 2) >> 2] | 0);HEAP32[dsp + 23572 + (1 << 2) >> 2] = (HEAP32[dsp + 23572 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23580 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23580 + (0 << 2) >> 2]);HEAPF32[dsp + 22920 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22920 + (1 << 2) >> 2]);HEAPF32[dsp + 22920 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22920 + (0 << 2) >> 2]);HEAP32[dsp + 23588 + (1 << 2) >> 2] = (HEAP32[dsp + 23588 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23596 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23596 + (0 << 2) >> 2]);HEAPF32[dsp + 22932 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22932 + (1 << 2) >> 2]);HEAPF32[dsp + 22932 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22932 + (0 << 2) >> 2]);HEAP32[dsp + 23604 + (1 << 2) >> 2] = (HEAP32[dsp + 23604 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23612 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23612 + (0 << 2) >> 2]);HEAPF32[dsp + 22944 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22944 + (1 << 2) >> 2]);HEAPF32[dsp + 22944 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22944 + (0 << 2) >> 2]);HEAP32[dsp + 23620 + (1 << 2) >> 2] = (HEAP32[dsp + 23620 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23628 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23628 + (0 << 2) >> 2]);HEAPF32[dsp + 22956 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22956 + (1 << 2) >> 2]);HEAPF32[dsp + 22956 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22956 + (0 << 2) >> 2]);HEAP32[dsp + 23636 + (1 << 2) >> 2] = (HEAP32[dsp + 23636 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23644 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23644 + (0 << 2) >> 2]);HEAPF32[dsp + 22968 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22968 + (1 << 2) >> 2]);HEAPF32[dsp + 22968 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22968 + (0 << 2) >> 2]);HEAP32[dsp + 23652 + (1 << 2) >> 2] = (HEAP32[dsp + 23652 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23660 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23660 + (0 << 2) >> 2]);HEAPF32[dsp + 22980 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22980 + (1 << 2) >> 2]);HEAPF32[dsp + 22980 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22980 + (0 << 2) >> 2]);HEAP32[dsp + 23668 + (1 << 2) >> 2] = (HEAP32[dsp + 23668 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23676 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23676 + (0 << 2) >> 2]);HEAPF32[dsp + 22992 + (2 << 2) >> 2] = +(HEAPF32[dsp + 22992 + (1 << 2) >> 2]);HEAPF32[dsp + 22992 + (1 << 2) >> 2] = +(HEAPF32[dsp + 22992 + (0 << 2) >> 2]);HEAP32[dsp + 23684 + (1 << 2) >> 2] = (HEAP32[dsp + 23684 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23692 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23692 + (0 << 2) >> 2]);HEAPF32[dsp + 23004 + (2 << 2) >> 2] = +(HEAPF32[dsp + 23004 + (1 << 2) >> 2]);HEAPF32[dsp + 23004 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23004 + (0 << 2) >> 2]);HEAP32[dsp + 23700 + (1 << 2) >> 2] = (HEAP32[dsp + 23700 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23708 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23708 + (0 << 2) >> 2]);HEAPF32[dsp + 23016 + (2 << 2) >> 2] = +(HEAPF32[dsp + 23016 + (1 << 2) >> 2]);HEAPF32[dsp + 23016 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23016 + (0 << 2) >> 2]);HEAP32[dsp + 23716 + (1 << 2) >> 2] = (HEAP32[dsp + 23716 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23724 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23724 + (0 << 2) >> 2]);HEAPF32[dsp + 23028 + (2 << 2) >> 2] = +(HEAPF32[dsp + 23028 + (1 << 2) >> 2]);HEAPF32[dsp + 23028 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23028 + (0 << 2) >> 2]);HEAP32[dsp + 23732 + (1 << 2) >> 2] = (HEAP32[dsp + 23732 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 23740 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23740 + (0 << 2) >> 2]);HEAPF32[dsp + 23040 + (2 << 2) >> 2] = +(HEAPF32[dsp + 23040 + (1 << 2) >> 2]);HEAPF32[dsp + 23040 + (1 << 2) >> 2] = +(HEAPF32[dsp + 23040 + (0 << 2) >> 2]);}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp1() {return 23796;}function getPathTablemydsp1() {var pathTable = [];pathTable[\"/Kisana/Kisana/Resonance\"] = 23748;pathTable[\"/Kisana/Kisana/Brightness\"] = 23764;pathTable[\"/Kisana/Kisana/Instrument_Hands/3_(Note_72)\"] = 23772;pathTable[\"/Kisana/Kisana/Instrument_Hands/1_(Note_48)\"] = 23784;pathTable[\"/Kisana/Kisana/Instrument_Hands/2_(Note_60)\"] = 23792;return pathTable;}function getJSONmydsp1() {return \"{ \\\"name\\\": \\\"Kisana\\\", \\\"inputs\\\": \\\"0\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"author\\\": \\\"Yann Orlarey\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"name\\\": \\\"Kisana\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Kisana\\\", \\\"items\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Kisana\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hgroup\\\", \\\"label\\\": \\\"Instrument Hands\\\", \\\"meta\\\": [ { \\\"1\\\": \\\"\\\" } ], \\\"items\\\": [ { \\\"type\\\": \\\"vslider\\\", \\\"label\\\": \\\"1 (Note 48)\\\", \\\"address\\\": \\\"/Kisana/Kisana/Instrument_Hands/1_(Note_48)\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"1 1 -10 0 14\\\" }, { \\\"unit\\\": \\\"pk\\\" } ], \\\"init\\\": \\\"0\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"11\\\", \\\"step\\\": \\\"1\\\" }, { \\\"type\\\": \\\"vslider\\\", \\\"label\\\": \\\"2 (Note 60)\\\", \\\"address\\\": \\\"/Kisana/Kisana/Instrument_Hands/2_(Note_60)\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"1 1 -10 0 14\\\" }, { \\\"unit\\\": \\\"pk\\\" } ], \\\"init\\\": \\\"2\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"11\\\", \\\"step\\\": \\\"1\\\" }, { \\\"type\\\": \\\"vslider\\\", \\\"label\\\": \\\"3 (Note 72)\\\", \\\"address\\\": \\\"/Kisana/Kisana/Instrument_Hands/3_(Note_72)\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"1 1 -10 0 10\\\" }, { \\\"unit\\\": \\\"pk\\\" } ], \\\"init\\\": \\\"4\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"11\\\", \\\"step\\\": \\\"1\\\" } ] }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Brightness\\\", \\\"address\\\": \\\"/Kisana/Kisana/Brightness\\\", \\\"meta\\\": [ { \\\"2\\\": \\\"\\\" }, { \\\"acc\\\": \\\"0 0 -10 0 10\\\" } ], \\\"init\\\": \\\"0.2\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"1\\\", \\\"step\\\": \\\"0.01\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Resonance\\\", \\\"address\\\": \\\"/Kisana/Kisana/Resonance\\\", \\\"meta\\\": [ { \\\"3\\\": \\\"\\\" }, { \\\"acc\\\": \\\"2 0 -10 0 12\\\" } ], \\\"init\\\": \\\"4\\\", \\\"min\\\": \\\"0.1\\\", \\\"max\\\": \\\"10\\\", \\\"step\\\": \\\"0.01\\\" } ] } ] } ] } \";}function metadatamydsp1(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"author\", \"Yann Orlarey\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"name\", \"Kisana\");}"}},"2":{"patchId":"2","code":"process = vgroup(\"SAtonalSoftHarp\",environment{declare name \"Atonal Soft Harp\";\r\ndeclare author \"ER\"; //Adapted from NLFeks by Julius Smith and Romain Michon;\r\n\r\n\r\n/* =============== DESCRIPTION ======================== :\r\n\r\n- Soft Atonal Harp\r\n- Swing = Plucking all the strings one by one\r\n- Left = Slow rhythm /Low frequencies/ Silence\r\n- Right = Fast rhythm/ High frequencies\r\n- Back = Short and dry notes\r\n- Front = Long and bright notes\r\n\r\n\r\n*/\r\n\r\nimport(\"music.lib\"); // Define SR, delay\r\nimport(\"instrument.lib\");\r\nimport(\"effect.lib\"); // stereopanner\r\n\r\n//==================== INSTRUMENT =======================\r\n\r\nprocess = par(i, N, NFLeks(i)):>_;\r\n\r\nNFLeks(n) = filtered_excitation(n,P(freq(n)),freq(n)) : stringloop(freq(n));\r\n\r\n//==================== GUI SPECIFICATION ================\r\nN = 20;\r\nhand = hslider(\"h:[1]/Instrument Hand[acc:0 0 -10 0 10]\", 10, 0, N, 1) : automat(bps, 15, 0.0)// => gate\r\nwith{\r\nbps = hslider(\"h:[1]/Speed[style:knob][acc:0 0 -10 0 10]\", 480, 180, 720, 1):smooth(0.999) : min(720) : max(180) : int;\r\n};\r\ngain = 1;\r\n\r\npickangle = 0.9;\r\n\r\nbeta = 0.5;\r\n\r\n// String decay time in seconds:\r\nt60 = hslider(\"h:[2]Reverberation/ Resonance[unit:s][acc:2 0 -10 0 10]\", 5, 0.5, 10, 0.01):min(10):max(0.5); // -60db decay time (sec)\r\n\r\nB = 0;\r\nL = -10 : db2linear;\r\n\r\n//---------------------------------- FREQUENCY TABLE ---------------------------\r\n\r\nfreq(0) = 200;\r\nfreq(1) = 215;\r\nfreq(2) = 230;\r\nfreq(3) = 245;\r\nfreq(4) = 260;\r\nfreq(5) = 275;\r\n\r\nfreq(d)\t = freq(d-6)*(2);\t\r\n\t\r\n\r\n//==================== SIGNAL PROCESSING ================\r\n\r\n//----------------------- noiseburst -------------------------\r\n// White noise burst (adapted from Faust's karplus.dsp example)\r\n// Requires music.lib (for noise)\r\nnoiseburst(d,e) = noise : *(trigger(d,e))\r\nwith{\r\nupfront(x) = (x-x') > 0;\r\ndecay(n,x) = x - (x>0)/n;\r\nrelease(n) = + ~ decay(n);\r\nposition(d) = abs(hand - d) < 0.5;\r\ntrigger(d,n) = position(d) : upfront : release(n) : > (0.0);\r\n};\r\n\r\n\r\nP(f) = SR/f ; // fundamental period in samples\r\nPmax = 4096; // maximum P (for delay-line allocation)\r\n\r\nppdel(f) = beta*P(f); // pick position delay\r\npickposfilter(f) = ffcombfilter(Pmax,ppdel(f),-1); // defined in filter.lib\r\n\r\nexcitation(d,e) = noiseburst(d,e) : *(gain); // defined in signal.lib\r\n\r\nrho(f) = pow(0.001,1.0/(f*t60)); // multiplies loop-gain\r\n\r\n// Original EKS damping filter:\r\nb1 = 0.5*B; b0 = 1.0-b1; // S and 1-S\r\ndampingfilter1(f,x) = rho(f) * ((b0 * x) + (b1 * x'));\r\n\r\n// Linear phase FIR3 damping filter:\r\nh0 = (1.0 + B)/2; h1 = (1.0 - B)/4;\r\ndampingfilter2(f,x) = rho(f) * (h0 * x' + h1*(x+x''));\r\n\r\nloopfilter(f) = dampingfilter2(f); // or dampingfilter1\r\n\r\nfiltered_excitation(d,e,f) = excitation(d,e) : smooth(pickangle) \r\n\t\t : pickposfilter(f) : levelfilter(L,f); // see filter.lib\r\n\r\nstringloop(f) = (+ : fdelay4(Pmax, P(f)-2)) ~ (loopfilter(f));\r\n\r\n}.process);","name":"SAtonalSoftHarp","x":"131","y":"450","inputs":{"source":[]},"outputs":{"destination":["7"]},"params":{"sliders":[{"path":"/SAtonalSoftHarp/0x00/Instrument_Hand","value":10},{"path":"/SAtonalSoftHarp/0x00/Speed","value":480},{"path":"/SAtonalSoftHarp/Reverberation/Resonance","value":5}]},"factory":{"name":"mydsp2","code":"/* ------------------------------------------------------------author: \"ER\"name: \"Atonal Soft Harp\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp2Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var fabsf = global.Math.abs;var max = global.Math.max;var min = global.Math.min;var powf = global.Math.pow;function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputsmydsp2SIG0(dsp) {dsp = dsp | 0;return 0;}function getNumOutputsmydsp2SIG0(dsp) {dsp = dsp | 0;return 1;}function instanceInitmydsp2SIG0(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function fillmydsp2SIG0(dsp, count, output) {dsp = dsp | 0;count = count | 0;output = output | 0;var i = 0;for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAPF32[output + ((i | 0) << 2) >> 2] = 0.;}}function getNumInputs(dsp) {dsp = dsp | 0;return 0;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;var i6 = 0;var i7 = 0;var i8 = 0;var i9 = 0;var i10 = 0;var i11 = 0;var i12 = 0;var i13 = 0;var i14 = 0;var i15 = 0;var i16 = 0;var i17 = 0;var i18 = 0;var i19 = 0;var i20 = 0;var i21 = 0;var i22 = 0;var i23 = 0;var i24 = 0;var i25 = 0;var i26 = 0;var i27 = 0;var i28 = 0;var i29 = 0;var i30 = 0;var i31 = 0;var i32 = 0;var i33 = 0;var i34 = 0;var i35 = 0;var i36 = 0;var i37 = 0;var i38 = 0;var i39 = 0;var i40 = 0;var i41 = 0;var i42 = 0;var i43 = 0;var i44 = 0;var i45 = 0;var i46 = 0;var i47 = 0;var i48 = 0;var i49 = 0;var i50 = 0;var i51 = 0;var i52 = 0;var i53 = 0;var i54 = 0;var i55 = 0;var i56 = 0;var i57 = 0;var i58 = 0;var i59 = 0;var i60 = 0;var i61 = 0;var i62 = 0;var i63 = 0;var i64 = 0;var i65 = 0;var i66 = 0;var i67 = 0;var i68 = 0;var i69 = 0;var i70 = 0;var i71 = 0;var i72 = 0;var i73 = 0;var i74 = 0;var i75 = 0;var i76 = 0;var i77 = 0;var i78 = 0;var i79 = 0;var i80 = 0;var i81 = 0;var i82 = 0;var i83 = 0;var i84 = 0;var i85 = 0;var i86 = 0;var i87 = 0;var i88 = 0;var i89 = 0;var i90 = 0;var i91 = 0;var i92 = 0;var i93 = 0;var i94 = 0;var i95 = 0;var i96 = 0;var i97 = 0;var i98 = 0;var i99 = 0;var i100 = 0;var i101 = 0;var i102 = 0;var i103 = 0;var i104 = 0;var i105 = 0;var i106 = 0;var i107 = 0;var i108 = 0;var i109 = 0;var i110 = 0;var i111 = 0;var i112 = 0;var i113 = 0;var i114 = 0;var i115 = 0;var i116 = 0;var i117 = 0;var i118 = 0;var i119 = 0;var i120 = 0;var i121 = 0;var i122 = 0;var i123 = 0;var i124 = 0;var i125 = 0;var i126 = 0;HEAP32[dsp + 350616 >> 2] = (samplingFreq | 0);HEAP32[dsp + 350620 >> 2] = ((min(192000, ((max(1, (HEAP32[dsp + 350616 >> 2] | 0))) | 0))) | 0);HEAPF32[dsp + 350624 >> 2] = +(0.005 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 350628 >> 2] = ~~(+(+(HEAPF32[dsp + 350624 >> 2]) - 3.49999));HEAPF32[dsp + 350632 >> 2] = +(+(HEAPF32[dsp + 350624 >> 2]) - +(+((HEAP32[dsp + 350628 >> 2] | 0)) + 3.));HEAPF32[dsp + 350636 >> 2] = +(+(HEAPF32[dsp + 350624 >> 2]) - +(4. + +((HEAP32[dsp + 350628 >> 2] | 0))));HEAPF32[dsp + 350640 >> 2] = +(+(HEAPF32[dsp + 350624 >> 2]) - +(5. + +((HEAP32[dsp + 350628 >> 2] | 0))));HEAPF32[dsp + 350644 >> 2] = +(+(HEAPF32[dsp + 350624 >> 2]) - +(+((HEAP32[dsp + 350628 >> 2] | 0)) + 6.));HEAPF32[dsp + 350648 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 350632 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 350636 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 350640 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 350644 >> 2]))));for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAP32[dsp + 350080 + ((i0 | 0) << 2) >> 2] = 0;}instanceInitmydsp2SIG0(dsp, (samplingFreq | 0));fillmydsp2SIG0(dsp, 16, (dsp + 349696 | 0));HEAP32[dsp + 350652 >> 2] = (imul(60, (HEAP32[dsp + 350620 >> 2] | 0)) | 0);HEAPF32[dsp + 350656 >> 2] = +(480.);for (i1 = 0; (((i1 | 0) < 2) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAPF32[dsp + 350088 + ((i1 | 0) << 2) >> 2] = 0.;}for (i2 = 0; (((i2 | 0) < 2) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAP32[dsp + 350096 + ((i2 | 0) << 2) >> 2] = 0;}for (i3 = 0; (((i3 | 0) < 2) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAP32[dsp + 350104 + ((i3 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 350660 >> 2] = +(10.);for (i4 = 0; (((i4 | 0) < 2) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAPF32[dsp + 350112 + ((i4 | 0) << 2) >> 2] = 0.;}for (i5 = 0; (((i5 | 0) < 2) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAPF32[dsp + 350120 + ((i5 | 0) << 2) >> 2] = 0.;}for (i6 = 0; (((i6 | 0) < 2) | 0); i6 = (((i6 | 0) + 1) | 0)) {HEAP32[dsp + 350128 + ((i6 | 0) << 2) >> 2] = 0;}for (i7 = 0; (((i7 | 0) < 2) | 0); i7 = (((i7 | 0) + 1) | 0)) {HEAP32[dsp + 350136 + ((i7 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 350664 >> 2] = +(200. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i8 = 0; (((i8 | 0) < 2) | 0); i8 = (((i8 | 0) + 1) | 0)) {HEAPF32[dsp + 350144 + ((i8 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 350668 >> 2] = 0;for (i9 = 0; (((i9 | 0) < 512) | 0); i9 = (((i9 | 0) + 1) | 0)) {HEAPF32[dsp + 327680 + ((i9 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 350672 >> 2] = +(0.0025 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 350676 >> 2] = ((~~(+(HEAPF32[dsp + 350672 >> 2])) & 4095) | 0);HEAPF32[dsp + 350680 >> 2] = +(5.);HEAPF32[dsp + 350684 >> 2] = +(628.319 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 350688 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 350684 >> 2])));HEAPF32[dsp + 350692 >> 2] = +(1. - +(HEAPF32[dsp + 350684 >> 2]));for (i10 = 0; (((i10 | 0) < 2) | 0); i10 = (((i10 | 0) + 1) | 0)) {HEAPF32[dsp + 350152 + ((i10 | 0) << 2) >> 2] = 0.;}for (i11 = 0; (((i11 | 0) < 4096) | 0); i11 = (((i11 | 0) + 1) | 0)) {HEAPF32[dsp + 0 + ((i11 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 350696 >> 2] = (((HEAP32[dsp + 350628 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 350700 >> 2] = +(+(HEAPF32[dsp + 350624 >> 2]) - +(2. + +((HEAP32[dsp + 350628 >> 2] | 0))));HEAPF32[dsp + 350704 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 350636 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 350640 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 350644 >> 2]))));HEAP32[dsp + 350708 >> 2] = ((((1 + (HEAP32[dsp + 350628 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350712 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 350632 >> 2]) * +(0. - +(HEAPF32[dsp + 350640 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 350644 >> 2])))));HEAP32[dsp + 350716 >> 2] = ((((2 + (HEAP32[dsp + 350628 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350720 >> 2] = +(+(HEAPF32[dsp + 350632 >> 2]) * +(HEAPF32[dsp + 350636 >> 2]));HEAPF32[dsp + 350724 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 350720 >> 2]) * +(0. - +(HEAPF32[dsp + 350644 >> 2]))));HEAP32[dsp + 350728 >> 2] = ((((3 + (HEAP32[dsp + 350628 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350732 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 350720 >> 2]) * +(HEAPF32[dsp + 350640 >> 2])));HEAP32[dsp + 350736 >> 2] = ((((4 + (HEAP32[dsp + 350628 >> 2] | 0)) | 0) & 4095) | 0);for (i12 = 0; (((i12 | 0) < 4) | 0); i12 = (((i12 | 0) + 1) | 0)) {HEAPF32[dsp + 349760 + ((i12 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 350740 >> 2] = +(0.00465116 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 350744 >> 2] = ~~(+(+(HEAPF32[dsp + 350740 >> 2]) - 3.49999));HEAPF32[dsp + 350748 >> 2] = +(+(HEAPF32[dsp + 350740 >> 2]) - +(+((HEAP32[dsp + 350744 >> 2] | 0)) + 3.));HEAPF32[dsp + 350752 >> 2] = +(+(HEAPF32[dsp + 350740 >> 2]) - +(4. + +((HEAP32[dsp + 350744 >> 2] | 0))));HEAPF32[dsp + 350756 >> 2] = +(+(HEAPF32[dsp + 350740 >> 2]) - +(5. + +((HEAP32[dsp + 350744 >> 2] | 0))));HEAPF32[dsp + 350760 >> 2] = +(+(HEAPF32[dsp + 350740 >> 2]) - +(+((HEAP32[dsp + 350744 >> 2] | 0)) + 6.));HEAPF32[dsp + 350764 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 350748 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 350752 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 350756 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 350760 >> 2]))));for (i13 = 0; (((i13 | 0) < 2) | 0); i13 = (((i13 | 0) + 1) | 0)) {HEAP32[dsp + 350160 + ((i13 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 350768 >> 2] = +(215. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i14 = 0; (((i14 | 0) < 2) | 0); i14 = (((i14 | 0) + 1) | 0)) {HEAPF32[dsp + 350168 + ((i14 | 0) << 2) >> 2] = 0.;}for (i15 = 0; (((i15 | 0) < 512) | 0); i15 = (((i15 | 0) + 1) | 0)) {HEAPF32[dsp + 329728 + ((i15 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 350772 >> 2] = +(0.00232558 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 350776 >> 2] = ((~~(+(HEAPF32[dsp + 350772 >> 2])) & 4095) | 0);HEAPF32[dsp + 350780 >> 2] = +(675.442 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 350784 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 350780 >> 2])));HEAPF32[dsp + 350788 >> 2] = +(1. - +(HEAPF32[dsp + 350780 >> 2]));for (i16 = 0; (((i16 | 0) < 2) | 0); i16 = (((i16 | 0) + 1) | 0)) {HEAPF32[dsp + 350176 + ((i16 | 0) << 2) >> 2] = 0.;}for (i17 = 0; (((i17 | 0) < 4096) | 0); i17 = (((i17 | 0) + 1) | 0)) {HEAPF32[dsp + 16384 + ((i17 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 350792 >> 2] = (((HEAP32[dsp + 350744 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 350796 >> 2] = +(+(HEAPF32[dsp + 350740 >> 2]) - +(2. + +((HEAP32[dsp + 350744 >> 2] | 0))));HEAPF32[dsp + 350800 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 350752 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 350756 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 350760 >> 2]))));HEAP32[dsp + 350804 >> 2] = ((((1 + (HEAP32[dsp + 350744 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350808 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 350748 >> 2]) * +(0. - +(HEAPF32[dsp + 350756 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 350760 >> 2])))));HEAP32[dsp + 350812 >> 2] = ((((2 + (HEAP32[dsp + 350744 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350816 >> 2] = +(+(HEAPF32[dsp + 350748 >> 2]) * +(HEAPF32[dsp + 350752 >> 2]));HEAPF32[dsp + 350820 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 350816 >> 2]) * +(0. - +(HEAPF32[dsp + 350760 >> 2]))));HEAP32[dsp + 350824 >> 2] = ((((3 + (HEAP32[dsp + 350744 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350828 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 350816 >> 2]) * +(HEAPF32[dsp + 350756 >> 2])));HEAP32[dsp + 350832 >> 2] = ((((4 + (HEAP32[dsp + 350744 >> 2] | 0)) | 0) & 4095) | 0);for (i18 = 0; (((i18 | 0) < 4) | 0); i18 = (((i18 | 0) + 1) | 0)) {HEAPF32[dsp + 349776 + ((i18 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 350836 >> 2] = +(0.00434783 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 350840 >> 2] = ~~(+(+(HEAPF32[dsp + 350836 >> 2]) - 3.49999));HEAPF32[dsp + 350844 >> 2] = +(+(HEAPF32[dsp + 350836 >> 2]) - +(+((HEAP32[dsp + 350840 >> 2] | 0)) + 3.));HEAPF32[dsp + 350848 >> 2] = +(+(HEAPF32[dsp + 350836 >> 2]) - +(4. + +((HEAP32[dsp + 350840 >> 2] | 0))));HEAPF32[dsp + 350852 >> 2] = +(+(HEAPF32[dsp + 350836 >> 2]) - +(5. + +((HEAP32[dsp + 350840 >> 2] | 0))));HEAPF32[dsp + 350856 >> 2] = +(+(HEAPF32[dsp + 350836 >> 2]) - +(+((HEAP32[dsp + 350840 >> 2] | 0)) + 6.));HEAPF32[dsp + 350860 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 350844 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 350848 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 350852 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 350856 >> 2]))));for (i19 = 0; (((i19 | 0) < 2) | 0); i19 = (((i19 | 0) + 1) | 0)) {HEAP32[dsp + 350184 + ((i19 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 350864 >> 2] = +(230. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i20 = 0; (((i20 | 0) < 2) | 0); i20 = (((i20 | 0) + 1) | 0)) {HEAPF32[dsp + 350192 + ((i20 | 0) << 2) >> 2] = 0.;}for (i21 = 0; (((i21 | 0) < 512) | 0); i21 = (((i21 | 0) + 1) | 0)) {HEAPF32[dsp + 331776 + ((i21 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 350868 >> 2] = +(0.00217391 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 350872 >> 2] = ((~~(+(HEAPF32[dsp + 350868 >> 2])) & 4095) | 0);HEAPF32[dsp + 350876 >> 2] = +(722.566 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 350880 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 350876 >> 2])));HEAPF32[dsp + 350884 >> 2] = +(1. - +(HEAPF32[dsp + 350876 >> 2]));for (i22 = 0; (((i22 | 0) < 2) | 0); i22 = (((i22 | 0) + 1) | 0)) {HEAPF32[dsp + 350200 + ((i22 | 0) << 2) >> 2] = 0.;}for (i23 = 0; (((i23 | 0) < 4096) | 0); i23 = (((i23 | 0) + 1) | 0)) {HEAPF32[dsp + 32768 + ((i23 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 350888 >> 2] = (((HEAP32[dsp + 350840 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 350892 >> 2] = +(+(HEAPF32[dsp + 350836 >> 2]) - +(2. + +((HEAP32[dsp + 350840 >> 2] | 0))));HEAPF32[dsp + 350896 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 350848 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 350852 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 350856 >> 2]))));HEAP32[dsp + 350900 >> 2] = ((((1 + (HEAP32[dsp + 350840 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350904 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 350844 >> 2]) * +(0. - +(HEAPF32[dsp + 350852 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 350856 >> 2])))));HEAP32[dsp + 350908 >> 2] = ((((2 + (HEAP32[dsp + 350840 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350912 >> 2] = +(+(HEAPF32[dsp + 350844 >> 2]) * +(HEAPF32[dsp + 350848 >> 2]));HEAPF32[dsp + 350916 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 350912 >> 2]) * +(0. - +(HEAPF32[dsp + 350856 >> 2]))));HEAP32[dsp + 350920 >> 2] = ((((3 + (HEAP32[dsp + 350840 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 350924 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 350912 >> 2]) * +(HEAPF32[dsp + 350852 >> 2])));HEAP32[dsp + 350928 >> 2] = ((((4 + (HEAP32[dsp + 350840 >> 2] | 0)) | 0) & 4095) | 0);for (i24 = 0; (((i24 | 0) < 4) | 0); i24 = (((i24 | 0) + 1) | 0)) {HEAPF32[dsp + 349792 + ((i24 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 350932 >> 2] = +(0.00408163 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 350936 >> 2] = ~~(+(+(HEAPF32[dsp + 350932 >> 2]) - 3.49999));HEAPF32[dsp + 350940 >> 2] = +(+(HEAPF32[dsp + 350932 >> 2]) - +(+((HEAP32[dsp + 350936 >> 2] | 0)) + 3.));HEAPF32[dsp + 350944 >> 2] = +(+(HEAPF32[dsp + 350932 >> 2]) - +(4. + +((HEAP32[dsp + 350936 >> 2] | 0))));HEAPF32[dsp + 350948 >> 2] = +(+(HEAPF32[dsp + 350932 >> 2]) - +(5. + +((HEAP32[dsp + 350936 >> 2] | 0))));HEAPF32[dsp + 350952 >> 2] = +(+(HEAPF32[dsp + 350932 >> 2]) - +(+((HEAP32[dsp + 350936 >> 2] | 0)) + 6.));HEAPF32[dsp + 350956 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 350940 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 350944 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 350948 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 350952 >> 2]))));for (i25 = 0; (((i25 | 0) < 2) | 0); i25 = (((i25 | 0) + 1) | 0)) {HEAP32[dsp + 350208 + ((i25 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 350960 >> 2] = +(245. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i26 = 0; (((i26 | 0) < 2) | 0); i26 = (((i26 | 0) + 1) | 0)) {HEAPF32[dsp + 350216 + ((i26 | 0) << 2) >> 2] = 0.;}for (i27 = 0; (((i27 | 0) < 512) | 0); i27 = (((i27 | 0) + 1) | 0)) {HEAPF32[dsp + 333824 + ((i27 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 350964 >> 2] = +(0.00204082 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 350968 >> 2] = ((~~(+(HEAPF32[dsp + 350964 >> 2])) & 4095) | 0);HEAPF32[dsp + 350972 >> 2] = +(769.69 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 350976 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 350972 >> 2])));HEAPF32[dsp + 350980 >> 2] = +(1. - +(HEAPF32[dsp + 350972 >> 2]));for (i28 = 0; (((i28 | 0) < 2) | 0); i28 = (((i28 | 0) + 1) | 0)) {HEAPF32[dsp + 350224 + ((i28 | 0) << 2) >> 2] = 0.;}for (i29 = 0; (((i29 | 0) < 4096) | 0); i29 = (((i29 | 0) + 1) | 0)) {HEAPF32[dsp + 49152 + ((i29 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 350984 >> 2] = (((HEAP32[dsp + 350936 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 350988 >> 2] = +(+(HEAPF32[dsp + 350932 >> 2]) - +(2. + +((HEAP32[dsp + 350936 >> 2] | 0))));HEAPF32[dsp + 350992 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 350944 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 350948 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 350952 >> 2]))));HEAP32[dsp + 350996 >> 2] = ((((1 + (HEAP32[dsp + 350936 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351000 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 350940 >> 2]) * +(0. - +(HEAPF32[dsp + 350948 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 350952 >> 2])))));HEAP32[dsp + 351004 >> 2] = ((((2 + (HEAP32[dsp + 350936 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351008 >> 2] = +(+(HEAPF32[dsp + 350940 >> 2]) * +(HEAPF32[dsp + 350944 >> 2]));HEAPF32[dsp + 351012 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351008 >> 2]) * +(0. - +(HEAPF32[dsp + 350952 >> 2]))));HEAP32[dsp + 351016 >> 2] = ((((3 + (HEAP32[dsp + 350936 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351020 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351008 >> 2]) * +(HEAPF32[dsp + 350948 >> 2])));HEAP32[dsp + 351024 >> 2] = ((((4 + (HEAP32[dsp + 350936 >> 2] | 0)) | 0) & 4095) | 0);for (i30 = 0; (((i30 | 0) < 4) | 0); i30 = (((i30 | 0) + 1) | 0)) {HEAPF32[dsp + 349808 + ((i30 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351028 >> 2] = +(0.00384615 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351032 >> 2] = ~~(+(+(HEAPF32[dsp + 351028 >> 2]) - 3.49999));HEAPF32[dsp + 351036 >> 2] = +(+(HEAPF32[dsp + 351028 >> 2]) - +(+((HEAP32[dsp + 351032 >> 2] | 0)) + 3.));HEAPF32[dsp + 351040 >> 2] = +(+(HEAPF32[dsp + 351028 >> 2]) - +(4. + +((HEAP32[dsp + 351032 >> 2] | 0))));HEAPF32[dsp + 351044 >> 2] = +(+(HEAPF32[dsp + 351028 >> 2]) - +(5. + +((HEAP32[dsp + 351032 >> 2] | 0))));HEAPF32[dsp + 351048 >> 2] = +(+(HEAPF32[dsp + 351028 >> 2]) - +(+((HEAP32[dsp + 351032 >> 2] | 0)) + 6.));HEAPF32[dsp + 351052 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351036 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351040 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351044 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351048 >> 2]))));for (i31 = 0; (((i31 | 0) < 2) | 0); i31 = (((i31 | 0) + 1) | 0)) {HEAP32[dsp + 350232 + ((i31 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351056 >> 2] = +(260. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i32 = 0; (((i32 | 0) < 2) | 0); i32 = (((i32 | 0) + 1) | 0)) {HEAPF32[dsp + 350240 + ((i32 | 0) << 2) >> 2] = 0.;}for (i33 = 0; (((i33 | 0) < 512) | 0); i33 = (((i33 | 0) + 1) | 0)) {HEAPF32[dsp + 335872 + ((i33 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351060 >> 2] = +(0.00192308 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351064 >> 2] = ((~~(+(HEAPF32[dsp + 351060 >> 2])) & 4095) | 0);HEAPF32[dsp + 351068 >> 2] = +(816.814 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351072 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351068 >> 2])));HEAPF32[dsp + 351076 >> 2] = +(1. - +(HEAPF32[dsp + 351068 >> 2]));for (i34 = 0; (((i34 | 0) < 2) | 0); i34 = (((i34 | 0) + 1) | 0)) {HEAPF32[dsp + 350248 + ((i34 | 0) << 2) >> 2] = 0.;}for (i35 = 0; (((i35 | 0) < 4096) | 0); i35 = (((i35 | 0) + 1) | 0)) {HEAPF32[dsp + 65536 + ((i35 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351080 >> 2] = (((HEAP32[dsp + 351032 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351084 >> 2] = +(+(HEAPF32[dsp + 351028 >> 2]) - +(2. + +((HEAP32[dsp + 351032 >> 2] | 0))));HEAPF32[dsp + 351088 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351040 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351044 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351048 >> 2]))));HEAP32[dsp + 351092 >> 2] = ((((1 + (HEAP32[dsp + 351032 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351096 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351036 >> 2]) * +(0. - +(HEAPF32[dsp + 351044 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351048 >> 2])))));HEAP32[dsp + 351100 >> 2] = ((((2 + (HEAP32[dsp + 351032 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351104 >> 2] = +(+(HEAPF32[dsp + 351036 >> 2]) * +(HEAPF32[dsp + 351040 >> 2]));HEAPF32[dsp + 351108 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351104 >> 2]) * +(0. - +(HEAPF32[dsp + 351048 >> 2]))));HEAP32[dsp + 351112 >> 2] = ((((3 + (HEAP32[dsp + 351032 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351116 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351104 >> 2]) * +(HEAPF32[dsp + 351044 >> 2])));HEAP32[dsp + 351120 >> 2] = ((((4 + (HEAP32[dsp + 351032 >> 2] | 0)) | 0) & 4095) | 0);for (i36 = 0; (((i36 | 0) < 4) | 0); i36 = (((i36 | 0) + 1) | 0)) {HEAPF32[dsp + 349824 + ((i36 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351124 >> 2] = +(0.00363636 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351128 >> 2] = ~~(+(+(HEAPF32[dsp + 351124 >> 2]) - 3.49999));HEAPF32[dsp + 351132 >> 2] = +(+(HEAPF32[dsp + 351124 >> 2]) - +(+((HEAP32[dsp + 351128 >> 2] | 0)) + 3.));HEAPF32[dsp + 351136 >> 2] = +(+(HEAPF32[dsp + 351124 >> 2]) - +(4. + +((HEAP32[dsp + 351128 >> 2] | 0))));HEAPF32[dsp + 351140 >> 2] = +(+(HEAPF32[dsp + 351124 >> 2]) - +(5. + +((HEAP32[dsp + 351128 >> 2] | 0))));HEAPF32[dsp + 351144 >> 2] = +(+(HEAPF32[dsp + 351124 >> 2]) - +(+((HEAP32[dsp + 351128 >> 2] | 0)) + 6.));HEAPF32[dsp + 351148 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351132 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351136 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351140 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351144 >> 2]))));for (i37 = 0; (((i37 | 0) < 2) | 0); i37 = (((i37 | 0) + 1) | 0)) {HEAP32[dsp + 350256 + ((i37 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351152 >> 2] = +(275. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i38 = 0; (((i38 | 0) < 2) | 0); i38 = (((i38 | 0) + 1) | 0)) {HEAPF32[dsp + 350264 + ((i38 | 0) << 2) >> 2] = 0.;}for (i39 = 0; (((i39 | 0) < 512) | 0); i39 = (((i39 | 0) + 1) | 0)) {HEAPF32[dsp + 337920 + ((i39 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351156 >> 2] = +(0.00181818 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351160 >> 2] = ((~~(+(HEAPF32[dsp + 351156 >> 2])) & 4095) | 0);HEAPF32[dsp + 351164 >> 2] = +(863.938 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351168 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351164 >> 2])));HEAPF32[dsp + 351172 >> 2] = +(1. - +(HEAPF32[dsp + 351164 >> 2]));for (i40 = 0; (((i40 | 0) < 2) | 0); i40 = (((i40 | 0) + 1) | 0)) {HEAPF32[dsp + 350272 + ((i40 | 0) << 2) >> 2] = 0.;}for (i41 = 0; (((i41 | 0) < 4096) | 0); i41 = (((i41 | 0) + 1) | 0)) {HEAPF32[dsp + 81920 + ((i41 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351176 >> 2] = (((HEAP32[dsp + 351128 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351180 >> 2] = +(+(HEAPF32[dsp + 351124 >> 2]) - +(2. + +((HEAP32[dsp + 351128 >> 2] | 0))));HEAPF32[dsp + 351184 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351136 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351140 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351144 >> 2]))));HEAP32[dsp + 351188 >> 2] = ((((1 + (HEAP32[dsp + 351128 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351192 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351132 >> 2]) * +(0. - +(HEAPF32[dsp + 351140 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351144 >> 2])))));HEAP32[dsp + 351196 >> 2] = ((((2 + (HEAP32[dsp + 351128 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351200 >> 2] = +(+(HEAPF32[dsp + 351132 >> 2]) * +(HEAPF32[dsp + 351136 >> 2]));HEAPF32[dsp + 351204 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351200 >> 2]) * +(0. - +(HEAPF32[dsp + 351144 >> 2]))));HEAP32[dsp + 351208 >> 2] = ((((3 + (HEAP32[dsp + 351128 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351212 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351200 >> 2]) * +(HEAPF32[dsp + 351140 >> 2])));HEAP32[dsp + 351216 >> 2] = ((((4 + (HEAP32[dsp + 351128 >> 2] | 0)) | 0) & 4095) | 0);for (i42 = 0; (((i42 | 0) < 4) | 0); i42 = (((i42 | 0) + 1) | 0)) {HEAPF32[dsp + 349840 + ((i42 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351220 >> 2] = ~~(+(+(HEAPF32[dsp + 350672 >> 2]) - 3.49999));HEAPF32[dsp + 351224 >> 2] = +(+(HEAPF32[dsp + 350672 >> 2]) - +(+((HEAP32[dsp + 351220 >> 2] | 0)) + 3.));HEAPF32[dsp + 351228 >> 2] = +(+(HEAPF32[dsp + 350672 >> 2]) - +(4. + +((HEAP32[dsp + 351220 >> 2] | 0))));HEAPF32[dsp + 351232 >> 2] = +(+(HEAPF32[dsp + 350672 >> 2]) - +(5. + +((HEAP32[dsp + 351220 >> 2] | 0))));HEAPF32[dsp + 351236 >> 2] = +(+(HEAPF32[dsp + 350672 >> 2]) - +(+((HEAP32[dsp + 351220 >> 2] | 0)) + 6.));HEAPF32[dsp + 351240 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351224 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351228 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351232 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351236 >> 2]))));for (i43 = 0; (((i43 | 0) < 2) | 0); i43 = (((i43 | 0) + 1) | 0)) {HEAP32[dsp + 350280 + ((i43 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351244 >> 2] = +(400. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i44 = 0; (((i44 | 0) < 2) | 0); i44 = (((i44 | 0) + 1) | 0)) {HEAPF32[dsp + 350288 + ((i44 | 0) << 2) >> 2] = 0.;}for (i45 = 0; (((i45 | 0) < 256) | 0); i45 = (((i45 | 0) + 1) | 0)) {HEAPF32[dsp + 339968 + ((i45 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351248 >> 2] = +(0.00125 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351252 >> 2] = ((~~(+(HEAPF32[dsp + 351248 >> 2])) & 4095) | 0);HEAPF32[dsp + 351256 >> 2] = +(1256.64 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351260 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351256 >> 2])));HEAPF32[dsp + 351264 >> 2] = +(1. - +(HEAPF32[dsp + 351256 >> 2]));for (i46 = 0; (((i46 | 0) < 2) | 0); i46 = (((i46 | 0) + 1) | 0)) {HEAPF32[dsp + 350296 + ((i46 | 0) << 2) >> 2] = 0.;}for (i47 = 0; (((i47 | 0) < 4096) | 0); i47 = (((i47 | 0) + 1) | 0)) {HEAPF32[dsp + 98304 + ((i47 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351268 >> 2] = (((HEAP32[dsp + 351220 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351272 >> 2] = +(+(HEAPF32[dsp + 350672 >> 2]) - +(2. + +((HEAP32[dsp + 351220 >> 2] | 0))));HEAPF32[dsp + 351276 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351228 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351232 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351236 >> 2]))));HEAP32[dsp + 351280 >> 2] = ((((1 + (HEAP32[dsp + 351220 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351284 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351224 >> 2]) * +(0. - +(HEAPF32[dsp + 351232 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351236 >> 2])))));HEAP32[dsp + 351288 >> 2] = ((((2 + (HEAP32[dsp + 351220 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351292 >> 2] = +(+(HEAPF32[dsp + 351224 >> 2]) * +(HEAPF32[dsp + 351228 >> 2]));HEAPF32[dsp + 351296 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351292 >> 2]) * +(0. - +(HEAPF32[dsp + 351236 >> 2]))));HEAP32[dsp + 351300 >> 2] = ((((3 + (HEAP32[dsp + 351220 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351304 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351292 >> 2]) * +(HEAPF32[dsp + 351232 >> 2])));HEAP32[dsp + 351308 >> 2] = ((((4 + (HEAP32[dsp + 351220 >> 2] | 0)) | 0) & 4095) | 0);for (i48 = 0; (((i48 | 0) < 4) | 0); i48 = (((i48 | 0) + 1) | 0)) {HEAPF32[dsp + 349856 + ((i48 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351312 >> 2] = ~~(+(+(HEAPF32[dsp + 350772 >> 2]) - 3.49999));HEAPF32[dsp + 351316 >> 2] = +(+(HEAPF32[dsp + 350772 >> 2]) - +(+((HEAP32[dsp + 351312 >> 2] | 0)) + 3.));HEAPF32[dsp + 351320 >> 2] = +(+(HEAPF32[dsp + 350772 >> 2]) - +(4. + +((HEAP32[dsp + 351312 >> 2] | 0))));HEAPF32[dsp + 351324 >> 2] = +(+(HEAPF32[dsp + 350772 >> 2]) - +(5. + +((HEAP32[dsp + 351312 >> 2] | 0))));HEAPF32[dsp + 351328 >> 2] = +(+(HEAPF32[dsp + 350772 >> 2]) - +(+((HEAP32[dsp + 351312 >> 2] | 0)) + 6.));HEAPF32[dsp + 351332 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351316 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351320 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351324 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351328 >> 2]))));for (i49 = 0; (((i49 | 0) < 2) | 0); i49 = (((i49 | 0) + 1) | 0)) {HEAP32[dsp + 350304 + ((i49 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351336 >> 2] = +(430. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i50 = 0; (((i50 | 0) < 2) | 0); i50 = (((i50 | 0) + 1) | 0)) {HEAPF32[dsp + 350312 + ((i50 | 0) << 2) >> 2] = 0.;}for (i51 = 0; (((i51 | 0) < 256) | 0); i51 = (((i51 | 0) + 1) | 0)) {HEAPF32[dsp + 340992 + ((i51 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351340 >> 2] = +(0.00116279 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351344 >> 2] = ((~~(+(HEAPF32[dsp + 351340 >> 2])) & 4095) | 0);HEAPF32[dsp + 351348 >> 2] = +(1350.88 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351352 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351348 >> 2])));HEAPF32[dsp + 351356 >> 2] = +(1. - +(HEAPF32[dsp + 351348 >> 2]));for (i52 = 0; (((i52 | 0) < 2) | 0); i52 = (((i52 | 0) + 1) | 0)) {HEAPF32[dsp + 350320 + ((i52 | 0) << 2) >> 2] = 0.;}for (i53 = 0; (((i53 | 0) < 4096) | 0); i53 = (((i53 | 0) + 1) | 0)) {HEAPF32[dsp + 114688 + ((i53 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351360 >> 2] = (((HEAP32[dsp + 351312 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351364 >> 2] = +(+(HEAPF32[dsp + 350772 >> 2]) - +(2. + +((HEAP32[dsp + 351312 >> 2] | 0))));HEAPF32[dsp + 351368 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351320 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351324 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351328 >> 2]))));HEAP32[dsp + 351372 >> 2] = ((((1 + (HEAP32[dsp + 351312 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351376 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351316 >> 2]) * +(0. - +(HEAPF32[dsp + 351324 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351328 >> 2])))));HEAP32[dsp + 351380 >> 2] = ((((2 + (HEAP32[dsp + 351312 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351384 >> 2] = +(+(HEAPF32[dsp + 351316 >> 2]) * +(HEAPF32[dsp + 351320 >> 2]));HEAPF32[dsp + 351388 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351384 >> 2]) * +(0. - +(HEAPF32[dsp + 351328 >> 2]))));HEAP32[dsp + 351392 >> 2] = ((((3 + (HEAP32[dsp + 351312 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351396 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351384 >> 2]) * +(HEAPF32[dsp + 351324 >> 2])));HEAP32[dsp + 351400 >> 2] = ((((4 + (HEAP32[dsp + 351312 >> 2] | 0)) | 0) & 4095) | 0);for (i54 = 0; (((i54 | 0) < 4) | 0); i54 = (((i54 | 0) + 1) | 0)) {HEAPF32[dsp + 349872 + ((i54 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351404 >> 2] = ~~(+(+(HEAPF32[dsp + 350868 >> 2]) - 3.49999));HEAPF32[dsp + 351408 >> 2] = +(+(HEAPF32[dsp + 350868 >> 2]) - +(+((HEAP32[dsp + 351404 >> 2] | 0)) + 3.));HEAPF32[dsp + 351412 >> 2] = +(+(HEAPF32[dsp + 350868 >> 2]) - +(4. + +((HEAP32[dsp + 351404 >> 2] | 0))));HEAPF32[dsp + 351416 >> 2] = +(+(HEAPF32[dsp + 350868 >> 2]) - +(5. + +((HEAP32[dsp + 351404 >> 2] | 0))));HEAPF32[dsp + 351420 >> 2] = +(+(HEAPF32[dsp + 350868 >> 2]) - +(+((HEAP32[dsp + 351404 >> 2] | 0)) + 6.));HEAPF32[dsp + 351424 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351408 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351412 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351416 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351420 >> 2]))));for (i55 = 0; (((i55 | 0) < 2) | 0); i55 = (((i55 | 0) + 1) | 0)) {HEAP32[dsp + 350328 + ((i55 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351428 >> 2] = +(460. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i56 = 0; (((i56 | 0) < 2) | 0); i56 = (((i56 | 0) + 1) | 0)) {HEAPF32[dsp + 350336 + ((i56 | 0) << 2) >> 2] = 0.;}for (i57 = 0; (((i57 | 0) < 256) | 0); i57 = (((i57 | 0) + 1) | 0)) {HEAPF32[dsp + 342016 + ((i57 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351432 >> 2] = +(0.00108696 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351436 >> 2] = ((~~(+(HEAPF32[dsp + 351432 >> 2])) & 4095) | 0);HEAPF32[dsp + 351440 >> 2] = +(1445.13 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351444 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351440 >> 2])));HEAPF32[dsp + 351448 >> 2] = +(1. - +(HEAPF32[dsp + 351440 >> 2]));for (i58 = 0; (((i58 | 0) < 2) | 0); i58 = (((i58 | 0) + 1) | 0)) {HEAPF32[dsp + 350344 + ((i58 | 0) << 2) >> 2] = 0.;}for (i59 = 0; (((i59 | 0) < 4096) | 0); i59 = (((i59 | 0) + 1) | 0)) {HEAPF32[dsp + 131072 + ((i59 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351452 >> 2] = (((HEAP32[dsp + 351404 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351456 >> 2] = +(+(HEAPF32[dsp + 350868 >> 2]) - +(2. + +((HEAP32[dsp + 351404 >> 2] | 0))));HEAPF32[dsp + 351460 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351412 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351416 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351420 >> 2]))));HEAP32[dsp + 351464 >> 2] = ((((1 + (HEAP32[dsp + 351404 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351468 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351408 >> 2]) * +(0. - +(HEAPF32[dsp + 351416 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351420 >> 2])))));HEAP32[dsp + 351472 >> 2] = ((((2 + (HEAP32[dsp + 351404 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351476 >> 2] = +(+(HEAPF32[dsp + 351408 >> 2]) * +(HEAPF32[dsp + 351412 >> 2]));HEAPF32[dsp + 351480 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351476 >> 2]) * +(0. - +(HEAPF32[dsp + 351420 >> 2]))));HEAP32[dsp + 351484 >> 2] = ((((3 + (HEAP32[dsp + 351404 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351488 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351476 >> 2]) * +(HEAPF32[dsp + 351416 >> 2])));HEAP32[dsp + 351492 >> 2] = ((((4 + (HEAP32[dsp + 351404 >> 2] | 0)) | 0) & 4095) | 0);for (i60 = 0; (((i60 | 0) < 4) | 0); i60 = (((i60 | 0) + 1) | 0)) {HEAPF32[dsp + 349888 + ((i60 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351496 >> 2] = ~~(+(+(HEAPF32[dsp + 350964 >> 2]) - 3.49999));HEAPF32[dsp + 351500 >> 2] = +(+(HEAPF32[dsp + 350964 >> 2]) - +(+((HEAP32[dsp + 351496 >> 2] | 0)) + 3.));HEAPF32[dsp + 351504 >> 2] = +(+(HEAPF32[dsp + 350964 >> 2]) - +(4. + +((HEAP32[dsp + 351496 >> 2] | 0))));HEAPF32[dsp + 351508 >> 2] = +(+(HEAPF32[dsp + 350964 >> 2]) - +(5. + +((HEAP32[dsp + 351496 >> 2] | 0))));HEAPF32[dsp + 351512 >> 2] = +(+(HEAPF32[dsp + 350964 >> 2]) - +(+((HEAP32[dsp + 351496 >> 2] | 0)) + 6.));HEAPF32[dsp + 351516 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351500 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351504 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351508 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351512 >> 2]))));for (i61 = 0; (((i61 | 0) < 2) | 0); i61 = (((i61 | 0) + 1) | 0)) {HEAP32[dsp + 350352 + ((i61 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351520 >> 2] = +(490. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i62 = 0; (((i62 | 0) < 2) | 0); i62 = (((i62 | 0) + 1) | 0)) {HEAPF32[dsp + 350360 + ((i62 | 0) << 2) >> 2] = 0.;}for (i63 = 0; (((i63 | 0) < 256) | 0); i63 = (((i63 | 0) + 1) | 0)) {HEAPF32[dsp + 343040 + ((i63 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351524 >> 2] = +(0.00102041 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351528 >> 2] = ((~~(+(HEAPF32[dsp + 351524 >> 2])) & 4095) | 0);HEAPF32[dsp + 351532 >> 2] = +(1539.38 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351536 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351532 >> 2])));HEAPF32[dsp + 351540 >> 2] = +(1. - +(HEAPF32[dsp + 351532 >> 2]));for (i64 = 0; (((i64 | 0) < 2) | 0); i64 = (((i64 | 0) + 1) | 0)) {HEAPF32[dsp + 350368 + ((i64 | 0) << 2) >> 2] = 0.;}for (i65 = 0; (((i65 | 0) < 4096) | 0); i65 = (((i65 | 0) + 1) | 0)) {HEAPF32[dsp + 147456 + ((i65 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351544 >> 2] = (((HEAP32[dsp + 351496 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351548 >> 2] = +(+(HEAPF32[dsp + 350964 >> 2]) - +(2. + +((HEAP32[dsp + 351496 >> 2] | 0))));HEAPF32[dsp + 351552 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351504 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351508 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351512 >> 2]))));HEAP32[dsp + 351556 >> 2] = ((((1 + (HEAP32[dsp + 351496 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351560 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351500 >> 2]) * +(0. - +(HEAPF32[dsp + 351508 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351512 >> 2])))));HEAP32[dsp + 351564 >> 2] = ((((2 + (HEAP32[dsp + 351496 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351568 >> 2] = +(+(HEAPF32[dsp + 351500 >> 2]) * +(HEAPF32[dsp + 351504 >> 2]));HEAPF32[dsp + 351572 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351568 >> 2]) * +(0. - +(HEAPF32[dsp + 351512 >> 2]))));HEAP32[dsp + 351576 >> 2] = ((((3 + (HEAP32[dsp + 351496 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351580 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351568 >> 2]) * +(HEAPF32[dsp + 351508 >> 2])));HEAP32[dsp + 351584 >> 2] = ((((4 + (HEAP32[dsp + 351496 >> 2] | 0)) | 0) & 4095) | 0);for (i66 = 0; (((i66 | 0) < 4) | 0); i66 = (((i66 | 0) + 1) | 0)) {HEAPF32[dsp + 349904 + ((i66 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351588 >> 2] = ~~(+(+(HEAPF32[dsp + 351060 >> 2]) - 3.49999));HEAPF32[dsp + 351592 >> 2] = +(+(HEAPF32[dsp + 351060 >> 2]) - +(+((HEAP32[dsp + 351588 >> 2] | 0)) + 3.));HEAPF32[dsp + 351596 >> 2] = +(+(HEAPF32[dsp + 351060 >> 2]) - +(4. + +((HEAP32[dsp + 351588 >> 2] | 0))));HEAPF32[dsp + 351600 >> 2] = +(+(HEAPF32[dsp + 351060 >> 2]) - +(5. + +((HEAP32[dsp + 351588 >> 2] | 0))));HEAPF32[dsp + 351604 >> 2] = +(+(HEAPF32[dsp + 351060 >> 2]) - +(+((HEAP32[dsp + 351588 >> 2] | 0)) + 6.));HEAPF32[dsp + 351608 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351592 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351596 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351600 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351604 >> 2]))));for (i67 = 0; (((i67 | 0) < 2) | 0); i67 = (((i67 | 0) + 1) | 0)) {HEAP32[dsp + 350376 + ((i67 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351612 >> 2] = +(520. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i68 = 0; (((i68 | 0) < 2) | 0); i68 = (((i68 | 0) + 1) | 0)) {HEAPF32[dsp + 350384 + ((i68 | 0) << 2) >> 2] = 0.;}for (i69 = 0; (((i69 | 0) < 256) | 0); i69 = (((i69 | 0) + 1) | 0)) {HEAPF32[dsp + 344064 + ((i69 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351616 >> 2] = +(0.000961538 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351620 >> 2] = ((~~(+(HEAPF32[dsp + 351616 >> 2])) & 4095) | 0);HEAPF32[dsp + 351624 >> 2] = +(1633.63 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351628 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351624 >> 2])));HEAPF32[dsp + 351632 >> 2] = +(1. - +(HEAPF32[dsp + 351624 >> 2]));for (i70 = 0; (((i70 | 0) < 2) | 0); i70 = (((i70 | 0) + 1) | 0)) {HEAPF32[dsp + 350392 + ((i70 | 0) << 2) >> 2] = 0.;}for (i71 = 0; (((i71 | 0) < 4096) | 0); i71 = (((i71 | 0) + 1) | 0)) {HEAPF32[dsp + 163840 + ((i71 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351636 >> 2] = (((HEAP32[dsp + 351588 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351640 >> 2] = +(+(HEAPF32[dsp + 351060 >> 2]) - +(2. + +((HEAP32[dsp + 351588 >> 2] | 0))));HEAPF32[dsp + 351644 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351596 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351600 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351604 >> 2]))));HEAP32[dsp + 351648 >> 2] = ((((1 + (HEAP32[dsp + 351588 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351652 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351592 >> 2]) * +(0. - +(HEAPF32[dsp + 351600 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351604 >> 2])))));HEAP32[dsp + 351656 >> 2] = ((((2 + (HEAP32[dsp + 351588 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351660 >> 2] = +(+(HEAPF32[dsp + 351592 >> 2]) * +(HEAPF32[dsp + 351596 >> 2]));HEAPF32[dsp + 351664 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351660 >> 2]) * +(0. - +(HEAPF32[dsp + 351604 >> 2]))));HEAP32[dsp + 351668 >> 2] = ((((3 + (HEAP32[dsp + 351588 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351672 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351660 >> 2]) * +(HEAPF32[dsp + 351600 >> 2])));HEAP32[dsp + 351676 >> 2] = ((((4 + (HEAP32[dsp + 351588 >> 2] | 0)) | 0) & 4095) | 0);for (i72 = 0; (((i72 | 0) < 4) | 0); i72 = (((i72 | 0) + 1) | 0)) {HEAPF32[dsp + 349920 + ((i72 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351680 >> 2] = ~~(+(+(HEAPF32[dsp + 351156 >> 2]) - 3.49999));HEAPF32[dsp + 351684 >> 2] = +(+(HEAPF32[dsp + 351156 >> 2]) - +(+((HEAP32[dsp + 351680 >> 2] | 0)) + 3.));HEAPF32[dsp + 351688 >> 2] = +(+(HEAPF32[dsp + 351156 >> 2]) - +(4. + +((HEAP32[dsp + 351680 >> 2] | 0))));HEAPF32[dsp + 351692 >> 2] = +(+(HEAPF32[dsp + 351156 >> 2]) - +(5. + +((HEAP32[dsp + 351680 >> 2] | 0))));HEAPF32[dsp + 351696 >> 2] = +(+(HEAPF32[dsp + 351156 >> 2]) - +(+((HEAP32[dsp + 351680 >> 2] | 0)) + 6.));HEAPF32[dsp + 351700 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351684 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351688 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351692 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351696 >> 2]))));for (i73 = 0; (((i73 | 0) < 2) | 0); i73 = (((i73 | 0) + 1) | 0)) {HEAP32[dsp + 350400 + ((i73 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351704 >> 2] = +(550. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i74 = 0; (((i74 | 0) < 2) | 0); i74 = (((i74 | 0) + 1) | 0)) {HEAPF32[dsp + 350408 + ((i74 | 0) << 2) >> 2] = 0.;}for (i75 = 0; (((i75 | 0) < 256) | 0); i75 = (((i75 | 0) + 1) | 0)) {HEAPF32[dsp + 345088 + ((i75 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351708 >> 2] = +(0.000909091 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351712 >> 2] = ((~~(+(HEAPF32[dsp + 351708 >> 2])) & 4095) | 0);HEAPF32[dsp + 351716 >> 2] = +(1727.88 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351720 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351716 >> 2])));HEAPF32[dsp + 351724 >> 2] = +(1. - +(HEAPF32[dsp + 351716 >> 2]));for (i76 = 0; (((i76 | 0) < 2) | 0); i76 = (((i76 | 0) + 1) | 0)) {HEAPF32[dsp + 350416 + ((i76 | 0) << 2) >> 2] = 0.;}for (i77 = 0; (((i77 | 0) < 4096) | 0); i77 = (((i77 | 0) + 1) | 0)) {HEAPF32[dsp + 180224 + ((i77 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351728 >> 2] = (((HEAP32[dsp + 351680 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351732 >> 2] = +(+(HEAPF32[dsp + 351156 >> 2]) - +(2. + +((HEAP32[dsp + 351680 >> 2] | 0))));HEAPF32[dsp + 351736 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351688 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351692 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351696 >> 2]))));HEAP32[dsp + 351740 >> 2] = ((((1 + (HEAP32[dsp + 351680 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351744 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351684 >> 2]) * +(0. - +(HEAPF32[dsp + 351692 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351696 >> 2])))));HEAP32[dsp + 351748 >> 2] = ((((2 + (HEAP32[dsp + 351680 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351752 >> 2] = +(+(HEAPF32[dsp + 351684 >> 2]) * +(HEAPF32[dsp + 351688 >> 2]));HEAPF32[dsp + 351756 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351752 >> 2]) * +(0. - +(HEAPF32[dsp + 351696 >> 2]))));HEAP32[dsp + 351760 >> 2] = ((((3 + (HEAP32[dsp + 351680 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351764 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351752 >> 2]) * +(HEAPF32[dsp + 351692 >> 2])));HEAP32[dsp + 351768 >> 2] = ((((4 + (HEAP32[dsp + 351680 >> 2] | 0)) | 0) & 4095) | 0);for (i78 = 0; (((i78 | 0) < 4) | 0); i78 = (((i78 | 0) + 1) | 0)) {HEAPF32[dsp + 349936 + ((i78 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351772 >> 2] = ~~(+(+(HEAPF32[dsp + 351248 >> 2]) - 3.49999));HEAPF32[dsp + 351776 >> 2] = +(+(HEAPF32[dsp + 351248 >> 2]) - +(+((HEAP32[dsp + 351772 >> 2] | 0)) + 3.));HEAPF32[dsp + 351780 >> 2] = +(+(HEAPF32[dsp + 351248 >> 2]) - +(4. + +((HEAP32[dsp + 351772 >> 2] | 0))));HEAPF32[dsp + 351784 >> 2] = +(+(HEAPF32[dsp + 351248 >> 2]) - +(5. + +((HEAP32[dsp + 351772 >> 2] | 0))));HEAPF32[dsp + 351788 >> 2] = +(+(HEAPF32[dsp + 351248 >> 2]) - +(+((HEAP32[dsp + 351772 >> 2] | 0)) + 6.));HEAPF32[dsp + 351792 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351776 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351780 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351784 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351788 >> 2]))));for (i79 = 0; (((i79 | 0) < 2) | 0); i79 = (((i79 | 0) + 1) | 0)) {HEAP32[dsp + 350424 + ((i79 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351796 >> 2] = +(800. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i80 = 0; (((i80 | 0) < 2) | 0); i80 = (((i80 | 0) + 1) | 0)) {HEAPF32[dsp + 350432 + ((i80 | 0) << 2) >> 2] = 0.;}for (i81 = 0; (((i81 | 0) < 128) | 0); i81 = (((i81 | 0) + 1) | 0)) {HEAPF32[dsp + 346112 + ((i81 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351800 >> 2] = +(0.000625 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351804 >> 2] = ((~~(+(HEAPF32[dsp + 351800 >> 2])) & 4095) | 0);HEAPF32[dsp + 351808 >> 2] = +(2513.27 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351812 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351808 >> 2])));HEAPF32[dsp + 351816 >> 2] = +(1. - +(HEAPF32[dsp + 351808 >> 2]));for (i82 = 0; (((i82 | 0) < 2) | 0); i82 = (((i82 | 0) + 1) | 0)) {HEAPF32[dsp + 350440 + ((i82 | 0) << 2) >> 2] = 0.;}for (i83 = 0; (((i83 | 0) < 4096) | 0); i83 = (((i83 | 0) + 1) | 0)) {HEAPF32[dsp + 196608 + ((i83 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351820 >> 2] = (((HEAP32[dsp + 351772 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351824 >> 2] = +(+(HEAPF32[dsp + 351248 >> 2]) - +(2. + +((HEAP32[dsp + 351772 >> 2] | 0))));HEAPF32[dsp + 351828 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351780 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351784 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351788 >> 2]))));HEAP32[dsp + 351832 >> 2] = ((((1 + (HEAP32[dsp + 351772 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351836 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351776 >> 2]) * +(0. - +(HEAPF32[dsp + 351784 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351788 >> 2])))));HEAP32[dsp + 351840 >> 2] = ((((2 + (HEAP32[dsp + 351772 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351844 >> 2] = +(+(HEAPF32[dsp + 351776 >> 2]) * +(HEAPF32[dsp + 351780 >> 2]));HEAPF32[dsp + 351848 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351844 >> 2]) * +(0. - +(HEAPF32[dsp + 351788 >> 2]))));HEAP32[dsp + 351852 >> 2] = ((((3 + (HEAP32[dsp + 351772 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351856 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351844 >> 2]) * +(HEAPF32[dsp + 351784 >> 2])));HEAP32[dsp + 351860 >> 2] = ((((4 + (HEAP32[dsp + 351772 >> 2] | 0)) | 0) & 4095) | 0);for (i84 = 0; (((i84 | 0) < 4) | 0); i84 = (((i84 | 0) + 1) | 0)) {HEAPF32[dsp + 349952 + ((i84 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351864 >> 2] = ~~(+(+(HEAPF32[dsp + 351340 >> 2]) - 3.49999));HEAPF32[dsp + 351868 >> 2] = +(+(HEAPF32[dsp + 351340 >> 2]) - +(+((HEAP32[dsp + 351864 >> 2] | 0)) + 3.));HEAPF32[dsp + 351872 >> 2] = +(+(HEAPF32[dsp + 351340 >> 2]) - +(4. + +((HEAP32[dsp + 351864 >> 2] | 0))));HEAPF32[dsp + 351876 >> 2] = +(+(HEAPF32[dsp + 351340 >> 2]) - +(5. + +((HEAP32[dsp + 351864 >> 2] | 0))));HEAPF32[dsp + 351880 >> 2] = +(+(HEAPF32[dsp + 351340 >> 2]) - +(+((HEAP32[dsp + 351864 >> 2] | 0)) + 6.));HEAPF32[dsp + 351884 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351868 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351872 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351876 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351880 >> 2]))));for (i85 = 0; (((i85 | 0) < 2) | 0); i85 = (((i85 | 0) + 1) | 0)) {HEAP32[dsp + 350448 + ((i85 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351888 >> 2] = +(860. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i86 = 0; (((i86 | 0) < 2) | 0); i86 = (((i86 | 0) + 1) | 0)) {HEAPF32[dsp + 350456 + ((i86 | 0) << 2) >> 2] = 0.;}for (i87 = 0; (((i87 | 0) < 128) | 0); i87 = (((i87 | 0) + 1) | 0)) {HEAPF32[dsp + 346624 + ((i87 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 351892 >> 2] = +(0.000581395 * +((HEAP32[dsp + 350620 >> 2] | 0)));HEAP32[dsp + 351896 >> 2] = ((~~(+(HEAPF32[dsp + 351892 >> 2])) & 4095) | 0);HEAPF32[dsp + 351900 >> 2] = +(2701.77 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351904 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351900 >> 2])));HEAPF32[dsp + 351908 >> 2] = +(1. - +(HEAPF32[dsp + 351900 >> 2]));for (i88 = 0; (((i88 | 0) < 2) | 0); i88 = (((i88 | 0) + 1) | 0)) {HEAPF32[dsp + 350464 + ((i88 | 0) << 2) >> 2] = 0.;}for (i89 = 0; (((i89 | 0) < 4096) | 0); i89 = (((i89 | 0) + 1) | 0)) {HEAPF32[dsp + 212992 + ((i89 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351912 >> 2] = (((HEAP32[dsp + 351864 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 351916 >> 2] = +(+(HEAPF32[dsp + 351340 >> 2]) - +(2. + +((HEAP32[dsp + 351864 >> 2] | 0))));HEAPF32[dsp + 351920 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351872 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351876 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351880 >> 2]))));HEAP32[dsp + 351924 >> 2] = ((((1 + (HEAP32[dsp + 351864 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351928 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351868 >> 2]) * +(0. - +(HEAPF32[dsp + 351876 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351880 >> 2])))));HEAP32[dsp + 351932 >> 2] = ((((2 + (HEAP32[dsp + 351864 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351936 >> 2] = +(+(HEAPF32[dsp + 351868 >> 2]) * +(HEAPF32[dsp + 351872 >> 2]));HEAPF32[dsp + 351940 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 351936 >> 2]) * +(0. - +(HEAPF32[dsp + 351880 >> 2]))));HEAP32[dsp + 351944 >> 2] = ((((3 + (HEAP32[dsp + 351864 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 351948 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 351936 >> 2]) * +(HEAPF32[dsp + 351876 >> 2])));HEAP32[dsp + 351952 >> 2] = ((((4 + (HEAP32[dsp + 351864 >> 2] | 0)) | 0) & 4095) | 0);for (i90 = 0; (((i90 | 0) < 4) | 0); i90 = (((i90 | 0) + 1) | 0)) {HEAPF32[dsp + 349968 + ((i90 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351956 >> 2] = ~~(+(+(HEAPF32[dsp + 351432 >> 2]) - 3.49999));HEAPF32[dsp + 351960 >> 2] = +(+(HEAPF32[dsp + 351432 >> 2]) - +(+((HEAP32[dsp + 351956 >> 2] | 0)) + 3.));HEAPF32[dsp + 351964 >> 2] = +(+(HEAPF32[dsp + 351432 >> 2]) - +(4. + +((HEAP32[dsp + 351956 >> 2] | 0))));HEAPF32[dsp + 351968 >> 2] = +(+(HEAPF32[dsp + 351432 >> 2]) - +(5. + +((HEAP32[dsp + 351956 >> 2] | 0))));HEAPF32[dsp + 351972 >> 2] = +(+(HEAPF32[dsp + 351432 >> 2]) - +(+((HEAP32[dsp + 351956 >> 2] | 0)) + 6.));HEAPF32[dsp + 351976 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 351960 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351964 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351968 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 351972 >> 2]))));for (i91 = 0; (((i91 | 0) < 2) | 0); i91 = (((i91 | 0) + 1) | 0)) {HEAP32[dsp + 350472 + ((i91 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 351980 >> 2] = +(920. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i92 = 0; (((i92 | 0) < 2) | 0); i92 = (((i92 | 0) + 1) | 0)) {HEAPF32[dsp + 350480 + ((i92 | 0) << 2) >> 2] = 0.;}for (i93 = 0; (((i93 | 0) < 128) | 0); i93 = (((i93 | 0) + 1) | 0)) {HEAPF32[dsp + 347136 + ((i93 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 351984 >> 2] = ((~~(+(0.000543478 * +((HEAP32[dsp + 350620 >> 2] | 0)))) & 4095) | 0);HEAPF32[dsp + 351988 >> 2] = +(2890.27 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 351992 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 351988 >> 2])));HEAPF32[dsp + 351996 >> 2] = +(1. - +(HEAPF32[dsp + 351988 >> 2]));for (i94 = 0; (((i94 | 0) < 2) | 0); i94 = (((i94 | 0) + 1) | 0)) {HEAPF32[dsp + 350488 + ((i94 | 0) << 2) >> 2] = 0.;}for (i95 = 0; (((i95 | 0) < 4096) | 0); i95 = (((i95 | 0) + 1) | 0)) {HEAPF32[dsp + 229376 + ((i95 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352000 >> 2] = (((HEAP32[dsp + 351956 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 352004 >> 2] = +(+(HEAPF32[dsp + 351432 >> 2]) - +(2. + +((HEAP32[dsp + 351956 >> 2] | 0))));HEAPF32[dsp + 352008 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 351964 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 351968 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 351972 >> 2]))));HEAP32[dsp + 352012 >> 2] = ((((1 + (HEAP32[dsp + 351956 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352016 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 351960 >> 2]) * +(0. - +(HEAPF32[dsp + 351968 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 351972 >> 2])))));HEAP32[dsp + 352020 >> 2] = ((((2 + (HEAP32[dsp + 351956 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352024 >> 2] = +(+(HEAPF32[dsp + 351960 >> 2]) * +(HEAPF32[dsp + 351964 >> 2]));HEAPF32[dsp + 352028 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 352024 >> 2]) * +(0. - +(HEAPF32[dsp + 351972 >> 2]))));HEAP32[dsp + 352032 >> 2] = ((((3 + (HEAP32[dsp + 351956 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352036 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 352024 >> 2]) * +(HEAPF32[dsp + 351968 >> 2])));HEAP32[dsp + 352040 >> 2] = ((((4 + (HEAP32[dsp + 351956 >> 2] | 0)) | 0) & 4095) | 0);for (i96 = 0; (((i96 | 0) < 4) | 0); i96 = (((i96 | 0) + 1) | 0)) {HEAPF32[dsp + 349984 + ((i96 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352044 >> 2] = ~~(+(+(HEAPF32[dsp + 351524 >> 2]) - 3.49999));HEAPF32[dsp + 352048 >> 2] = +(+(HEAPF32[dsp + 351524 >> 2]) - +(+((HEAP32[dsp + 352044 >> 2] | 0)) + 3.));HEAPF32[dsp + 352052 >> 2] = +(+(HEAPF32[dsp + 351524 >> 2]) - +(4. + +((HEAP32[dsp + 352044 >> 2] | 0))));HEAPF32[dsp + 352056 >> 2] = +(+(HEAPF32[dsp + 351524 >> 2]) - +(5. + +((HEAP32[dsp + 352044 >> 2] | 0))));HEAPF32[dsp + 352060 >> 2] = +(+(HEAPF32[dsp + 351524 >> 2]) - +(+((HEAP32[dsp + 352044 >> 2] | 0)) + 6.));HEAPF32[dsp + 352064 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 352048 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352052 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352056 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 352060 >> 2]))));for (i97 = 0; (((i97 | 0) < 2) | 0); i97 = (((i97 | 0) + 1) | 0)) {HEAP32[dsp + 350496 + ((i97 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 352068 >> 2] = +(980. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i98 = 0; (((i98 | 0) < 2) | 0); i98 = (((i98 | 0) + 1) | 0)) {HEAPF32[dsp + 350504 + ((i98 | 0) << 2) >> 2] = 0.;}for (i99 = 0; (((i99 | 0) < 128) | 0); i99 = (((i99 | 0) + 1) | 0)) {HEAPF32[dsp + 347648 + ((i99 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352072 >> 2] = ((~~(+(0.000510204 * +((HEAP32[dsp + 350620 >> 2] | 0)))) & 4095) | 0);HEAPF32[dsp + 352076 >> 2] = +(3078.76 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 352080 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 352076 >> 2])));HEAPF32[dsp + 352084 >> 2] = +(1. - +(HEAPF32[dsp + 352076 >> 2]));for (i100 = 0; (((i100 | 0) < 2) | 0); i100 = (((i100 | 0) + 1) | 0)) {HEAPF32[dsp + 350512 + ((i100 | 0) << 2) >> 2] = 0.;}for (i101 = 0; (((i101 | 0) < 4096) | 0); i101 = (((i101 | 0) + 1) | 0)) {HEAPF32[dsp + 245760 + ((i101 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352088 >> 2] = (((HEAP32[dsp + 352044 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 352092 >> 2] = +(+(HEAPF32[dsp + 351524 >> 2]) - +(2. + +((HEAP32[dsp + 352044 >> 2] | 0))));HEAPF32[dsp + 352096 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 352052 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352056 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352060 >> 2]))));HEAP32[dsp + 352100 >> 2] = ((((1 + (HEAP32[dsp + 352044 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352104 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 352048 >> 2]) * +(0. - +(HEAPF32[dsp + 352056 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 352060 >> 2])))));HEAP32[dsp + 352108 >> 2] = ((((2 + (HEAP32[dsp + 352044 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352112 >> 2] = +(+(HEAPF32[dsp + 352048 >> 2]) * +(HEAPF32[dsp + 352052 >> 2]));HEAPF32[dsp + 352116 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 352112 >> 2]) * +(0. - +(HEAPF32[dsp + 352060 >> 2]))));HEAP32[dsp + 352120 >> 2] = ((((3 + (HEAP32[dsp + 352044 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352124 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 352112 >> 2]) * +(HEAPF32[dsp + 352056 >> 2])));HEAP32[dsp + 352128 >> 2] = ((((4 + (HEAP32[dsp + 352044 >> 2] | 0)) | 0) & 4095) | 0);for (i102 = 0; (((i102 | 0) < 4) | 0); i102 = (((i102 | 0) + 1) | 0)) {HEAPF32[dsp + 350000 + ((i102 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352132 >> 2] = ~~(+(+(HEAPF32[dsp + 351616 >> 2]) - 3.49999));HEAPF32[dsp + 352136 >> 2] = +(+(HEAPF32[dsp + 351616 >> 2]) - +(+((HEAP32[dsp + 352132 >> 2] | 0)) + 3.));HEAPF32[dsp + 352140 >> 2] = +(+(HEAPF32[dsp + 351616 >> 2]) - +(4. + +((HEAP32[dsp + 352132 >> 2] | 0))));HEAPF32[dsp + 352144 >> 2] = +(+(HEAPF32[dsp + 351616 >> 2]) - +(5. + +((HEAP32[dsp + 352132 >> 2] | 0))));HEAPF32[dsp + 352148 >> 2] = +(+(HEAPF32[dsp + 351616 >> 2]) - +(+((HEAP32[dsp + 352132 >> 2] | 0)) + 6.));HEAPF32[dsp + 352152 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 352136 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352140 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352144 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 352148 >> 2]))));for (i103 = 0; (((i103 | 0) < 2) | 0); i103 = (((i103 | 0) + 1) | 0)) {HEAP32[dsp + 350520 + ((i103 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 352156 >> 2] = +(1040. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i104 = 0; (((i104 | 0) < 2) | 0); i104 = (((i104 | 0) + 1) | 0)) {HEAPF32[dsp + 350528 + ((i104 | 0) << 2) >> 2] = 0.;}for (i105 = 0; (((i105 | 0) < 128) | 0); i105 = (((i105 | 0) + 1) | 0)) {HEAPF32[dsp + 348160 + ((i105 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352160 >> 2] = ((~~(+(0.000480769 * +((HEAP32[dsp + 350620 >> 2] | 0)))) & 4095) | 0);HEAPF32[dsp + 352164 >> 2] = +(3267.26 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 352168 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 352164 >> 2])));HEAPF32[dsp + 352172 >> 2] = +(1. - +(HEAPF32[dsp + 352164 >> 2]));for (i106 = 0; (((i106 | 0) < 2) | 0); i106 = (((i106 | 0) + 1) | 0)) {HEAPF32[dsp + 350536 + ((i106 | 0) << 2) >> 2] = 0.;}for (i107 = 0; (((i107 | 0) < 4096) | 0); i107 = (((i107 | 0) + 1) | 0)) {HEAPF32[dsp + 262144 + ((i107 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352176 >> 2] = (((HEAP32[dsp + 352132 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 352180 >> 2] = +(+(HEAPF32[dsp + 351616 >> 2]) - +(2. + +((HEAP32[dsp + 352132 >> 2] | 0))));HEAPF32[dsp + 352184 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 352140 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352144 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352148 >> 2]))));HEAP32[dsp + 352188 >> 2] = ((((1 + (HEAP32[dsp + 352132 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352192 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 352136 >> 2]) * +(0. - +(HEAPF32[dsp + 352144 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 352148 >> 2])))));HEAP32[dsp + 352196 >> 2] = ((((2 + (HEAP32[dsp + 352132 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352200 >> 2] = +(+(HEAPF32[dsp + 352136 >> 2]) * +(HEAPF32[dsp + 352140 >> 2]));HEAPF32[dsp + 352204 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 352200 >> 2]) * +(0. - +(HEAPF32[dsp + 352148 >> 2]))));HEAP32[dsp + 352208 >> 2] = ((((3 + (HEAP32[dsp + 352132 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352212 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 352200 >> 2]) * +(HEAPF32[dsp + 352144 >> 2])));HEAP32[dsp + 352216 >> 2] = ((((4 + (HEAP32[dsp + 352132 >> 2] | 0)) | 0) & 4095) | 0);for (i108 = 0; (((i108 | 0) < 4) | 0); i108 = (((i108 | 0) + 1) | 0)) {HEAPF32[dsp + 350016 + ((i108 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352220 >> 2] = ~~(+(+(HEAPF32[dsp + 351708 >> 2]) - 3.49999));HEAPF32[dsp + 352224 >> 2] = +(+(HEAPF32[dsp + 351708 >> 2]) - +(+((HEAP32[dsp + 352220 >> 2] | 0)) + 3.));HEAPF32[dsp + 352228 >> 2] = +(+(HEAPF32[dsp + 351708 >> 2]) - +(4. + +((HEAP32[dsp + 352220 >> 2] | 0))));HEAPF32[dsp + 352232 >> 2] = +(+(HEAPF32[dsp + 351708 >> 2]) - +(5. + +((HEAP32[dsp + 352220 >> 2] | 0))));HEAPF32[dsp + 352236 >> 2] = +(+(HEAPF32[dsp + 351708 >> 2]) - +(+((HEAP32[dsp + 352220 >> 2] | 0)) + 6.));HEAPF32[dsp + 352240 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 352224 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352228 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352232 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 352236 >> 2]))));for (i109 = 0; (((i109 | 0) < 2) | 0); i109 = (((i109 | 0) + 1) | 0)) {HEAP32[dsp + 350544 + ((i109 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 352244 >> 2] = +(1100. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i110 = 0; (((i110 | 0) < 2) | 0); i110 = (((i110 | 0) + 1) | 0)) {HEAPF32[dsp + 350552 + ((i110 | 0) << 2) >> 2] = 0.;}for (i111 = 0; (((i111 | 0) < 128) | 0); i111 = (((i111 | 0) + 1) | 0)) {HEAPF32[dsp + 348672 + ((i111 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352248 >> 2] = ((~~(+(0.000454545 * +((HEAP32[dsp + 350620 >> 2] | 0)))) & 4095) | 0);HEAPF32[dsp + 352252 >> 2] = +(3455.75 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 352256 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 352252 >> 2])));HEAPF32[dsp + 352260 >> 2] = +(1. - +(HEAPF32[dsp + 352252 >> 2]));for (i112 = 0; (((i112 | 0) < 2) | 0); i112 = (((i112 | 0) + 1) | 0)) {HEAPF32[dsp + 350560 + ((i112 | 0) << 2) >> 2] = 0.;}for (i113 = 0; (((i113 | 0) < 4096) | 0); i113 = (((i113 | 0) + 1) | 0)) {HEAPF32[dsp + 278528 + ((i113 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352264 >> 2] = (((HEAP32[dsp + 352220 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 352268 >> 2] = +(+(HEAPF32[dsp + 351708 >> 2]) - +(2. + +((HEAP32[dsp + 352220 >> 2] | 0))));HEAPF32[dsp + 352272 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 352228 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352232 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352236 >> 2]))));HEAP32[dsp + 352276 >> 2] = ((((1 + (HEAP32[dsp + 352220 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352280 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 352224 >> 2]) * +(0. - +(HEAPF32[dsp + 352232 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 352236 >> 2])))));HEAP32[dsp + 352284 >> 2] = ((((2 + (HEAP32[dsp + 352220 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352288 >> 2] = +(+(HEAPF32[dsp + 352224 >> 2]) * +(HEAPF32[dsp + 352228 >> 2]));HEAPF32[dsp + 352292 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 352288 >> 2]) * +(0. - +(HEAPF32[dsp + 352236 >> 2]))));HEAP32[dsp + 352296 >> 2] = ((((3 + (HEAP32[dsp + 352220 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352300 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 352288 >> 2]) * +(HEAPF32[dsp + 352232 >> 2])));HEAP32[dsp + 352304 >> 2] = ((((4 + (HEAP32[dsp + 352220 >> 2] | 0)) | 0) & 4095) | 0);for (i114 = 0; (((i114 | 0) < 4) | 0); i114 = (((i114 | 0) + 1) | 0)) {HEAPF32[dsp + 350032 + ((i114 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352308 >> 2] = ~~(+(+(HEAPF32[dsp + 351800 >> 2]) - 3.49999));HEAPF32[dsp + 352312 >> 2] = +(+(HEAPF32[dsp + 351800 >> 2]) - +(+((HEAP32[dsp + 352308 >> 2] | 0)) + 3.));HEAPF32[dsp + 352316 >> 2] = +(+(HEAPF32[dsp + 351800 >> 2]) - +(4. + +((HEAP32[dsp + 352308 >> 2] | 0))));HEAPF32[dsp + 352320 >> 2] = +(+(HEAPF32[dsp + 351800 >> 2]) - +(5. + +((HEAP32[dsp + 352308 >> 2] | 0))));HEAPF32[dsp + 352324 >> 2] = +(+(HEAPF32[dsp + 351800 >> 2]) - +(+((HEAP32[dsp + 352308 >> 2] | 0)) + 6.));HEAPF32[dsp + 352328 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 352312 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352316 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352320 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 352324 >> 2]))));for (i115 = 0; (((i115 | 0) < 2) | 0); i115 = (((i115 | 0) + 1) | 0)) {HEAP32[dsp + 350568 + ((i115 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 352332 >> 2] = +(1600. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i116 = 0; (((i116 | 0) < 2) | 0); i116 = (((i116 | 0) + 1) | 0)) {HEAPF32[dsp + 350576 + ((i116 | 0) << 2) >> 2] = 0.;}for (i117 = 0; (((i117 | 0) < 64) | 0); i117 = (((i117 | 0) + 1) | 0)) {HEAPF32[dsp + 349184 + ((i117 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352336 >> 2] = ((~~(+(0.0003125 * +((HEAP32[dsp + 350620 >> 2] | 0)))) & 4095) | 0);HEAPF32[dsp + 352340 >> 2] = +(5026.55 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 352344 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 352340 >> 2])));HEAPF32[dsp + 352348 >> 2] = +(1. - +(HEAPF32[dsp + 352340 >> 2]));for (i118 = 0; (((i118 | 0) < 2) | 0); i118 = (((i118 | 0) + 1) | 0)) {HEAPF32[dsp + 350584 + ((i118 | 0) << 2) >> 2] = 0.;}for (i119 = 0; (((i119 | 0) < 4096) | 0); i119 = (((i119 | 0) + 1) | 0)) {HEAPF32[dsp + 294912 + ((i119 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352352 >> 2] = (((HEAP32[dsp + 352308 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 352356 >> 2] = +(+(HEAPF32[dsp + 351800 >> 2]) - +(2. + +((HEAP32[dsp + 352308 >> 2] | 0))));HEAPF32[dsp + 352360 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 352316 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352320 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352324 >> 2]))));HEAP32[dsp + 352364 >> 2] = ((((1 + (HEAP32[dsp + 352308 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352368 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 352312 >> 2]) * +(0. - +(HEAPF32[dsp + 352320 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 352324 >> 2])))));HEAP32[dsp + 352372 >> 2] = ((((2 + (HEAP32[dsp + 352308 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352376 >> 2] = +(+(HEAPF32[dsp + 352312 >> 2]) * +(HEAPF32[dsp + 352316 >> 2]));HEAPF32[dsp + 352380 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 352376 >> 2]) * +(0. - +(HEAPF32[dsp + 352324 >> 2]))));HEAP32[dsp + 352384 >> 2] = ((((3 + (HEAP32[dsp + 352308 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352388 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 352376 >> 2]) * +(HEAPF32[dsp + 352320 >> 2])));HEAP32[dsp + 352392 >> 2] = ((((4 + (HEAP32[dsp + 352308 >> 2] | 0)) | 0) & 4095) | 0);for (i120 = 0; (((i120 | 0) < 4) | 0); i120 = (((i120 | 0) + 1) | 0)) {HEAPF32[dsp + 350048 + ((i120 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352396 >> 2] = ~~(+(+(HEAPF32[dsp + 351892 >> 2]) - 3.49999));HEAPF32[dsp + 352400 >> 2] = +(+(HEAPF32[dsp + 351892 >> 2]) - +(+((HEAP32[dsp + 352396 >> 2] | 0)) + 3.));HEAPF32[dsp + 352404 >> 2] = +(+(HEAPF32[dsp + 351892 >> 2]) - +(4. + +((HEAP32[dsp + 352396 >> 2] | 0))));HEAPF32[dsp + 352408 >> 2] = +(+(HEAPF32[dsp + 351892 >> 2]) - +(5. + +((HEAP32[dsp + 352396 >> 2] | 0))));HEAPF32[dsp + 352412 >> 2] = +(+(HEAPF32[dsp + 351892 >> 2]) - +(+((HEAP32[dsp + 352396 >> 2] | 0)) + 6.));HEAPF32[dsp + 352416 >> 2] = +(+(+(+(0. - +(HEAPF32[dsp + 352400 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352404 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352408 >> 2])))) * +(0. - +(0.25 * +(HEAPF32[dsp + 352412 >> 2]))));for (i121 = 0; (((i121 | 0) < 2) | 0); i121 = (((i121 | 0) + 1) | 0)) {HEAP32[dsp + 350592 + ((i121 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 352420 >> 2] = +(1720. / +((HEAP32[dsp + 350620 >> 2] | 0)));for (i122 = 0; (((i122 | 0) < 2) | 0); i122 = (((i122 | 0) + 1) | 0)) {HEAPF32[dsp + 350600 + ((i122 | 0) << 2) >> 2] = 0.;}for (i123 = 0; (((i123 | 0) < 64) | 0); i123 = (((i123 | 0) + 1) | 0)) {HEAPF32[dsp + 349440 + ((i123 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352424 >> 2] = ((~~(+(0.000290698 * +((HEAP32[dsp + 350620 >> 2] | 0)))) & 4095) | 0);HEAPF32[dsp + 352428 >> 2] = +(5403.54 / +((HEAP32[dsp + 350620 >> 2] | 0)));HEAPF32[dsp + 352432 >> 2] = +(1. / +(1. + +(HEAPF32[dsp + 352428 >> 2])));HEAPF32[dsp + 352436 >> 2] = +(1. - +(HEAPF32[dsp + 352428 >> 2]));for (i124 = 0; (((i124 | 0) < 2) | 0); i124 = (((i124 | 0) + 1) | 0)) {HEAPF32[dsp + 350608 + ((i124 | 0) << 2) >> 2] = 0.;}for (i125 = 0; (((i125 | 0) < 4096) | 0); i125 = (((i125 | 0) + 1) | 0)) {HEAPF32[dsp + 311296 + ((i125 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 352440 >> 2] = (((HEAP32[dsp + 352396 >> 2] | 0) & 4095) | 0);HEAPF32[dsp + 352444 >> 2] = +(+(HEAPF32[dsp + 351892 >> 2]) - +(2. + +((HEAP32[dsp + 352396 >> 2] | 0))));HEAPF32[dsp + 352448 >> 2] = +(+(+(0. - +(HEAPF32[dsp + 352404 >> 2])) * +(0. - +(0.5 * +(HEAPF32[dsp + 352408 >> 2])))) * +(0. - +(0.333333 * +(HEAPF32[dsp + 352412 >> 2]))));HEAP32[dsp + 352452 >> 2] = ((((1 + (HEAP32[dsp + 352396 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352456 >> 2] = +(0.5 * +(+(+(HEAPF32[dsp + 352400 >> 2]) * +(0. - +(HEAPF32[dsp + 352408 >> 2]))) * +(0. - +(0.5 * +(HEAPF32[dsp + 352412 >> 2])))));HEAP32[dsp + 352460 >> 2] = ((((2 + (HEAP32[dsp + 352396 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352464 >> 2] = +(+(HEAPF32[dsp + 352400 >> 2]) * +(HEAPF32[dsp + 352404 >> 2]));HEAPF32[dsp + 352468 >> 2] = +(0.166667 * +(+(HEAPF32[dsp + 352464 >> 2]) * +(0. - +(HEAPF32[dsp + 352412 >> 2]))));HEAP32[dsp + 352472 >> 2] = ((((3 + (HEAP32[dsp + 352396 >> 2] | 0)) | 0) & 4095) | 0);HEAPF32[dsp + 352476 >> 2] = +(0.0416667 * +(+(HEAPF32[dsp + 352464 >> 2]) * +(HEAPF32[dsp + 352408 >> 2])));HEAP32[dsp + 352480 >> 2] = ((((4 + (HEAP32[dsp + 352396 >> 2] | 0)) | 0) & 4095) | 0);for (i126 = 0; (((i126 | 0) < 4) | 0); i126 = (((i126 | 0) + 1) | 0)) {HEAPF32[dsp + 350064 + ((i126 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var output0 = 0;var fSlow0 = 0.;var fSlow1 = 0.;var iSlow2 = 0;var fSlow3 = 0.;var fSlow4 = 0.;var fSlow5 = 0.;var fSlow6 = 0.;var fSlow7 = 0.;var fSlow8 = 0.;var fSlow9 = 0.;var fSlow10 = 0.;var fSlow11 = 0.;var fSlow12 = 0.;var fSlow13 = 0.;var fSlow14 = 0.;var fSlow15 = 0.;var fSlow16 = 0.;var fSlow17 = 0.;var fSlow18 = 0.;var fSlow19 = 0.;var fSlow20 = 0.;var fSlow21 = 0.;var fSlow22 = 0.;var fSlow23 = 0.;var i = 0;var iTemp0 = 0;var fSel0 = 0.;var iTemp1 = 0;var fTemp2 = 0.;var fTemp3 = 0.;var iTemp4 = 0;var fTemp5 = 0.;var fTemp6 = 0.;var iTemp7 = 0;var fTemp8 = 0.;var fTemp9 = 0.;var iTemp10 = 0;var fTemp11 = 0.;var fTemp12 = 0.;var iTemp13 = 0;var fTemp14 = 0.;var fTemp15 = 0.;var iTemp16 = 0;var fTemp17 = 0.;var fTemp18 = 0.;var iTemp19 = 0;var fTemp20 = 0.;var fTemp21 = 0.;var iTemp22 = 0;var fTemp23 = 0.;var fTemp24 = 0.;var iTemp25 = 0;var fTemp26 = 0.;var fTemp27 = 0.;var iTemp28 = 0;var fTemp29 = 0.;var fTemp30 = 0.;var iTemp31 = 0;var fTemp32 = 0.;var fTemp33 = 0.;var iTemp34 = 0;var fTemp35 = 0.;var fTemp36 = 0.;var iTemp37 = 0;var fTemp38 = 0.;var fTemp39 = 0.;var iTemp40 = 0;var fTemp41 = 0.;var fTemp42 = 0.;var iTemp43 = 0;var fTemp44 = 0.;var fTemp45 = 0.;var iTemp46 = 0;var fTemp47 = 0.;var fTemp48 = 0.;var iTemp49 = 0;var fTemp50 = 0.;var fTemp51 = 0.;var iTemp52 = 0;var fTemp53 = 0.;var fTemp54 = 0.;var iTemp55 = 0;var fTemp56 = 0.;var fTemp57 = 0.;var iTemp58 = 0;var fTemp59 = 0.;var fTemp60 = 0.;var j0 = 3;var j1 = 3;var j2 = 3;var j3 = 3;var j4 = 3;var j5 = 3;var j6 = 3;var j7 = 3;var j8 = 3;var j9 = 3;var j10 = 3;var j11 = 3;var j12 = 3;var j13 = 3;var j14 = 3;var j15 = 3;var j16 = 3;var j17 = 3;var j18 = 3;var j19 = 3;output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);fSlow0 = +(0.001 * +(+(HEAPF32[dsp + 350656 >> 2])));fSlow1 = +(+(HEAPF32[dsp + 350660 >> 2]));iSlow2 = ((+(fSlow1) <= 0.) | 0);fSlow3 = +(max(0.5, +(min(10., +(+(HEAPF32[dsp + 350680 >> 2]))))));fSlow4 = +(powf(0.001, +(0.005 / +(fSlow3))));fSlow5 = +(powf(0.001, +(0.00465116 / +(fSlow3))));fSlow6 = +(powf(0.001, +(0.00434783 / +(fSlow3))));fSlow7 = +(powf(0.001, +(0.00408163 / +(fSlow3))));fSlow8 = +(powf(0.001, +(0.00384615 / +(fSlow3))));fSlow9 = +(powf(0.001, +(0.00363636 / +(fSlow3))));fSlow10 = +(powf(0.001, +(0.0025 / +(fSlow3))));fSlow11 = +(powf(0.001, +(0.00232558 / +(fSlow3))));fSlow12 = +(powf(0.001, +(0.00217391 / +(fSlow3))));fSlow13 = +(powf(0.001, +(0.00204082 / +(fSlow3))));fSlow14 = +(powf(0.001, +(0.00192308 / +(fSlow3))));fSlow15 = +(powf(0.001, +(0.00181818 / +(fSlow3))));fSlow16 = +(powf(0.001, +(0.00125 / +(fSlow3))));fSlow17 = +(powf(0.001, +(0.00116279 / +(fSlow3))));fSlow18 = +(powf(0.001, +(0.00108696 / +(fSlow3))));fSlow19 = +(powf(0.001, +(0.00102041 / +(fSlow3))));fSlow20 = +(powf(0.001, +(0.000961538 / +(fSlow3))));fSlow21 = +(powf(0.001, +(0.000909091 / +(fSlow3))));fSlow22 = +(powf(0.001, +(0.000625 / +(fSlow3))));fSlow23 = +(powf(0.001, +(0.000581395 / +(fSlow3))));for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAP32[dsp + 350080 + (0 << 2) >> 2] = ((12345 + (imul(1103515245, (HEAP32[dsp + 350080 + (1 << 2) >> 2] | 0)) | 0)) | 0);HEAPF32[dsp + 350088 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 350088 + (1 << 2) >> 2])) + +(fSlow0));HEAP32[dsp + 350096 + (0 << 2) >> 2] = ((((1 + (HEAP32[dsp + 350096 + (1 << 2) >> 2] | 0)) | 0) % ~~(+(+((HEAP32[dsp + 350652 >> 2] | 0)) / +(~~(+(max(180., +(min(720., +(HEAPF32[dsp + 350088 + (0 << 2) >> 2])))))))))) | 0);iTemp0 = (((HEAP32[dsp + 350096 + (0 << 2) >> 2] | 0) == 0) | 0);HEAP32[dsp + 350104 + (0 << 2) >> 2] = (iTemp0 | 0);HEAPF32[dsp + 350112 + (0 << 2) >> 2] = +(fSlow1);fSel0 = 0.;if (((HEAP32[dsp + 350104 + (1 << 2) >> 2] | 0) != 0) | 0) {fSel0 = 0.;} else {fSel0 = +(+(HEAPF32[dsp + 350120 + (1 << 2) >> 2]) + +(fabsf(+(+(fSlow1) - +(HEAPF32[dsp + 350112 + (1 << 2) >> 2])))));}HEAPF32[dsp + 350120 + (0 << 2) >> 2] = +(fSel0);HEAP32[dsp + 350128 + (0 << 2) >> 2] = (((((iTemp0 | 0) + (HEAP32[dsp + 350128 + (1 << 2) >> 2] | 0)) | 0) % 15) | 0);HEAPF32[dsp + 349696 + ((((((iTemp0 | 0) & ((((+(HEAPF32[dsp + 350120 + (0 << 2) >> 2]) > 0.) | 0) | (iSlow2 | 0)) | 0)) | 0)?(HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0):15) | 0) << 2) >> 2] = +(fSlow1);iTemp1 = ((+(fabsf(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]))) < 0.5) | 0);HEAP32[dsp + 350136 + (0 << 2) >> 2] = (iTemp1 | 0);HEAPF32[dsp + 350144 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350144 + (1 << 2) >> 2]) + +((((((iTemp1 | 0) - (HEAP32[dsp + 350136 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 350664 >> 2]) * +(((+(HEAPF32[dsp + 350144 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 327680 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 327680 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 511) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350144 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp2 = +(+(HEAPF32[dsp + 327680 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 511) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 327680 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350676 >> 2] | 0)) | 0) & 511) | 0) << 2) >> 2]));HEAPF32[dsp + 350152 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 350688 >> 2]) * +(+(+(HEAPF32[dsp + 350692 >> 2]) * +(HEAPF32[dsp + 350152 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 350684 >> 2]) * +(fTemp2))));fTemp3 = +(+(0.215443 * +(fTemp2)) + +(+(+(fSlow4) * +(+(0.5 * +(HEAPF32[dsp + 349760 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349760 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349760 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350152 + (0 << 2) >> 2]))));HEAPF32[dsp + 0 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp3);HEAPF32[dsp + 349760 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350648 >> 2]) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350696 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 350700 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 350704 >> 2]) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350708 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 350712 >> 2]) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350716 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 350724 >> 2]) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350728 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 350732 >> 2]) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350736 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp4 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 1.))) < 0.5) | 0);HEAP32[dsp + 350160 + (0 << 2) >> 2] = (iTemp4 | 0);HEAPF32[dsp + 350168 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350168 + (1 << 2) >> 2]) + +((((((iTemp4 | 0) - (HEAP32[dsp + 350160 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 350768 >> 2]) * +(((+(HEAPF32[dsp + 350168 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 329728 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 329728 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 511) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350168 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp5 = +(+(HEAPF32[dsp + 329728 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 511) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 329728 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350776 >> 2] | 0)) | 0) & 511) | 0) << 2) >> 2]));HEAPF32[dsp + 350176 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 350784 >> 2]) * +(+(+(HEAPF32[dsp + 350788 >> 2]) * +(HEAPF32[dsp + 350176 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 350780 >> 2]) * +(fTemp5))));fTemp6 = +(+(0.215443 * +(fTemp5)) + +(+(+(fSlow5) * +(+(0.5 * +(HEAPF32[dsp + 349776 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349776 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349776 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350176 + (0 << 2) >> 2]))));HEAPF32[dsp + 16384 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp6);HEAPF32[dsp + 349776 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350764 >> 2]) * +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350792 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 350796 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 350800 >> 2]) * +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350804 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 350808 >> 2]) * +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350812 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 350820 >> 2]) * +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350824 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 350828 >> 2]) * +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350832 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp7 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 2.))) < 0.5) | 0);HEAP32[dsp + 350184 + (0 << 2) >> 2] = (iTemp7 | 0);HEAPF32[dsp + 350192 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350192 + (1 << 2) >> 2]) + +((((((iTemp7 | 0) - (HEAP32[dsp + 350184 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 350864 >> 2]) * +(((+(HEAPF32[dsp + 350192 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 331776 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 331776 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 511) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350192 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp8 = +(+(HEAPF32[dsp + 331776 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 511) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 331776 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350872 >> 2] | 0)) | 0) & 511) | 0) << 2) >> 2]));HEAPF32[dsp + 350200 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 350880 >> 2]) * +(+(+(HEAPF32[dsp + 350884 >> 2]) * +(HEAPF32[dsp + 350200 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 350876 >> 2]) * +(fTemp8))));fTemp9 = +(+(0.215443 * +(fTemp8)) + +(+(+(fSlow6) * +(+(0.5 * +(HEAPF32[dsp + 349792 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349792 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349792 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350200 + (0 << 2) >> 2]))));HEAPF32[dsp + 32768 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp9);HEAPF32[dsp + 349792 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350860 >> 2]) * +(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350888 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 350892 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 350896 >> 2]) * +(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350900 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 350904 >> 2]) * +(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350908 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 350916 >> 2]) * +(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350920 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 350924 >> 2]) * +(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350928 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp10 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 3.))) < 0.5) | 0);HEAP32[dsp + 350208 + (0 << 2) >> 2] = (iTemp10 | 0);HEAPF32[dsp + 350216 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350216 + (1 << 2) >> 2]) + +((((((iTemp10 | 0) - (HEAP32[dsp + 350208 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 350960 >> 2]) * +(((+(HEAPF32[dsp + 350216 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 333824 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 333824 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 511) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350216 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp11 = +(+(HEAPF32[dsp + 333824 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 511) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 333824 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350968 >> 2] | 0)) | 0) & 511) | 0) << 2) >> 2]));HEAPF32[dsp + 350224 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 350976 >> 2]) * +(+(+(HEAPF32[dsp + 350980 >> 2]) * +(HEAPF32[dsp + 350224 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 350972 >> 2]) * +(fTemp11))));fTemp12 = +(+(0.215443 * +(fTemp11)) + +(+(+(fSlow7) * +(+(0.5 * +(HEAPF32[dsp + 349808 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349808 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349808 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350224 + (0 << 2) >> 2]))));HEAPF32[dsp + 49152 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp12);HEAPF32[dsp + 349808 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350956 >> 2]) * +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350984 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 350988 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 350992 >> 2]) * +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 350996 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351000 >> 2]) * +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351004 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351012 >> 2]) * +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351016 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351020 >> 2]) * +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351024 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp13 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 4.))) < 0.5) | 0);HEAP32[dsp + 350232 + (0 << 2) >> 2] = (iTemp13 | 0);HEAPF32[dsp + 350240 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350240 + (1 << 2) >> 2]) + +((((((iTemp13 | 0) - (HEAP32[dsp + 350232 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351056 >> 2]) * +(((+(HEAPF32[dsp + 350240 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 335872 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 335872 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 511) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350240 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp14 = +(+(HEAPF32[dsp + 335872 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 511) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 335872 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351064 >> 2] | 0)) | 0) & 511) | 0) << 2) >> 2]));HEAPF32[dsp + 350248 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351072 >> 2]) * +(+(+(HEAPF32[dsp + 351076 >> 2]) * +(HEAPF32[dsp + 350248 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351068 >> 2]) * +(fTemp14))));fTemp15 = +(+(0.215443 * +(fTemp14)) + +(+(+(fSlow8) * +(+(0.5 * +(HEAPF32[dsp + 349824 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349824 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349824 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350248 + (0 << 2) >> 2]))));HEAPF32[dsp + 65536 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp15);HEAPF32[dsp + 349824 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351052 >> 2]) * +(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351080 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351084 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351088 >> 2]) * +(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351092 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351096 >> 2]) * +(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351100 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351108 >> 2]) * +(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351112 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351116 >> 2]) * +(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351120 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp16 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 5.))) < 0.5) | 0);HEAP32[dsp + 350256 + (0 << 2) >> 2] = (iTemp16 | 0);HEAPF32[dsp + 350264 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350264 + (1 << 2) >> 2]) + +((((((iTemp16 | 0) - (HEAP32[dsp + 350256 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351152 >> 2]) * +(((+(HEAPF32[dsp + 350264 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 337920 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 337920 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 511) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350264 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp17 = +(+(HEAPF32[dsp + 337920 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 511) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 337920 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351160 >> 2] | 0)) | 0) & 511) | 0) << 2) >> 2]));HEAPF32[dsp + 350272 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351168 >> 2]) * +(+(+(HEAPF32[dsp + 351172 >> 2]) * +(HEAPF32[dsp + 350272 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351164 >> 2]) * +(fTemp17))));fTemp18 = +(+(0.215443 * +(fTemp17)) + +(+(+(fSlow9) * +(+(0.5 * +(HEAPF32[dsp + 349840 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349840 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349840 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350272 + (0 << 2) >> 2]))));HEAPF32[dsp + 81920 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp18);HEAPF32[dsp + 349840 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351148 >> 2]) * +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351176 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351180 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351184 >> 2]) * +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351188 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351192 >> 2]) * +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351196 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351204 >> 2]) * +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351208 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351212 >> 2]) * +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351216 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp19 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 6.))) < 0.5) | 0);HEAP32[dsp + 350280 + (0 << 2) >> 2] = (iTemp19 | 0);HEAPF32[dsp + 350288 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350288 + (1 << 2) >> 2]) + +((((((iTemp19 | 0) - (HEAP32[dsp + 350280 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351244 >> 2]) * +(((+(HEAPF32[dsp + 350288 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 339968 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 339968 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 255) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350288 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp20 = +(+(HEAPF32[dsp + 339968 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 255) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 339968 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351252 >> 2] | 0)) | 0) & 255) | 0) << 2) >> 2]));HEAPF32[dsp + 350296 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351260 >> 2]) * +(+(+(HEAPF32[dsp + 351264 >> 2]) * +(HEAPF32[dsp + 350296 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351256 >> 2]) * +(fTemp20))));fTemp21 = +(+(0.215443 * +(fTemp20)) + +(+(+(fSlow10) * +(+(0.5 * +(HEAPF32[dsp + 349856 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349856 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349856 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350296 + (0 << 2) >> 2]))));HEAPF32[dsp + 98304 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp21);HEAPF32[dsp + 349856 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351240 >> 2]) * +(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351268 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351272 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351276 >> 2]) * +(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351280 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351284 >> 2]) * +(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351288 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351296 >> 2]) * +(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351300 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351304 >> 2]) * +(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351308 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp22 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 7.))) < 0.5) | 0);HEAP32[dsp + 350304 + (0 << 2) >> 2] = (iTemp22 | 0);HEAPF32[dsp + 350312 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350312 + (1 << 2) >> 2]) + +((((((iTemp22 | 0) - (HEAP32[dsp + 350304 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351336 >> 2]) * +(((+(HEAPF32[dsp + 350312 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 340992 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 340992 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 255) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350312 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp23 = +(+(HEAPF32[dsp + 340992 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 255) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 340992 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351344 >> 2] | 0)) | 0) & 255) | 0) << 2) >> 2]));HEAPF32[dsp + 350320 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351352 >> 2]) * +(+(+(HEAPF32[dsp + 351356 >> 2]) * +(HEAPF32[dsp + 350320 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351348 >> 2]) * +(fTemp23))));fTemp24 = +(+(0.215443 * +(fTemp23)) + +(+(+(fSlow11) * +(+(0.5 * +(HEAPF32[dsp + 349872 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349872 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349872 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350320 + (0 << 2) >> 2]))));HEAPF32[dsp + 114688 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp24);HEAPF32[dsp + 349872 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351332 >> 2]) * +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351360 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351364 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351368 >> 2]) * +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351372 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351376 >> 2]) * +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351380 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351388 >> 2]) * +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351392 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351396 >> 2]) * +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351400 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp25 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 8.))) < 0.5) | 0);HEAP32[dsp + 350328 + (0 << 2) >> 2] = (iTemp25 | 0);HEAPF32[dsp + 350336 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350336 + (1 << 2) >> 2]) + +((((((iTemp25 | 0) - (HEAP32[dsp + 350328 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351428 >> 2]) * +(((+(HEAPF32[dsp + 350336 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 342016 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 342016 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 255) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350336 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp26 = +(+(HEAPF32[dsp + 342016 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 255) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 342016 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351436 >> 2] | 0)) | 0) & 255) | 0) << 2) >> 2]));HEAPF32[dsp + 350344 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351444 >> 2]) * +(+(+(HEAPF32[dsp + 351448 >> 2]) * +(HEAPF32[dsp + 350344 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351440 >> 2]) * +(fTemp26))));fTemp27 = +(+(0.215443 * +(fTemp26)) + +(+(+(fSlow12) * +(+(0.5 * +(HEAPF32[dsp + 349888 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349888 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349888 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350344 + (0 << 2) >> 2]))));HEAPF32[dsp + 131072 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp27);HEAPF32[dsp + 349888 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351424 >> 2]) * +(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351452 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351456 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351460 >> 2]) * +(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351464 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351468 >> 2]) * +(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351472 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351480 >> 2]) * +(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351484 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351488 >> 2]) * +(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351492 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp28 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 9.))) < 0.5) | 0);HEAP32[dsp + 350352 + (0 << 2) >> 2] = (iTemp28 | 0);HEAPF32[dsp + 350360 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350360 + (1 << 2) >> 2]) + +((((((iTemp28 | 0) - (HEAP32[dsp + 350352 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351520 >> 2]) * +(((+(HEAPF32[dsp + 350360 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 343040 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 343040 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 255) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350360 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp29 = +(+(HEAPF32[dsp + 343040 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 255) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 343040 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351528 >> 2] | 0)) | 0) & 255) | 0) << 2) >> 2]));HEAPF32[dsp + 350368 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351536 >> 2]) * +(+(+(HEAPF32[dsp + 351540 >> 2]) * +(HEAPF32[dsp + 350368 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351532 >> 2]) * +(fTemp29))));fTemp30 = +(+(0.215443 * +(fTemp29)) + +(+(+(fSlow13) * +(+(0.5 * +(HEAPF32[dsp + 349904 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349904 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349904 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350368 + (0 << 2) >> 2]))));HEAPF32[dsp + 147456 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp30);HEAPF32[dsp + 349904 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351516 >> 2]) * +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351544 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351548 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351552 >> 2]) * +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351556 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351560 >> 2]) * +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351564 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351572 >> 2]) * +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351576 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351580 >> 2]) * +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351584 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp31 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 10.))) < 0.5) | 0);HEAP32[dsp + 350376 + (0 << 2) >> 2] = (iTemp31 | 0);HEAPF32[dsp + 350384 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350384 + (1 << 2) >> 2]) + +((((((iTemp31 | 0) - (HEAP32[dsp + 350376 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351612 >> 2]) * +(((+(HEAPF32[dsp + 350384 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 344064 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 344064 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 255) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350384 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp32 = +(+(HEAPF32[dsp + 344064 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 255) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 344064 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351620 >> 2] | 0)) | 0) & 255) | 0) << 2) >> 2]));HEAPF32[dsp + 350392 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351628 >> 2]) * +(+(+(HEAPF32[dsp + 351632 >> 2]) * +(HEAPF32[dsp + 350392 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351624 >> 2]) * +(fTemp32))));fTemp33 = +(+(0.215443 * +(fTemp32)) + +(+(+(fSlow14) * +(+(0.5 * +(HEAPF32[dsp + 349920 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349920 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349920 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350392 + (0 << 2) >> 2]))));HEAPF32[dsp + 163840 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp33);HEAPF32[dsp + 349920 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351608 >> 2]) * +(HEAPF32[dsp + 163840 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351636 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351640 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351644 >> 2]) * +(HEAPF32[dsp + 163840 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351648 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351652 >> 2]) * +(HEAPF32[dsp + 163840 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351656 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351664 >> 2]) * +(HEAPF32[dsp + 163840 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351668 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351672 >> 2]) * +(HEAPF32[dsp + 163840 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351676 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp34 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 11.))) < 0.5) | 0);HEAP32[dsp + 350400 + (0 << 2) >> 2] = (iTemp34 | 0);HEAPF32[dsp + 350408 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350408 + (1 << 2) >> 2]) + +((((((iTemp34 | 0) - (HEAP32[dsp + 350400 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351704 >> 2]) * +(((+(HEAPF32[dsp + 350408 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 345088 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 345088 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 255) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350408 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp35 = +(+(HEAPF32[dsp + 345088 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 255) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 345088 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351712 >> 2] | 0)) | 0) & 255) | 0) << 2) >> 2]));HEAPF32[dsp + 350416 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351720 >> 2]) * +(+(+(HEAPF32[dsp + 351724 >> 2]) * +(HEAPF32[dsp + 350416 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351716 >> 2]) * +(fTemp35))));fTemp36 = +(+(0.215443 * +(fTemp35)) + +(+(+(fSlow15) * +(+(0.5 * +(HEAPF32[dsp + 349936 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349936 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349936 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350416 + (0 << 2) >> 2]))));HEAPF32[dsp + 180224 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp36);HEAPF32[dsp + 349936 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351700 >> 2]) * +(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351728 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351732 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351736 >> 2]) * +(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351740 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351744 >> 2]) * +(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351748 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351756 >> 2]) * +(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351760 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351764 >> 2]) * +(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351768 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp37 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 12.))) < 0.5) | 0);HEAP32[dsp + 350424 + (0 << 2) >> 2] = (iTemp37 | 0);HEAPF32[dsp + 350432 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350432 + (1 << 2) >> 2]) + +((((((iTemp37 | 0) - (HEAP32[dsp + 350424 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351796 >> 2]) * +(((+(HEAPF32[dsp + 350432 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 346112 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 346112 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 127) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350432 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp38 = +(+(HEAPF32[dsp + 346112 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 127) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 346112 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351804 >> 2] | 0)) | 0) & 127) | 0) << 2) >> 2]));HEAPF32[dsp + 350440 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351812 >> 2]) * +(+(+(HEAPF32[dsp + 351816 >> 2]) * +(HEAPF32[dsp + 350440 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351808 >> 2]) * +(fTemp38))));fTemp39 = +(+(0.215443 * +(fTemp38)) + +(+(+(fSlow16) * +(+(0.5 * +(HEAPF32[dsp + 349952 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349952 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349952 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350440 + (0 << 2) >> 2]))));HEAPF32[dsp + 196608 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp39);HEAPF32[dsp + 349952 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351792 >> 2]) * +(HEAPF32[dsp + 196608 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351820 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351824 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351828 >> 2]) * +(HEAPF32[dsp + 196608 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351832 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351836 >> 2]) * +(HEAPF32[dsp + 196608 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351840 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351848 >> 2]) * +(HEAPF32[dsp + 196608 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351852 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351856 >> 2]) * +(HEAPF32[dsp + 196608 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351860 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp40 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 13.))) < 0.5) | 0);HEAP32[dsp + 350448 + (0 << 2) >> 2] = (iTemp40 | 0);HEAPF32[dsp + 350456 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350456 + (1 << 2) >> 2]) + +((((((iTemp40 | 0) - (HEAP32[dsp + 350448 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351888 >> 2]) * +(((+(HEAPF32[dsp + 350456 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 346624 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 346624 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 127) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350456 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp41 = +(+(HEAPF32[dsp + 346624 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 127) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 346624 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351896 >> 2] | 0)) | 0) & 127) | 0) << 2) >> 2]));HEAPF32[dsp + 350464 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351904 >> 2]) * +(+(+(HEAPF32[dsp + 351908 >> 2]) * +(HEAPF32[dsp + 350464 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351900 >> 2]) * +(fTemp41))));fTemp42 = +(+(0.215443 * +(fTemp41)) + +(+(+(fSlow17) * +(+(0.5 * +(HEAPF32[dsp + 349968 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349968 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349968 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350464 + (0 << 2) >> 2]))));HEAPF32[dsp + 212992 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp42);HEAPF32[dsp + 349968 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351884 >> 2]) * +(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351912 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351916 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 351920 >> 2]) * +(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351924 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 351928 >> 2]) * +(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351932 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351940 >> 2]) * +(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351944 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 351948 >> 2]) * +(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351952 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp43 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 14.))) < 0.5) | 0);HEAP32[dsp + 350472 + (0 << 2) >> 2] = (iTemp43 | 0);HEAPF32[dsp + 350480 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350480 + (1 << 2) >> 2]) + +((((((iTemp43 | 0) - (HEAP32[dsp + 350472 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 351980 >> 2]) * +(((+(HEAPF32[dsp + 350480 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 347136 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 347136 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 127) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350480 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp44 = +(+(HEAPF32[dsp + 347136 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 127) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 347136 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 351984 >> 2] | 0)) | 0) & 127) | 0) << 2) >> 2]));HEAPF32[dsp + 350488 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 351992 >> 2]) * +(+(+(HEAPF32[dsp + 351996 >> 2]) * +(HEAPF32[dsp + 350488 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 351988 >> 2]) * +(fTemp44))));fTemp45 = +(+(0.215443 * +(fTemp44)) + +(+(+(fSlow18) * +(+(0.5 * +(HEAPF32[dsp + 349984 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 349984 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 349984 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350488 + (0 << 2) >> 2]))));HEAPF32[dsp + 229376 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp45);HEAPF32[dsp + 349984 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 351976 >> 2]) * +(HEAPF32[dsp + 229376 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352000 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352004 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 352008 >> 2]) * +(HEAPF32[dsp + 229376 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352012 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352016 >> 2]) * +(HEAPF32[dsp + 229376 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352020 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352028 >> 2]) * +(HEAPF32[dsp + 229376 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352032 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352036 >> 2]) * +(HEAPF32[dsp + 229376 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352040 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp46 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 15.))) < 0.5) | 0);HEAP32[dsp + 350496 + (0 << 2) >> 2] = (iTemp46 | 0);HEAPF32[dsp + 350504 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350504 + (1 << 2) >> 2]) + +((((((iTemp46 | 0) - (HEAP32[dsp + 350496 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 352068 >> 2]) * +(((+(HEAPF32[dsp + 350504 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 347648 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 347648 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 127) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350504 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp47 = +(+(HEAPF32[dsp + 347648 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 127) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 347648 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352072 >> 2] | 0)) | 0) & 127) | 0) << 2) >> 2]));HEAPF32[dsp + 350512 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 352080 >> 2]) * +(+(+(HEAPF32[dsp + 352084 >> 2]) * +(HEAPF32[dsp + 350512 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 352076 >> 2]) * +(fTemp47))));fTemp48 = +(+(0.215443 * +(fTemp47)) + +(+(+(fSlow19) * +(+(0.5 * +(HEAPF32[dsp + 350000 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 350000 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 350000 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350512 + (0 << 2) >> 2]))));HEAPF32[dsp + 245760 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp48);HEAPF32[dsp + 350000 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 352064 >> 2]) * +(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352088 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352092 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 352096 >> 2]) * +(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352100 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352104 >> 2]) * +(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352108 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352116 >> 2]) * +(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352120 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352124 >> 2]) * +(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352128 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp49 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 16.))) < 0.5) | 0);HEAP32[dsp + 350520 + (0 << 2) >> 2] = (iTemp49 | 0);HEAPF32[dsp + 350528 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350528 + (1 << 2) >> 2]) + +((((((iTemp49 | 0) - (HEAP32[dsp + 350520 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 352156 >> 2]) * +(((+(HEAPF32[dsp + 350528 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 348160 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 348160 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 127) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350528 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp50 = +(+(HEAPF32[dsp + 348160 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 127) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 348160 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352160 >> 2] | 0)) | 0) & 127) | 0) << 2) >> 2]));HEAPF32[dsp + 350536 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 352168 >> 2]) * +(+(+(HEAPF32[dsp + 352172 >> 2]) * +(HEAPF32[dsp + 350536 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 352164 >> 2]) * +(fTemp50))));fTemp51 = +(+(0.215443 * +(fTemp50)) + +(+(+(fSlow20) * +(+(0.5 * +(HEAPF32[dsp + 350016 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 350016 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 350016 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350536 + (0 << 2) >> 2]))));HEAPF32[dsp + 262144 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp51);HEAPF32[dsp + 350016 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 352152 >> 2]) * +(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352176 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352180 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 352184 >> 2]) * +(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352188 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352192 >> 2]) * +(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352196 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352204 >> 2]) * +(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352208 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352212 >> 2]) * +(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352216 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp52 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 17.))) < 0.5) | 0);HEAP32[dsp + 350544 + (0 << 2) >> 2] = (iTemp52 | 0);HEAPF32[dsp + 350552 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350552 + (1 << 2) >> 2]) + +((((((iTemp52 | 0) - (HEAP32[dsp + 350544 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 352244 >> 2]) * +(((+(HEAPF32[dsp + 350552 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 348672 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 127) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 348672 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 127) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350552 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp53 = +(+(HEAPF32[dsp + 348672 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 127) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 348672 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352248 >> 2] | 0)) | 0) & 127) | 0) << 2) >> 2]));HEAPF32[dsp + 350560 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 352256 >> 2]) * +(+(+(HEAPF32[dsp + 352260 >> 2]) * +(HEAPF32[dsp + 350560 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 352252 >> 2]) * +(fTemp53))));fTemp54 = +(+(0.215443 * +(fTemp53)) + +(+(+(fSlow21) * +(+(0.5 * +(HEAPF32[dsp + 350032 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 350032 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 350032 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350560 + (0 << 2) >> 2]))));HEAPF32[dsp + 278528 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp54);HEAPF32[dsp + 350032 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 352240 >> 2]) * +(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352264 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352268 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 352272 >> 2]) * +(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352276 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352280 >> 2]) * +(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352284 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352292 >> 2]) * +(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352296 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352300 >> 2]) * +(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352304 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp55 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 18.))) < 0.5) | 0);HEAP32[dsp + 350568 + (0 << 2) >> 2] = (iTemp55 | 0);HEAPF32[dsp + 350576 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350576 + (1 << 2) >> 2]) + +((((((iTemp55 | 0) - (HEAP32[dsp + 350568 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 352332 >> 2]) * +(((+(HEAPF32[dsp + 350576 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 349184 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 349184 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 63) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350576 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp56 = +(+(HEAPF32[dsp + 349184 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 63) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 349184 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352336 >> 2] | 0)) | 0) & 63) | 0) << 2) >> 2]));HEAPF32[dsp + 350584 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 352344 >> 2]) * +(+(+(HEAPF32[dsp + 352348 >> 2]) * +(HEAPF32[dsp + 350584 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 352340 >> 2]) * +(fTemp56))));fTemp57 = +(+(0.215443 * +(fTemp56)) + +(+(+(fSlow22) * +(+(0.5 * +(HEAPF32[dsp + 350048 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 350048 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 350048 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350584 + (0 << 2) >> 2]))));HEAPF32[dsp + 294912 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp57);HEAPF32[dsp + 350048 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 352328 >> 2]) * +(HEAPF32[dsp + 294912 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352352 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352356 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 352360 >> 2]) * +(HEAPF32[dsp + 294912 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352364 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352368 >> 2]) * +(HEAPF32[dsp + 294912 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352372 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352380 >> 2]) * +(HEAPF32[dsp + 294912 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352384 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352388 >> 2]) * +(HEAPF32[dsp + 294912 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352392 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));iTemp58 = ((+(fabsf(+(+(HEAPF32[dsp + 349696 + ((HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 19.))) < 0.5) | 0);HEAP32[dsp + 350592 + (0 << 2) >> 2] = (iTemp58 | 0);HEAPF32[dsp + 350600 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 350600 + (1 << 2) >> 2]) + +((((((iTemp58 | 0) - (HEAP32[dsp + 350592 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 352420 >> 2]) * +(((+(HEAPF32[dsp + 350600 + (1 << 2) >> 2]) > 0.) | 0))));HEAPF32[dsp + 349440 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 63) | 0) << 2) >> 2] = +(+(0.9 * +(HEAPF32[dsp + 349440 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 1) | 0) & 63) | 0) << 2) >> 2])) + +(4.65661e-11 * +((imul((HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 350600 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp59 = +(+(HEAPF32[dsp + 349440 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - 0) | 0) & 63) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 349440 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352424 >> 2] | 0)) | 0) & 63) | 0) << 2) >> 2]));HEAPF32[dsp + 350608 + (0 << 2) >> 2] = +(+(HEAPF32[dsp + 352432 >> 2]) * +(+(+(HEAPF32[dsp + 352436 >> 2]) * +(HEAPF32[dsp + 350608 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 352428 >> 2]) * +(fTemp59))));fTemp60 = +(+(0.215443 * +(fTemp59)) + +(+(+(fSlow23) * +(+(0.5 * +(HEAPF32[dsp + 350064 + (2 << 2) >> 2])) + +(0.25 * +(+(HEAPF32[dsp + 350064 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 350064 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 350608 + (0 << 2) >> 2]))));HEAPF32[dsp + 311296 + ((((HEAP32[dsp + 350668 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp60);HEAPF32[dsp + 350064 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 352416 >> 2]) * +(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352440 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352444 >> 2]) * +(+(+(+(+(HEAPF32[dsp + 352448 >> 2]) * +(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352452 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 352456 >> 2]) * +(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352460 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352468 >> 2]) * +(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352472 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2]))) + +(+(HEAPF32[dsp + 352476 >> 2]) * +(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 350668 >> 2] | 0) - (HEAP32[dsp + 352480 >> 2] | 0)) | 0) & 4095) | 0) << 2) >> 2])))));HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(HEAPF32[dsp + 349760 + (0 << 2) >> 2]) + +(HEAPF32[dsp + 349776 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349792 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349808 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349824 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349840 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349856 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349872 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349888 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349904 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349920 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349936 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349952 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349968 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 349984 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 350000 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 350016 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 350032 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 350048 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 350064 + (0 << 2) >> 2])));HEAP32[dsp + 350080 + (1 << 2) >> 2] = (HEAP32[dsp + 350080 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350088 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350088 + (0 << 2) >> 2]);HEAP32[dsp + 350096 + (1 << 2) >> 2] = (HEAP32[dsp + 350096 + (0 << 2) >> 2] | 0);HEAP32[dsp + 350104 + (1 << 2) >> 2] = (HEAP32[dsp + 350104 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350112 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350112 + (0 << 2) >> 2]);HEAPF32[dsp + 350120 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350120 + (0 << 2) >> 2]);HEAP32[dsp + 350128 + (1 << 2) >> 2] = (HEAP32[dsp + 350128 + (0 << 2) >> 2] | 0);HEAP32[dsp + 350136 + (1 << 2) >> 2] = (HEAP32[dsp + 350136 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350144 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350144 + (0 << 2) >> 2]);HEAP32[dsp + 350668 >> 2] = (((HEAP32[dsp + 350668 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 350152 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350152 + (0 << 2) >> 2]);for (j0 = 3; (((j0 | 0) > 0) | 0); j0 = (((j0 | 0) - 1) | 0)) {HEAPF32[dsp + 349760 + ((j0 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349760 + ((((j0 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350160 + (1 << 2) >> 2] = (HEAP32[dsp + 350160 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350168 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350168 + (0 << 2) >> 2]);HEAPF32[dsp + 350176 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350176 + (0 << 2) >> 2]);for (j1 = 3; (((j1 | 0) > 0) | 0); j1 = (((j1 | 0) - 1) | 0)) {HEAPF32[dsp + 349776 + ((j1 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349776 + ((((j1 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350184 + (1 << 2) >> 2] = (HEAP32[dsp + 350184 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350192 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350192 + (0 << 2) >> 2]);HEAPF32[dsp + 350200 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350200 + (0 << 2) >> 2]);for (j2 = 3; (((j2 | 0) > 0) | 0); j2 = (((j2 | 0) - 1) | 0)) {HEAPF32[dsp + 349792 + ((j2 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349792 + ((((j2 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350208 + (1 << 2) >> 2] = (HEAP32[dsp + 350208 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350216 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350216 + (0 << 2) >> 2]);HEAPF32[dsp + 350224 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350224 + (0 << 2) >> 2]);for (j3 = 3; (((j3 | 0) > 0) | 0); j3 = (((j3 | 0) - 1) | 0)) {HEAPF32[dsp + 349808 + ((j3 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349808 + ((((j3 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350232 + (1 << 2) >> 2] = (HEAP32[dsp + 350232 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350240 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350240 + (0 << 2) >> 2]);HEAPF32[dsp + 350248 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350248 + (0 << 2) >> 2]);for (j4 = 3; (((j4 | 0) > 0) | 0); j4 = (((j4 | 0) - 1) | 0)) {HEAPF32[dsp + 349824 + ((j4 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349824 + ((((j4 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350256 + (1 << 2) >> 2] = (HEAP32[dsp + 350256 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350264 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350264 + (0 << 2) >> 2]);HEAPF32[dsp + 350272 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350272 + (0 << 2) >> 2]);for (j5 = 3; (((j5 | 0) > 0) | 0); j5 = (((j5 | 0) - 1) | 0)) {HEAPF32[dsp + 349840 + ((j5 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349840 + ((((j5 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350280 + (1 << 2) >> 2] = (HEAP32[dsp + 350280 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350288 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350288 + (0 << 2) >> 2]);HEAPF32[dsp + 350296 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350296 + (0 << 2) >> 2]);for (j6 = 3; (((j6 | 0) > 0) | 0); j6 = (((j6 | 0) - 1) | 0)) {HEAPF32[dsp + 349856 + ((j6 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349856 + ((((j6 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350304 + (1 << 2) >> 2] = (HEAP32[dsp + 350304 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350312 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350312 + (0 << 2) >> 2]);HEAPF32[dsp + 350320 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350320 + (0 << 2) >> 2]);for (j7 = 3; (((j7 | 0) > 0) | 0); j7 = (((j7 | 0) - 1) | 0)) {HEAPF32[dsp + 349872 + ((j7 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349872 + ((((j7 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350328 + (1 << 2) >> 2] = (HEAP32[dsp + 350328 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350336 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350336 + (0 << 2) >> 2]);HEAPF32[dsp + 350344 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350344 + (0 << 2) >> 2]);for (j8 = 3; (((j8 | 0) > 0) | 0); j8 = (((j8 | 0) - 1) | 0)) {HEAPF32[dsp + 349888 + ((j8 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349888 + ((((j8 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350352 + (1 << 2) >> 2] = (HEAP32[dsp + 350352 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350360 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350360 + (0 << 2) >> 2]);HEAPF32[dsp + 350368 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350368 + (0 << 2) >> 2]);for (j9 = 3; (((j9 | 0) > 0) | 0); j9 = (((j9 | 0) - 1) | 0)) {HEAPF32[dsp + 349904 + ((j9 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349904 + ((((j9 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350376 + (1 << 2) >> 2] = (HEAP32[dsp + 350376 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350384 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350384 + (0 << 2) >> 2]);HEAPF32[dsp + 350392 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350392 + (0 << 2) >> 2]);for (j10 = 3; (((j10 | 0) > 0) | 0); j10 = (((j10 | 0) - 1) | 0)) {HEAPF32[dsp + 349920 + ((j10 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349920 + ((((j10 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350400 + (1 << 2) >> 2] = (HEAP32[dsp + 350400 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350408 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350408 + (0 << 2) >> 2]);HEAPF32[dsp + 350416 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350416 + (0 << 2) >> 2]);for (j11 = 3; (((j11 | 0) > 0) | 0); j11 = (((j11 | 0) - 1) | 0)) {HEAPF32[dsp + 349936 + ((j11 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349936 + ((((j11 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350424 + (1 << 2) >> 2] = (HEAP32[dsp + 350424 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350432 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350432 + (0 << 2) >> 2]);HEAPF32[dsp + 350440 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350440 + (0 << 2) >> 2]);for (j12 = 3; (((j12 | 0) > 0) | 0); j12 = (((j12 | 0) - 1) | 0)) {HEAPF32[dsp + 349952 + ((j12 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349952 + ((((j12 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350448 + (1 << 2) >> 2] = (HEAP32[dsp + 350448 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350456 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350456 + (0 << 2) >> 2]);HEAPF32[dsp + 350464 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350464 + (0 << 2) >> 2]);for (j13 = 3; (((j13 | 0) > 0) | 0); j13 = (((j13 | 0) - 1) | 0)) {HEAPF32[dsp + 349968 + ((j13 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349968 + ((((j13 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350472 + (1 << 2) >> 2] = (HEAP32[dsp + 350472 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350480 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350480 + (0 << 2) >> 2]);HEAPF32[dsp + 350488 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350488 + (0 << 2) >> 2]);for (j14 = 3; (((j14 | 0) > 0) | 0); j14 = (((j14 | 0) - 1) | 0)) {HEAPF32[dsp + 349984 + ((j14 | 0) << 2) >> 2] = +(HEAPF32[dsp + 349984 + ((((j14 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350496 + (1 << 2) >> 2] = (HEAP32[dsp + 350496 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350504 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350504 + (0 << 2) >> 2]);HEAPF32[dsp + 350512 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350512 + (0 << 2) >> 2]);for (j15 = 3; (((j15 | 0) > 0) | 0); j15 = (((j15 | 0) - 1) | 0)) {HEAPF32[dsp + 350000 + ((j15 | 0) << 2) >> 2] = +(HEAPF32[dsp + 350000 + ((((j15 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350520 + (1 << 2) >> 2] = (HEAP32[dsp + 350520 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350528 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350528 + (0 << 2) >> 2]);HEAPF32[dsp + 350536 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350536 + (0 << 2) >> 2]);for (j16 = 3; (((j16 | 0) > 0) | 0); j16 = (((j16 | 0) - 1) | 0)) {HEAPF32[dsp + 350016 + ((j16 | 0) << 2) >> 2] = +(HEAPF32[dsp + 350016 + ((((j16 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350544 + (1 << 2) >> 2] = (HEAP32[dsp + 350544 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350552 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350552 + (0 << 2) >> 2]);HEAPF32[dsp + 350560 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350560 + (0 << 2) >> 2]);for (j17 = 3; (((j17 | 0) > 0) | 0); j17 = (((j17 | 0) - 1) | 0)) {HEAPF32[dsp + 350032 + ((j17 | 0) << 2) >> 2] = +(HEAPF32[dsp + 350032 + ((((j17 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350568 + (1 << 2) >> 2] = (HEAP32[dsp + 350568 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350576 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350576 + (0 << 2) >> 2]);HEAPF32[dsp + 350584 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350584 + (0 << 2) >> 2]);for (j18 = 3; (((j18 | 0) > 0) | 0); j18 = (((j18 | 0) - 1) | 0)) {HEAPF32[dsp + 350048 + ((j18 | 0) << 2) >> 2] = +(HEAPF32[dsp + 350048 + ((((j18 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 350592 + (1 << 2) >> 2] = (HEAP32[dsp + 350592 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 350600 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350600 + (0 << 2) >> 2]);HEAPF32[dsp + 350608 + (1 << 2) >> 2] = +(HEAPF32[dsp + 350608 + (0 << 2) >> 2]);for (j19 = 3; (((j19 | 0) > 0) | 0); j19 = (((j19 | 0) - 1) | 0)) {HEAPF32[dsp + 350064 + ((j19 | 0) << 2) >> 2] = +(HEAPF32[dsp + 350064 + ((((j19 | 0) - 1) | 0) << 2) >> 2]);}}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp2() {return 352484;}function getPathTablemydsp2() {var pathTable = [];pathTable[\"/SAtonalSoftHarp/0x00/Speed\"] = 350656;pathTable[\"/SAtonalSoftHarp/0x00/Instrument_Hand\"] = 350660;pathTable[\"/SAtonalSoftHarp/Reverberation/Resonance\"] = 350680;return pathTable;}function getJSONmydsp2() {return \"{ \\\"name\\\": \\\"Atonal Soft Harp\\\", \\\"inputs\\\": \\\"0\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"author\\\": \\\"ER\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_author\\\": \\\"Priyanka Shekar (pshekar@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\\\": \\\"Copyright (c) 2013 Priyanka Shekar\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_license\\\": \\\"MIT License (MIT)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_name\\\": \\\"Harmonic Exciter\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/name\\\": \\\"Faust Audio Effect Library\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/version\\\": \\\"1.33\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/author\\\": \\\"Romain Michon (rmichon@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/copyright\\\": \\\"Romain Michon\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/licence\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/name\\\": \\\"Faust-STK Tools Library\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"name\\\": \\\"Atonal Soft Harp\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"SAtonalSoftHarp\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hgroup\\\", \\\"label\\\": \\\"0x00\\\", \\\"meta\\\": [ { \\\"1\\\": \\\"\\\" } ], \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Instrument Hand\\\", \\\"address\\\": \\\"/SAtonalSoftHarp/0x00/Instrument_Hand\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"0 0 -10 0 10\\\" } ], \\\"init\\\": \\\"10\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"20\\\", \\\"step\\\": \\\"1\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Speed\\\", \\\"address\\\": \\\"/SAtonalSoftHarp/0x00/Speed\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"0 0 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" } ], \\\"init\\\": \\\"480\\\", \\\"min\\\": \\\"180\\\", \\\"max\\\": \\\"720\\\", \\\"step\\\": \\\"1\\\" } ] }, { \\\"type\\\": \\\"hgroup\\\", \\\"label\\\": \\\"Reverberation\\\", \\\"meta\\\": [ { \\\"2\\\": \\\"\\\" } ], \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Resonance\\\", \\\"address\\\": \\\"/SAtonalSoftHarp/Reverberation/Resonance\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"2 0 -10 0 10\\\" }, { \\\"unit\\\": \\\"s\\\" } ], \\\"init\\\": \\\"5\\\", \\\"min\\\": \\\"0.5\\\", \\\"max\\\": \\\"10\\\", \\\"step\\\": \\\"0.01\\\" } ] } ] } ] } \";}function metadatamydsp2(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"author\", \"ER\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_author\", \"Priyanka Shekar (pshekar@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\", \"Copyright (c) 2013 Priyanka Shekar\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_license\", \"MIT License (MIT)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_name\", \"Harmonic Exciter\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/name\", \"Faust Audio Effect Library\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/version\", \"1.33\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/author\", \"Romain Michon (rmichon@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/copyright\", \"Romain Michon\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/licence\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/name\", \"Faust-STK Tools Library\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"name\", \"Atonal Soft Harp\");}"}},"3":{"patchId":"3","code":"process = vgroup(\"SBird\",environment{declare name \"bird\";\r\ndeclare author \"Pierre Cochard\";\r\n\r\n//Modifications by Grame July 2014, June 2015;\r\n\r\n/* =============== DESCRIPTION ================= :\r\n\r\n- Bird singing generator.\r\n- Right = maximum speed of whistles.\r\n- Left = minimum speed/Rare birds, nearly silence.\r\n\r\n*/\r\n\r\nimport(\"music.lib\");\r\nimport(\"oscillator.lib\");\r\nimport(\"effect.lib\");\r\n\r\n// PROCESS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\nprocess = hgroup(\"Bird\", mainOsc(noteTrig : rdm(72,94) : mtof , noteTrig) * envWrapper(noteTrig, ampEnv, amp_xp(2510)) : lowpass(1, 2500) *(0.8) <: _,_);\r\n\r\n// AUTO TRIGGER\r\n\r\nautoTrig = beat(t) * (abs(noise) <= p) : trigger(48) \r\n\twith {\r\n\t\tt = hslider(\"[1]Speed (Granulator)[style:knob][acc:0 0 -10 0 10]\", 240, 120, 480, 0.1) : smooth(0.999);\r\n\t\tp = hslider(\"[2]Probability (Granulator)[unit:%][style:knob][acc:0 0 -10 0 10]\", 50, 25, 100, 1)*(0.01) : smooth(0.999);\r\n\t\ttrigger(n) \t= upfront : release(n) : >(0.0) \r\n\t\twith {\r\n\t\t\tupfront(x) \t= (x-x') > 0.0;\r\n\t\t\tdecay(n,x)\t= x - (x>0.0)/n;\r\n\t\t\trelease(n)\t= + ~ decay(n);\r\n\t\t\t};\r\n\t\t};\r\n\r\n\r\n// BIRD TRIGGER\r\n\r\nnoteTrig = autoTrig;\r\n\r\n// OSCILLATORS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\n/* base */\r\ncarrierOsc(freq) = osci(freq);\r\nmodOsc(freq) = triangleN(3,freq);\r\n\r\n/* fm oscillator */\r\nmainOsc(freq,trig) = freq <: +(*(harmRatio <: +(*(envWrapper(trig,harmEnv,harm_xp(1700))))) : modOsc : *(modIndex <: +(*(envWrapper(trig,modIndexEnv,modIndex_xp(550)))))) <: +(*(envWrapper(trig,freqEnv,freq_xp(943)))) : carrierOsc;\r\n\r\nenvWrapper(trig,env,sus) = trig : mstosamps(rdm(100,3000)), sus : hitLength : env;\r\n\r\n\r\n// FIXED PARAMETERS - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\n/* fm */\r\nharmRatio = 0.063;\r\nmodIndex = 3.24;\r\n\r\n// TIME FUNCTIONS - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\nmetro(ms) = (%(+(1),mstosamps(ms))) ~_ : ==(1);\r\nmstosamps(ms) = ms : /(1000) * SR : int;\r\nrdmInc = _ <: @(1), @(2) : + : *(2994.2313) : int : +(38125); \r\nrdm(rdmin,rdmax) = _,(fmod(_,rdmax - rdmin : int) ~ rdmInc : +(rdmin)) : gater : -(1) : abs;\r\ngater = (_,_,_ <: !,_,!,_,!,!,!,!,_ : select2) ~_;\r\n\r\n// MIDI RELATED - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\n/* midi pitch */ \r\nmtof(midinote) = pow(2,(midinote - 69) / 12) * 440;\r\n\r\n// ENVELOPPES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\n/* envelope \"reader\" (phaser) */\r\n\r\nhitLength(length,sustain) = *((==(length,@(length,1))), +(1))~_ <: gater(<(sustain));\r\n\r\n/* amplitude envelope */\r\n\r\nampEnvbpf = bpf.start(0, 0) : \r\n\tbpf.point(amp_xp(60.241), 1.) : \r\n\tbpf.point(amp_xp(461.847), 0.) :\r\n\tbpf.point(amp_xp(582.329), 0.928) : \r\n\tbpf.point(amp_xp(682.731), 0.5) : \r\n\tbpf.point(amp_xp(983.936), 0.) : \r\n\tbpf.point(amp_xp(1064.257), 0.) : \r\n\tbpf.point(amp_xp(1345.382), 0.) : \r\n\tbpf.point(amp_xp(1526.105), 0.) : \r\n\tbpf.point(amp_xp(1746.988), 0.) : \r\n\tbpf.point(amp_xp(1827.309), 0.) : \r\n\tbpf.point(amp_xp(2088.353), 0.) : \r\n\tbpf.point(amp_xp(2188.755), 0.) : /* sustain point */\r\n\tbpf.end(amp_xp(2510.040), 0.);\r\n\r\nampEnv = ampEnvbpf : smooth(0.999) : lowpass(1, 3000);\r\namp_xp(x) = x * SR / 1000. * ampEnv_speed;\r\nampEnv_speed = noteTrig : rdm(0,2000) : /(1000);\r\n\r\n/* freq envelope */\r\n\r\nfreqEnvbpf = bpf.start(0, 0) : \r\n\tbpf.point(freq_xp(147.751), 1.) : \r\n\tbpf.point(freq_xp(193.213), 0.) : \r\n\tbpf.point(freq_xp(318.233), yp) : \r\n\tbpf.point(freq_xp(431.888), 0.) : \r\n\tbpf.point(freq_xp(488.715), 0.434) : \r\n\tbpf.point(freq_xp(613.735), yp) : \r\n\tbpf.point(freq_xp(659.197), 1.) : \r\n\tbpf.point(freq_xp(716.024), yp) : \r\n\tbpf.point(freq_xp(806.948), 1.) : \r\n\tbpf.point(freq_xp(829.679), yp) : /* sustain point */\r\n\tbpf.end(freq_xp(943.333), 0.);\r\n\r\nfreqEnv = freqEnvbpf : smooth(0.999) : lowpass(1, 3000);\r\nfreq_xp(x) = x * SR / 1000. * freqEnv_speed;\r\nfreqEnv_speed = noteTrig : rdm(0,2000) : /(1000);\r\nyp = noteTrig : rdm(0,1000) : /(1000);\r\n\r\n/* harmRatio envelope */\r\n\r\nharmEnvbpf = bpf.start(0, 0.) : \r\n\tbpf.point(harm_xp(863.454), 0.490) : \r\n\tbpf.point(harm_xp(865), 0.) : \r\n\tbpf.point (harm_xp(1305.221), 1.) : \r\n\tbpf.point(harm_xp(1646.586), 0.) : /* sustain point */\r\n\tbpf.end(harm_xp(1700), 0.);\r\n\r\nharmEnv = harmEnvbpf : smooth(0.999) : lowpass(1, 3000);\r\nharm_xp(x) = x * SR / 1000. * harmEnv_speed;\r\nharmEnv_speed = noteTrig : rdm(0,2000) : /(1000);\r\n\r\n/* modIndex envelope */\r\n\r\nmodIndexEnvbpf = bpf.start(0, 0.) : \r\n\tbpf.point(modIndex_xp(240.964), 0.554) : \r\n\tbpf.point(modIndex_xp(502.068), 0.) : /* sustain point */\r\n\tbpf.end(modIndex_xp(550), 0.);\r\n\r\nmodIndexEnv = modIndexEnvbpf : smooth(0.999) : lowpass(1, 3000);\r\nmodIndex_xp(x) = x * SR / 1000. * modIndexEnv_speed;\r\nmodIndexEnv_speed = noteTrig : rdm(0,2000) : /(1000);\r\n\r\n\r\n}.process);","name":"SBird","x":"171","y":"319","inputs":{"source":[]},"outputs":{"destination":["10"]},"params":{"sliders":[{"path":"/SBird/Bird/Speed_(Granulator)","value":240},{"path":"/SBird/Bird/Probability_(Granulator)","value":50}]},"factory":{"name":"mydsp3","code":"/* ------------------------------------------------------------author: \"Pierre Cochard\"name: \"bird\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp3Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var fabsf = global.Math.abs;var floorf = global.Math.floor;var max = global.Math.max;var min = global.Math.min;var powf = global.Math.pow;var sinf = global.Math.sin;var tanf = global.Math.tan;function faustpower2_f(value) {value = +(value);return +((value * value));}function faustpower3_f(value) {value = +(value);return +(((value * value) * value));}function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputsmydsp3SIG0(dsp) {dsp = dsp | 0;return 0;}function getNumOutputsmydsp3SIG0(dsp) {dsp = dsp | 0;return 1;}function instanceInitmydsp3SIG0(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i16 = 0;for (i16 = 0; (((i16 | 0) < 2) | 0); i16 = (((i16 | 0) + 1) | 0)) {HEAP32[dsp + 278856 + ((i16 | 0) << 2) >> 2] = 0;}}function fillmydsp3SIG0(dsp, count, output) {dsp = dsp | 0;count = count | 0;output = output | 0;var i = 0;for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAP32[dsp + 278856 + (0 << 2) >> 2] = ((1 + (HEAP32[dsp + 278856 + (1 << 2) >> 2] | 0)) | 0);HEAPF32[output + ((i | 0) << 2) >> 2] = +(sinf(+(9.58738e-05 * +((((HEAP32[dsp + 278856 + (0 << 2) >> 2] | 0) - 1) | 0)))));HEAP32[dsp + 278856 + (1 << 2) >> 2] = (HEAP32[dsp + 278856 + (0 << 2) >> 2] | 0);}}function getNumInputs(dsp) {dsp = dsp | 0;return 0;}function getNumOutputs(dsp) {dsp = dsp | 0;return 2;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;instanceInitmydsp3SIG0(dsp, (samplingFreq | 0));fillmydsp3SIG0(dsp, 65537, (dsp + 0 | 0));}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;var i6 = 0;var i7 = 0;var i8 = 0;var i9 = 0;var i10 = 0;var i11 = 0;var i12 = 0;var i13 = 0;var i14 = 0;var i15 = 0;var i17 = 0;var i18 = 0;var i19 = 0;var i20 = 0;var i21 = 0;var i22 = 0;var i23 = 0;var i24 = 0;var i25 = 0;var i26 = 0;var i27 = 0;var i28 = 0;var i29 = 0;var i30 = 0;var i31 = 0;var i32 = 0;var i33 = 0;var i34 = 0;var i35 = 0;var i36 = 0;var i37 = 0;HEAP32[dsp + 278864 >> 2] = (samplingFreq | 0);for (i0 = 0; (((i0 | 0) < 3) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAP32[dsp + 278596 + ((i0 | 0) << 2) >> 2] = 0;}HEAP32[dsp + 278868 >> 2] = ((min(192000, ((max(1, (HEAP32[dsp + 278864 >> 2] | 0))) | 0))) | 0);HEAPF32[dsp + 278872 >> 2] = +(1. / +(tanf(+(7853.98 / +((HEAP32[dsp + 278868 >> 2] | 0))))));HEAPF32[dsp + 278876 >> 2] = +(1. + +(HEAPF32[dsp + 278872 >> 2]));HEAPF32[dsp + 278880 >> 2] = +(0. - +(+(1. - +(HEAPF32[dsp + 278872 >> 2])) / +(HEAPF32[dsp + 278876 >> 2])));HEAPF32[dsp + 278884 >> 2] = +(1. / +(HEAPF32[dsp + 278876 >> 2]));HEAPF32[dsp + 278888 >> 2] = +(1. / +(tanf(+(9424.78 / +((HEAP32[dsp + 278868 >> 2] | 0))))));HEAPF32[dsp + 278892 >> 2] = +(1. + +(HEAPF32[dsp + 278888 >> 2]));HEAPF32[dsp + 278896 >> 2] = +(0. - +(+(1. - +(HEAPF32[dsp + 278888 >> 2])) / +(HEAPF32[dsp + 278892 >> 2])));HEAPF32[dsp + 278900 >> 2] = +(1. / +(HEAPF32[dsp + 278892 >> 2]));HEAPF32[dsp + 278904 >> 2] = +(0.001 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAP32[dsp + 278908 >> 2] = (imul(60, (HEAP32[dsp + 278868 >> 2] | 0)) | 0);HEAPF32[dsp + 278912 >> 2] = +(240.);for (i1 = 0; (((i1 | 0) < 2) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAPF32[dsp + 278608 + ((i1 | 0) << 2) >> 2] = 0.;}for (i2 = 0; (((i2 | 0) < 2) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAP32[dsp + 278616 + ((i2 | 0) << 2) >> 2] = 0;}for (i3 = 0; (((i3 | 0) < 2) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAP32[dsp + 278624 + ((i3 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 278916 >> 2] = +(50.);for (i4 = 0; (((i4 | 0) < 2) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAPF32[dsp + 278632 + ((i4 | 0) << 2) >> 2] = 0.;}for (i5 = 0; (((i5 | 0) < 2) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAP32[dsp + 278640 + ((i5 | 0) << 2) >> 2] = 0;}for (i6 = 0; (((i6 | 0) < 2) | 0); i6 = (((i6 | 0) + 1) | 0)) {HEAPF32[dsp + 278648 + ((i6 | 0) << 2) >> 2] = 0.;}for (i7 = 0; (((i7 | 0) < 4) | 0); i7 = (((i7 | 0) + 1) | 0)) {HEAPF32[dsp + 278532 + ((i7 | 0) << 2) >> 2] = 0.;}for (i8 = 0; (((i8 | 0) < 2) | 0); i8 = (((i8 | 0) + 1) | 0)) {HEAPF32[dsp + 278656 + ((i8 | 0) << 2) >> 2] = 0.;}for (i9 = 0; (((i9 | 0) < 2) | 0); i9 = (((i9 | 0) + 1) | 0)) {HEAP32[dsp + 278664 + ((i9 | 0) << 2) >> 2] = 0;}for (i10 = 0; (((i10 | 0) < 2) | 0); i10 = (((i10 | 0) + 1) | 0)) {HEAP32[dsp + 278672 + ((i10 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 278920 >> 2] = +(0.00251 * +((HEAP32[dsp + 278868 >> 2] | 0)));for (i11 = 0; (((i11 | 0) < 4) | 0); i11 = (((i11 | 0) + 1) | 0)) {HEAPF32[dsp + 278548 + ((i11 | 0) << 2) >> 2] = 0.;}for (i12 = 0; (((i12 | 0) < 2) | 0); i12 = (((i12 | 0) + 1) | 0)) {HEAPF32[dsp + 278680 + ((i12 | 0) << 2) >> 2] = 0.;}for (i13 = 0; (((i13 | 0) < 2) | 0); i13 = (((i13 | 0) + 1) | 0)) {HEAP32[dsp + 278688 + ((i13 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 278924 >> 2] = +(0.00218875 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278928 >> 2] = +(0.00208835 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278932 >> 2] = +(0.00182731 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278936 >> 2] = +(0.00174699 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278940 >> 2] = +(0.0015261 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278944 >> 2] = +(0.00134538 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278948 >> 2] = +(0.00106426 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278952 >> 2] = +(0.000983936 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278956 >> 2] = +(0.000682731 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278960 >> 2] = +(3320. / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278964 >> 2] = +(0.000582329 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278968 >> 2] = +(9959.96 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278972 >> 2] = +(0.000461847 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278976 >> 2] = +(7702.4 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278980 >> 2] = +(6.0241e-05 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278984 >> 2] = +(2490. / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 278988 >> 2] = +(16600. / +((HEAP32[dsp + 278868 >> 2] | 0)));for (i14 = 0; (((i14 | 0) < 2) | 0); i14 = (((i14 | 0) + 1) | 0)) {HEAPF32[dsp + 278696 + ((i14 | 0) << 2) >> 2] = 0.;}for (i15 = 0; (((i15 | 0) < 2) | 0); i15 = (((i15 | 0) + 1) | 0)) {HEAPF32[dsp + 278704 + ((i15 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 278992 >> 2] = +((HEAP32[dsp + 278868 >> 2] | 0));HEAPF32[dsp + 278996 >> 2] = +(1. / +(HEAPF32[dsp + 278992 >> 2]));for (i17 = 0; (((i17 | 0) < 4) | 0); i17 = (((i17 | 0) + 1) | 0)) {HEAPF32[dsp + 278564 + ((i17 | 0) << 2) >> 2] = 0.;}for (i18 = 0; (((i18 | 0) < 2) | 0); i18 = (((i18 | 0) + 1) | 0)) {HEAPF32[dsp + 278712 + ((i18 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 279000 >> 2] = +(359.251 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279004 >> 2] = +(faustpower2_f(+(HEAPF32[dsp + 278992 >> 2])));HEAPF32[dsp + 279008 >> 2] = +(0.0017 * +((HEAP32[dsp + 278868 >> 2] | 0)));for (i19 = 0; (((i19 | 0) < 2) | 0); i19 = (((i19 | 0) + 1) | 0)) {HEAP32[dsp + 278720 + ((i19 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 279012 >> 2] = +(0.00164659 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279016 >> 2] = +(0.00130522 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279020 >> 2] = +(2929.42 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279024 >> 2] = +(0.000865 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279028 >> 2] = +(2271.59 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279032 >> 2] = +(0.000863454 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279036 >> 2] = +(646830. / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279040 >> 2] = +(567.488 / +((HEAP32[dsp + 278868 >> 2] | 0)));for (i20 = 0; (((i20 | 0) < 2) | 0); i20 = (((i20 | 0) + 1) | 0)) {HEAPF32[dsp + 278728 + ((i20 | 0) << 2) >> 2] = 0.;}for (i21 = 0; (((i21 | 0) < 2) | 0); i21 = (((i21 | 0) + 1) | 0)) {HEAPF32[dsp + 278736 + ((i21 | 0) << 2) >> 2] = 0.;}for (i22 = 0; (((i22 | 0) < 2) | 0); i22 = (((i22 | 0) + 1) | 0)) {HEAPF32[dsp + 278744 + ((i22 | 0) << 2) >> 2] = 0.;}for (i23 = 0; (((i23 | 0) < 2) | 0); i23 = (((i23 | 0) + 1) | 0)) {HEAPF32[dsp + 278752 + ((i23 | 0) << 2) >> 2] = 0.;}for (i24 = 0; (((i24 | 0) < 2) | 0); i24 = (((i24 | 0) + 1) | 0)) {HEAPF32[dsp + 278760 + ((i24 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 279044 >> 2] = 0;for (i25 = 0; (((i25 | 0) < 4096) | 0); i25 = (((i25 | 0) + 1) | 0)) {HEAPF32[dsp + 262148 + ((i25 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 279048 >> 2] = +(0.5 * +(HEAPF32[dsp + 278992 >> 2]));for (i26 = 0; (((i26 | 0) < 2) | 0); i26 = (((i26 | 0) + 1) | 0)) {HEAPF32[dsp + 278768 + ((i26 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 279052 >> 2] = +(0.00055 * +((HEAP32[dsp + 278868 >> 2] | 0)));for (i27 = 0; (((i27 | 0) < 2) | 0); i27 = (((i27 | 0) + 1) | 0)) {HEAP32[dsp + 278776 + ((i27 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 279056 >> 2] = +(0.000502068 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279060 >> 2] = +(0.000240964 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279064 >> 2] = +(3829.89 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279068 >> 2] = +(2299.1 / +((HEAP32[dsp + 278868 >> 2] | 0)));for (i28 = 0; (((i28 | 0) < 2) | 0); i28 = (((i28 | 0) + 1) | 0)) {HEAPF32[dsp + 278784 + ((i28 | 0) << 2) >> 2] = 0.;}for (i29 = 0; (((i29 | 0) < 2) | 0); i29 = (((i29 | 0) + 1) | 0)) {HEAPF32[dsp + 278792 + ((i29 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 279072 >> 2] = +(0.000943 * +((HEAP32[dsp + 278868 >> 2] | 0)));for (i30 = 0; (((i30 | 0) < 2) | 0); i30 = (((i30 | 0) + 1) | 0)) {HEAP32[dsp + 278800 + ((i30 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 279076 >> 2] = +(0.000829679 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279080 >> 2] = +(0.000943333 * +((HEAP32[dsp + 278868 >> 2] | 0)));for (i31 = 0; (((i31 | 0) < 4) | 0); i31 = (((i31 | 0) + 1) | 0)) {HEAPF32[dsp + 278580 + ((i31 | 0) << 2) >> 2] = 0.;}for (i32 = 0; (((i32 | 0) < 2) | 0); i32 = (((i32 | 0) + 1) | 0)) {HEAPF32[dsp + 278808 + ((i32 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 279084 >> 2] = +(8798.63 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279088 >> 2] = +(0.000806948 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279092 >> 2] = +(43992.8 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279096 >> 2] = +(0.000716024 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279100 >> 2] = +(10998.2 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279104 >> 2] = +(0.000659197 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279108 >> 2] = +(17597.3 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279112 >> 2] = +(0.000613735 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279116 >> 2] = +(21996.4 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279120 >> 2] = +(0.000488715 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279124 >> 2] = +(7998.72 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279128 >> 2] = +(0.000431888 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279132 >> 2] = +(7637.21 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279136 >> 2] = +(0.000318233 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279140 >> 2] = +(8798.56 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279144 >> 2] = +(0.000193213 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279148 >> 2] = +(7.99872 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279152 >> 2] = +(0.000147751 * +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279156 >> 2] = +(21996.4 / +((HEAP32[dsp + 278868 >> 2] | 0)));HEAPF32[dsp + 279160 >> 2] = +(6768.14 / +((HEAP32[dsp + 278868 >> 2] | 0)));for (i33 = 0; (((i33 | 0) < 2) | 0); i33 = (((i33 | 0) + 1) | 0)) {HEAPF32[dsp + 278816 + ((i33 | 0) << 2) >> 2] = 0.;}for (i34 = 0; (((i34 | 0) < 2) | 0); i34 = (((i34 | 0) + 1) | 0)) {HEAPF32[dsp + 278824 + ((i34 | 0) << 2) >> 2] = 0.;}for (i35 = 0; (((i35 | 0) < 2) | 0); i35 = (((i35 | 0) + 1) | 0)) {HEAPF32[dsp + 278832 + ((i35 | 0) << 2) >> 2] = 0.;}for (i36 = 0; (((i36 | 0) < 2) | 0); i36 = (((i36 | 0) + 1) | 0)) {HEAPF32[dsp + 278840 + ((i36 | 0) << 2) >> 2] = 0.;}for (i37 = 0; (((i37 | 0) < 2) | 0); i37 = (((i37 | 0) + 1) | 0)) {HEAPF32[dsp + 278848 + ((i37 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var output0 = 0;var output1 = 0;var fSlow0 = 0.;var fSlow1 = 0.;var i = 0;var iTemp0 = 0;var iTemp1 = 0;var fSel0 = 0.;var iTemp2 = 0;var fTemp3 = 0.;var iTemp4 = 0;var fTemp5 = 0.;var iTemp6 = 0;var fTemp7 = 0.;var iTemp8 = 0;var fTemp9 = 0.;var iTemp10 = 0;var fTemp11 = 0.;var iTemp12 = 0;var fSel1 = 0.;var fSel2 = 0.;var fSel3 = 0.;var fSel4 = 0.;var fSel5 = 0.;var fSel6 = 0.;var fTemp13 = 0.;var iTemp14 = 0;var fTemp15 = 0.;var iTemp16 = 0;var fTemp17 = 0.;var iTemp18 = 0;var fTemp19 = 0.;var iTemp20 = 0;var fSel7 = 0.;var fSel8 = 0.;var fSel9 = 0.;var fSel10 = 0.;var fTemp21 = 0.;var fTemp22 = 0.;var fTemp23 = 0.;var fTemp24 = 0.;var fTemp25 = 0.;var fTemp26 = 0.;var fTemp27 = 0.;var iTemp28 = 0;var iTemp29 = 0;var iTemp30 = 0;var fTemp31 = 0.;var iTemp32 = 0;var fSel11 = 0.;var fSel12 = 0.;var fTemp33 = 0.;var iTemp34 = 0;var fTemp35 = 0.;var fTemp36 = 0.;var fTemp37 = 0.;var fTemp38 = 0.;var iTemp39 = 0;var fTemp40 = 0.;var fSel13 = 0.;var fTemp41 = 0.;var iTemp42 = 0;var fTemp43 = 0.;var fTemp44 = 0.;var iTemp45 = 0;var fSel14 = 0.;var fTemp46 = 0.;var iTemp47 = 0;var fTemp48 = 0.;var iTemp49 = 0;var fSel15 = 0.;var fTemp50 = 0.;var iTemp51 = 0;var fTemp52 = 0.;var iTemp53 = 0;var fTemp54 = 0.;var iTemp55 = 0;var fSel16 = 0.;var fTemp56 = 0.;var iTemp57 = 0;var fSel17 = 0.;var fSel18 = 0.;var fSel19 = 0.;var fSel20 = 0.;var fSel21 = 0.;var fSel22 = 0.;var fSel23 = 0.;var fTemp58 = 0.;var fTemp59 = 0.;var iTemp60 = 0;var fTemp61 = 0.;var fTemp62 = 0.;var j0 = 3;var j1 = 3;var j2 = 3;var j3 = 3;output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);output1 = (HEAP32[outputs + (1 << 2) >> 2] | 0);fSlow0 = +(0.001 * +(+(HEAPF32[dsp + 278912 >> 2])));fSlow1 = +(1.e-05 * +(+(HEAPF32[dsp + 278916 >> 2])));for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAP32[dsp + 278596 + (0 << 2) >> 2] = 1;HEAPF32[dsp + 278608 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 278608 + (1 << 2) >> 2])) + +(fSlow0));HEAP32[dsp + 278616 + (0 << 2) >> 2] = ((((1 + (HEAP32[dsp + 278616 + (1 << 2) >> 2] | 0)) | 0) % ~~(+(+((HEAP32[dsp + 278908 >> 2] | 0)) / +(HEAPF32[dsp + 278608 + (0 << 2) >> 2])))) | 0);HEAP32[dsp + 278624 + (0 << 2) >> 2] = ((12345 + (imul(1103515245, (HEAP32[dsp + 278624 + (1 << 2) >> 2] | 0)) | 0)) | 0);HEAPF32[dsp + 278632 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 278632 + (1 << 2) >> 2])) + +(fSlow1));iTemp0 = (imul((((HEAP32[dsp + 278616 + (0 << 2) >> 2] | 0) == 0) | 0), ((+(fabsf(+(4.65661e-10 * +((HEAP32[dsp + 278624 + (0 << 2) >> 2] | 0))))) <= +(HEAPF32[dsp + 278632 + (0 << 2) >> 2])) | 0)) | 0);HEAP32[dsp + 278640 + (0 << 2) >> 2] = (iTemp0 | 0);HEAPF32[dsp + 278648 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 278648 + (1 << 2) >> 2]) + +(((+((((iTemp0 | 0) - (HEAP32[dsp + 278640 + (1 << 2) >> 2] | 0)) | 0)) > 0.) | 0))) - +(0.0208333 * +(((+(HEAPF32[dsp + 278648 + (1 << 2) >> 2]) > 0.) | 0))));iTemp1 = ((+(HEAPF32[dsp + 278648 + (0 << 2) >> 2]) > 0.) | 0);HEAPF32[dsp + 278532 + (0 << 2) >> 2] = +(fmodf(+(((38125 + ~~(+(2994.23 * +(+(HEAPF32[dsp + 278532 + (2 << 2) >> 2]) + +(HEAPF32[dsp + 278532 + (3 << 2) >> 2]))))) | 0)), 2900.));fSel0 = 0.;if (((iTemp1 | 0) != 0) | 0) {fSel0 = +(100. + +(HEAPF32[dsp + 278532 + (0 << 2) >> 2]));} else {fSel0 = +(HEAPF32[dsp + 278656 + (1 << 2) >> 2]);}HEAPF32[dsp + 278656 + (0 << 2) >> 2] = +(fSel0);iTemp2 = ~~(+(+(HEAPF32[dsp + 278904 >> 2]) * +(fabsf(+(+(HEAPF32[dsp + 278656 + (0 << 2) >> 2]) - 1.)))));HEAP32[dsp + 278664 + (0 << 2) >> 2] = (iTemp2 | 0);HEAP32[dsp + 278672 + (0 << 2) >> 2] = (imul((((iTemp2 | 0) == (HEAP32[dsp + 278664 + (1 << 2) >> 2] | 0)) | 0), ((1 + (HEAP32[dsp + 278672 + (1 << 2) >> 2] | 0)) | 0)) | 0);HEAPF32[dsp + 278548 + (0 << 2) >> 2] = +(fmodf(+(((38125 + ~~(+(2994.23 * +(+(HEAPF32[dsp + 278548 + (2 << 2) >> 2]) + +(HEAPF32[dsp + 278548 + (3 << 2) >> 2]))))) | 0)), 2000.));HEAPF32[dsp + 278680 + (0 << 2) >> 2] = +((iTemp1 | 0)?+(HEAPF32[dsp + 278548 + (0 << 2) >> 2]):+(HEAPF32[dsp + 278680 + (1 << 2) >> 2]));fTemp3 = +(fabsf(+(+(HEAPF32[dsp + 278680 + (0 << 2) >> 2]) - 1.)));HEAP32[dsp + 278688 + (0 << 2) >> 2] = ((((+((HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278920 >> 2]) * +(fTemp3))) | 0)?(HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0):(HEAP32[dsp + 278688 + (1 << 2) >> 2] | 0)) | 0);iTemp4 = ((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278952 >> 2]) * +(fTemp3))) | 0);fTemp5 = +(+(HEAPF32[dsp + 278956 >> 2]) * +(fTemp3));iTemp6 = ((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(fTemp5)) | 0);fTemp7 = +(+(HEAPF32[dsp + 278964 >> 2]) * +(fTemp3));iTemp8 = ((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(fTemp7)) | 0);fTemp9 = +(+(HEAPF32[dsp + 278972 >> 2]) * +(fTemp3));iTemp10 = ((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(fTemp9)) | 0);fTemp11 = +(+(HEAPF32[dsp + 278980 >> 2]) * +(fTemp3));iTemp12 = ((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(fTemp11)) | 0);fSel1 = 0.;if (((((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0) < 0) | 0) != 0) | 0) {fSel1 = 0.;} else {fSel1 = +((iTemp12 | 0)?+(+(HEAPF32[dsp + 278988 >> 2]) * +(+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) / +(fTemp3))):1.);}fSel2 = 0.;if (((iTemp12 | 0) != 0) | 0) {fSel2 = +(fSel1);} else {fSel2 = +((iTemp10 | 0)?+(1. + +(+(HEAPF32[dsp + 278984 >> 2]) * +(+(0. - +(+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) - +(fTemp11))) / +(fTemp3)))):0.);}fSel3 = 0.;if (((iTemp10 | 0) != 0) | 0) {fSel3 = +(fSel2);} else {fSel3 = +((iTemp8 | 0)?+(+(HEAPF32[dsp + 278976 >> 2]) * +(+(+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) - +(fTemp9)) / +(fTemp3))):0.928);}fSel4 = 0.;if (((iTemp8 | 0) != 0) | 0) {fSel4 = +(fSel3);} else {fSel4 = +((iTemp6 | 0)?+(0.928 + +(+(HEAPF32[dsp + 278968 >> 2]) * +(+(0. - +(0.428 * +(+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) - +(fTemp7)))) / +(fTemp3)))):0.5);}fSel5 = 0.;if (((iTemp6 | 0) != 0) | 0) {fSel5 = +(fSel4);} else {fSel5 = +((iTemp4 | 0)?+(0.5 + +(+(HEAPF32[dsp + 278960 >> 2]) * +(+(0. - +(0.5 * +(+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) - +(fTemp5)))) / +(fTemp3)))):0.);}HEAPF32[dsp + 278696 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 278696 + (1 << 2) >> 2])) + +(0.001 * +(((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278924 >> 2]) * +(fTemp3))) | 0)?+(((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278928 >> 2]) * +(fTemp3))) | 0)?+(((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278932 >> 2]) * +(fTemp3))) | 0)?+(((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278936 >> 2]) * +(fTemp3))) | 0)?+(((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278940 >> 2]) * +(fTemp3))) | 0)?+(((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278944 >> 2]) * +(fTemp3))) | 0)?+(((+((HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 278948 >> 2]) * +(fTemp3))) | 0)?+((iTemp4 | 0)?+(fSel5):0.):0.):0.):0.):0.):0.):0.):0.)));HEAPF32[dsp + 278704 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 278896 >> 2]) * +(HEAPF32[dsp + 278704 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 278900 >> 2]) * +(+(HEAPF32[dsp + 278696 + (0 << 2) >> 2]) + +(HEAPF32[dsp + 278696 + (1 << 2) >> 2]))));HEAPF32[dsp + 278564 + (0 << 2) >> 2] = +(fmodf(+(((38125 + ~~(+(2994.23 * +(+(HEAPF32[dsp + 278564 + (2 << 2) >> 2]) + +(HEAPF32[dsp + 278564 + (3 << 2) >> 2]))))) | 0)), 22.));fSel6 = 0.;if (((iTemp1 | 0) != 0) | 0) {fSel6 = +(72. + +(HEAPF32[dsp + 278564 + (0 << 2) >> 2]));} else {fSel6 = +(HEAPF32[dsp + 278712 + (1 << 2) >> 2]);}HEAPF32[dsp + 278712 + (0 << 2) >> 2] = +(fSel6);fTemp13 = +(powf(2., +(0.0833333 * +(+(fabsf(+(+(HEAPF32[dsp + 278712 + (0 << 2) >> 2]) - 1.))) - 69.))));HEAP32[dsp + 278720 + (0 << 2) >> 2] = ((((+((HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 279008 >> 2]) * +(fTemp3))) | 0)?(HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0):(HEAP32[dsp + 278720 + (1 << 2) >> 2] | 0)) | 0);iTemp14 = ((+((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 279012 >> 2]) * +(fTemp3))) | 0);fTemp15 = +(+(HEAPF32[dsp + 279016 >> 2]) * +(fTemp3));iTemp16 = ((+((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0)) < +(fTemp15)) | 0);fTemp17 = +(+(HEAPF32[dsp + 279024 >> 2]) * +(fTemp3));iTemp18 = ((+((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0)) < +(fTemp17)) | 0);fTemp19 = +(+(HEAPF32[dsp + 279032 >> 2]) * +(fTemp3));iTemp20 = ((+((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0)) < +(fTemp19)) | 0);fSel7 = 0.;if (((((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0) < 0) | 0) != 0) | 0) {fSel7 = 0.;} else {fSel7 = +((iTemp20 | 0)?+(+(HEAPF32[dsp + 279040 >> 2]) * +(+((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0)) / +(fTemp3))):0.49);}fSel8 = 0.;if (((iTemp20 | 0) != 0) | 0) {fSel8 = +(fSel7);} else {fSel8 = +((iTemp18 | 0)?+(0.49 + +(+(HEAPF32[dsp + 279036 >> 2]) * +(+(0. - +(0.49 * +(+((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0)) - +(fTemp19)))) / +(fTemp3)))):0.);}fSel9 = 0.;if (((iTemp18 | 0) != 0) | 0) {fSel9 = +(fSel8);} else {fSel9 = +((iTemp16 | 0)?+(+(HEAPF32[dsp + 279028 >> 2]) * +(+(+((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0)) - +(fTemp17)) / +(fTemp3))):1.);}fSel10 = 0.;if (((iTemp16 | 0) != 0) | 0) {fSel10 = +(fSel9);} else {fSel10 = +((iTemp14 | 0)?+(1. + +(+(HEAPF32[dsp + 279020 >> 2]) * +(+(0. - +(+((HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0)) - +(fTemp15))) / +(fTemp3)))):0.);}HEAPF32[dsp + 278728 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 278728 + (1 << 2) >> 2])) + +(0.001 * +((iTemp14 | 0)?+(fSel10):0.)));HEAPF32[dsp + 278736 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 278896 >> 2]) * +(HEAPF32[dsp + 278736 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 278900 >> 2]) * +(+(HEAPF32[dsp + 278728 + (0 << 2) >> 2]) + +(HEAPF32[dsp + 278728 + (1 << 2) >> 2]))));fTemp21 = +(1. + +(HEAPF32[dsp + 278736 + (0 << 2) >> 2]));fTemp22 = +(max(+(27.72 * +(+(fTemp13) * +(fTemp21))), 23.4489));HEAPF32[dsp + 278744 + (0 << 2) >> 2] = +(fmodf(+(+(HEAPF32[dsp + 278744 + (1 << 2) >> 2]) + +(+(HEAPF32[dsp + 278996 >> 2]) * +(fTemp22))), 1.));fTemp23 = +(2. * +(HEAPF32[dsp + 278744 + (0 << 2) >> 2]));fTemp24 = +(1. + +(faustpower3_f(+(+(fTemp23) - 1.))));HEAPF32[dsp + 278752 + (0 << 2) >> 2] = +(+(fTemp24) - +(fTemp23));fTemp25 = +(+(+(fTemp24) - +(+(fTemp23) + +(HEAPF32[dsp + 278752 + (1 << 2) >> 2]))) / +(fTemp22));HEAPF32[dsp + 278760 + (0 << 2) >> 2] = +(fTemp25);fTemp26 = +(+(+((HEAP32[dsp + 278596 + (2 << 2) >> 2] | 0)) * +(+(0.5 * +(fTemp25)) - +(0.5 * +(HEAPF32[dsp + 278760 + (1 << 2) >> 2])))) / +(fTemp22));HEAPF32[dsp + 262148 + ((((HEAP32[dsp + 279044 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp26);fTemp27 = +(max(0., +(min(2047., +(+(HEAPF32[dsp + 279048 >> 2]) / +(fTemp22))))));iTemp28 = ~~(+(fTemp27));iTemp29 = ((1 + (iTemp28 | 0)) | 0);HEAPF32[dsp + 278768 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 278768 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 279004 >> 2]) * +(+(+(0.0833333 * +(fTemp26)) - +(0.0833333 * +(+(HEAPF32[dsp + 262148 + ((((((HEAP32[dsp + 279044 >> 2] | 0) - (iTemp28 | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(+((iTemp29 | 0)) - +(fTemp27))))) - +(0.0833333 * +(+(+(fTemp27) - +((iTemp28 | 0))) * +(HEAPF32[dsp + 262148 + ((((((HEAP32[dsp + 279044 >> 2] | 0) - (iTemp29 | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 278776 + (0 << 2) >> 2] = ((((+((HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 279052 >> 2]) * +(fTemp3))) | 0)?(HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0):(HEAP32[dsp + 278776 + (1 << 2) >> 2] | 0)) | 0);iTemp30 = ((+((HEAP32[dsp + 278776 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 279056 >> 2]) * +(fTemp3))) | 0);fTemp31 = +(+(HEAPF32[dsp + 279060 >> 2]) * +(fTemp3));iTemp32 = ((+((HEAP32[dsp + 278776 + (0 << 2) >> 2] | 0)) < +(fTemp31)) | 0);fSel11 = 0.;if (((((HEAP32[dsp + 278776 + (0 << 2) >> 2] | 0) < 0) | 0) != 0) | 0) {fSel11 = 0.;} else {fSel11 = +((iTemp32 | 0)?+(+(HEAPF32[dsp + 279068 >> 2]) * +(+((HEAP32[dsp + 278776 + (0 << 2) >> 2] | 0)) / +(fTemp3))):0.554);}fSel12 = 0.;if (((iTemp32 | 0) != 0) | 0) {fSel12 = +(fSel11);} else {fSel12 = +((iTemp30 | 0)?+(0.554 + +(+(HEAPF32[dsp + 279064 >> 2]) * +(+(0. - +(0.554 * +(+((HEAP32[dsp + 278776 + (0 << 2) >> 2] | 0)) - +(fTemp31)))) / +(fTemp3)))):0.);}HEAPF32[dsp + 278784 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 278784 + (1 << 2) >> 2])) + +(0.001 * +((iTemp30 | 0)?+(fSel12):0.)));HEAPF32[dsp + 278792 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 278896 >> 2]) * +(HEAPF32[dsp + 278792 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 278900 >> 2]) * +(+(HEAPF32[dsp + 278784 + (0 << 2) >> 2]) + +(HEAPF32[dsp + 278784 + (1 << 2) >> 2]))));HEAP32[dsp + 278800 + (0 << 2) >> 2] = ((((+((HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 279072 >> 2]) * +(fTemp3))) | 0)?(HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0):(HEAP32[dsp + 278800 + (1 << 2) >> 2] | 0)) | 0);fTemp33 = +(+(HEAPF32[dsp + 279076 >> 2]) * +(fTemp3));iTemp34 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp33)) | 0);HEAPF32[dsp + 278580 + (0 << 2) >> 2] = +(fmodf(+(((38125 + ~~(+(2994.23 * +(+(HEAPF32[dsp + 278580 + (2 << 2) >> 2]) + +(HEAPF32[dsp + 278580 + (3 << 2) >> 2]))))) | 0)), 1000.));HEAPF32[dsp + 278808 + (0 << 2) >> 2] = +((iTemp1 | 0)?+(HEAPF32[dsp + 278580 + (0 << 2) >> 2]):+(HEAPF32[dsp + 278808 + (1 << 2) >> 2]));fTemp35 = +(fabsf(+(+(HEAPF32[dsp + 278808 + (0 << 2) >> 2]) - 1.)));fTemp36 = +(0.001 * +(fTemp35));fTemp37 = +(0. - +(fTemp36));fTemp38 = +(+(HEAPF32[dsp + 279088 >> 2]) * +(fTemp3));iTemp39 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp38)) | 0);fTemp40 = +(+(fTemp36) - 1.);fSel13 = 0.;if (((iTemp34 | 0) != 0) | 0) {fSel13 = +(1. + +(+(HEAPF32[dsp + 279092 >> 2]) * +(+(+(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp38)) * +(fTemp40)) / +(fTemp3))));} else {fSel13 = +(fTemp36);}fTemp41 = +(+(HEAPF32[dsp + 279096 >> 2]) * +(fTemp3));iTemp42 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp41)) | 0);fTemp43 = +(1. - +(fTemp36));fTemp44 = +(+(HEAPF32[dsp + 279104 >> 2]) * +(fTemp3));iTemp45 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp44)) | 0);fSel14 = 0.;if (((iTemp42 | 0) != 0) | 0) {fSel14 = +(1. + +(+(HEAPF32[dsp + 279108 >> 2]) * +(+(+(fTemp40) * +(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp44))) / +(fTemp3))));} else {fSel14 = +(fTemp36);}fTemp46 = +(+(HEAPF32[dsp + 279112 >> 2]) * +(fTemp3));iTemp47 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp46)) | 0);fTemp48 = +(+(HEAPF32[dsp + 279120 >> 2]) * +(fTemp3));iTemp49 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp48)) | 0);fSel15 = 0.;if (((iTemp47 | 0) != 0) | 0) {fSel15 = +(0.434 + +(+(HEAPF32[dsp + 279124 >> 2]) * +(+(+(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp48)) * +(+(fTemp36) - 0.434)) / +(fTemp3))));} else {fSel15 = +(fTemp36);}fTemp50 = +(+(HEAPF32[dsp + 279128 >> 2]) * +(fTemp3));iTemp51 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp50)) | 0);fTemp52 = +(+(HEAPF32[dsp + 279136 >> 2]) * +(fTemp3));iTemp53 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp52)) | 0);fTemp54 = +(+(HEAPF32[dsp + 279144 >> 2]) * +(fTemp3));iTemp55 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp54)) | 0);fSel16 = 0.;if (((iTemp53 | 0) != 0) | 0) {fSel16 = +(+(HEAPF32[dsp + 279148 >> 2]) * +(+(+(fTemp35) * +(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp54))) / +(fTemp3)));} else {fSel16 = +(fTemp36);}fTemp56 = +(+(HEAPF32[dsp + 279152 >> 2]) * +(fTemp3));iTemp57 = ((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(fTemp56)) | 0);fSel17 = 0.;if (((((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0) < 0) | 0) != 0) | 0) {fSel17 = 0.;} else {fSel17 = +((iTemp57 | 0)?+(+(HEAPF32[dsp + 279160 >> 2]) * +(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) / +(fTemp3))):1.);}fSel18 = 0.;if (((iTemp57 | 0) != 0) | 0) {fSel18 = +(fSel17);} else {fSel18 = +((iTemp55 | 0)?+(1. + +(+(HEAPF32[dsp + 279156 >> 2]) * +(+(0. - +(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp56))) / +(fTemp3)))):0.);}fSel19 = 0.;if (((iTemp53 | 0) != 0) | 0) {fSel19 = +((iTemp55 | 0)?+(fSel18):+(fSel16));} else {fSel19 = +((iTemp51 | 0)?+(+(fTemp36) + +(+(HEAPF32[dsp + 279140 >> 2]) * +(+(+(fTemp37) * +(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp52))) / +(fTemp3)))):0.);}fSel20 = 0.;if (((iTemp51 | 0) != 0) | 0) {fSel20 = +(fSel19);} else {fSel20 = +((iTemp49 | 0)?+(+(HEAPF32[dsp + 279132 >> 2]) * +(+(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp50)) / +(fTemp3))):0.434);}fSel21 = 0.;if (((iTemp47 | 0) != 0) | 0) {fSel21 = +((iTemp49 | 0)?+(fSel20):+(fSel15));} else {fSel21 = +((iTemp45 | 0)?+(+(fTemp36) + +(+(HEAPF32[dsp + 279116 >> 2]) * +(+(+(fTemp43) * +(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp46))) / +(fTemp3)))):1.);}fSel22 = 0.;if (((iTemp42 | 0) != 0) | 0) {fSel22 = +((iTemp45 | 0)?+(fSel21):+(fSel14));} else {fSel22 = +((iTemp39 | 0)?+(+(fTemp36) + +(+(HEAPF32[dsp + 279100 >> 2]) * +(+(+(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp41)) * +(fTemp43)) / +(fTemp3)))):1.);}fSel23 = 0.;if (((iTemp34 | 0) != 0) | 0) {fSel23 = +((iTemp39 | 0)?+(fSel22):+(fSel13));} else {fSel23 = +(((+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) < +(+(HEAPF32[dsp + 279080 >> 2]) * +(fTemp3))) | 0)?+(+(fTemp36) + +(+(HEAPF32[dsp + 279084 >> 2]) * +(+(+(+((HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0)) - +(fTemp33)) * +(fTemp37)) / +(fTemp3)))):0.);}HEAPF32[dsp + 278816 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 278816 + (1 << 2) >> 2])) + +(0.001 * +(fSel23)));HEAPF32[dsp + 278824 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 278896 >> 2]) * +(HEAPF32[dsp + 278824 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 278900 >> 2]) * +(+(HEAPF32[dsp + 278816 + (0 << 2) >> 2]) + +(HEAPF32[dsp + 278816 + (1 << 2) >> 2]))));fTemp58 = +(+(HEAPF32[dsp + 278832 + (1 << 2) >> 2]) + +(+(HEAPF32[dsp + 278996 >> 2]) * +(+(+(fTemp13) * +(440. + +(+(HEAPF32[dsp + 279000 >> 2]) * +(+(+(HEAPF32[dsp + 278768 + (0 << 2) >> 2]) * +(fTemp21)) * +(1. + +(HEAPF32[dsp + 278792 + (0 << 2) >> 2])))))) * +(1. + +(HEAPF32[dsp + 278824 + (0 << 2) >> 2])))));HEAPF32[dsp + 278832 + (0 << 2) >> 2] = +(+(fTemp58) - +(floorf(+(fTemp58))));fTemp59 = +(65536. * +(HEAPF32[dsp + 278832 + (0 << 2) >> 2]));iTemp60 = ~~(+(fTemp59));fTemp61 = +(+(HEAPF32[dsp + 278704 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 0 + ((iTemp60 | 0) << 2) >> 2]) + +(+(+(fTemp59) - +(floorf(+(fTemp59)))) * +(+(HEAPF32[dsp + 0 + (((1 + (iTemp60 | 0)) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 0 + ((iTemp60 | 0) << 2) >> 2])))));HEAPF32[dsp + 278840 + (0 << 2) >> 2] = +(fTemp61);HEAPF32[dsp + 278848 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 278880 >> 2]) * +(HEAPF32[dsp + 278848 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 278884 >> 2]) * +(+(fTemp61) + +(HEAPF32[dsp + 278840 + (1 << 2) >> 2]))));fTemp62 = +(0.8 * +(HEAPF32[dsp + 278848 + (0 << 2) >> 2]));HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(fTemp62));HEAPF32[output1 + ((i | 0) << 2) >> 2] = +(+(fTemp62));HEAP32[dsp + 278596 + (2 << 2) >> 2] = (HEAP32[dsp + 278596 + (1 << 2) >> 2] | 0);HEAP32[dsp + 278596 + (1 << 2) >> 2] = (HEAP32[dsp + 278596 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 278608 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278608 + (0 << 2) >> 2]);HEAP32[dsp + 278616 + (1 << 2) >> 2] = (HEAP32[dsp + 278616 + (0 << 2) >> 2] | 0);HEAP32[dsp + 278624 + (1 << 2) >> 2] = (HEAP32[dsp + 278624 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 278632 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278632 + (0 << 2) >> 2]);HEAP32[dsp + 278640 + (1 << 2) >> 2] = (HEAP32[dsp + 278640 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 278648 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278648 + (0 << 2) >> 2]);for (j0 = 3; (((j0 | 0) > 0) | 0); j0 = (((j0 | 0) - 1) | 0)) {HEAPF32[dsp + 278532 + ((j0 | 0) << 2) >> 2] = +(HEAPF32[dsp + 278532 + ((((j0 | 0) - 1) | 0) << 2) >> 2]);}HEAPF32[dsp + 278656 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278656 + (0 << 2) >> 2]);HEAP32[dsp + 278664 + (1 << 2) >> 2] = (HEAP32[dsp + 278664 + (0 << 2) >> 2] | 0);HEAP32[dsp + 278672 + (1 << 2) >> 2] = (HEAP32[dsp + 278672 + (0 << 2) >> 2] | 0);for (j1 = 3; (((j1 | 0) > 0) | 0); j1 = (((j1 | 0) - 1) | 0)) {HEAPF32[dsp + 278548 + ((j1 | 0) << 2) >> 2] = +(HEAPF32[dsp + 278548 + ((((j1 | 0) - 1) | 0) << 2) >> 2]);}HEAPF32[dsp + 278680 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278680 + (0 << 2) >> 2]);HEAP32[dsp + 278688 + (1 << 2) >> 2] = (HEAP32[dsp + 278688 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 278696 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278696 + (0 << 2) >> 2]);HEAPF32[dsp + 278704 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278704 + (0 << 2) >> 2]);for (j2 = 3; (((j2 | 0) > 0) | 0); j2 = (((j2 | 0) - 1) | 0)) {HEAPF32[dsp + 278564 + ((j2 | 0) << 2) >> 2] = +(HEAPF32[dsp + 278564 + ((((j2 | 0) - 1) | 0) << 2) >> 2]);}HEAPF32[dsp + 278712 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278712 + (0 << 2) >> 2]);HEAP32[dsp + 278720 + (1 << 2) >> 2] = (HEAP32[dsp + 278720 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 278728 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278728 + (0 << 2) >> 2]);HEAPF32[dsp + 278736 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278736 + (0 << 2) >> 2]);HEAPF32[dsp + 278744 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278744 + (0 << 2) >> 2]);HEAPF32[dsp + 278752 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278752 + (0 << 2) >> 2]);HEAPF32[dsp + 278760 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278760 + (0 << 2) >> 2]);HEAP32[dsp + 279044 >> 2] = (((HEAP32[dsp + 279044 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 278768 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278768 + (0 << 2) >> 2]);HEAP32[dsp + 278776 + (1 << 2) >> 2] = (HEAP32[dsp + 278776 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 278784 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278784 + (0 << 2) >> 2]);HEAPF32[dsp + 278792 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278792 + (0 << 2) >> 2]);HEAP32[dsp + 278800 + (1 << 2) >> 2] = (HEAP32[dsp + 278800 + (0 << 2) >> 2] | 0);for (j3 = 3; (((j3 | 0) > 0) | 0); j3 = (((j3 | 0) - 1) | 0)) {HEAPF32[dsp + 278580 + ((j3 | 0) << 2) >> 2] = +(HEAPF32[dsp + 278580 + ((((j3 | 0) - 1) | 0) << 2) >> 2]);}HEAPF32[dsp + 278808 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278808 + (0 << 2) >> 2]);HEAPF32[dsp + 278816 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278816 + (0 << 2) >> 2]);HEAPF32[dsp + 278824 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278824 + (0 << 2) >> 2]);HEAPF32[dsp + 278832 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278832 + (0 << 2) >> 2]);HEAPF32[dsp + 278840 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278840 + (0 << 2) >> 2]);HEAPF32[dsp + 278848 + (1 << 2) >> 2] = +(HEAPF32[dsp + 278848 + (0 << 2) >> 2]);}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp3() {return 279164;}function getPathTablemydsp3() {var pathTable = [];pathTable[\"/SBird/Bird/Speed_(Granulator)\"] = 278912;pathTable[\"/SBird/Bird/Probability_(Granulator)\"] = 278916;return pathTable;}function getJSONmydsp3() {return \"{ \\\"name\\\": \\\"bird\\\", \\\"inputs\\\": \\\"0\\\", \\\"outputs\\\": \\\"2\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"author\\\": \\\"Pierre Cochard\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_author\\\": \\\"Priyanka Shekar (pshekar@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\\\": \\\"Copyright (c) 2013 Priyanka Shekar\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_license\\\": \\\"MIT License (MIT)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_name\\\": \\\"Harmonic Exciter\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/name\\\": \\\"Faust Audio Effect Library\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/version\\\": \\\"1.33\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/name\\\": \\\"Faust Oscillator Library\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/version\\\": \\\"1.11\\\" }, { \\\"name\\\": \\\"bird\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"SBird\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hgroup\\\", \\\"label\\\": \\\"Bird\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Speed (Granulator)\\\", \\\"address\\\": \\\"/SBird/Bird/Speed_(Granulator)\\\", \\\"meta\\\": [ { \\\"1\\\": \\\"\\\" }, { \\\"acc\\\": \\\"0 0 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" } ], \\\"init\\\": \\\"240\\\", \\\"min\\\": \\\"120\\\", \\\"max\\\": \\\"480\\\", \\\"step\\\": \\\"0.1\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Probability (Granulator)\\\", \\\"address\\\": \\\"/SBird/Bird/Probability_(Granulator)\\\", \\\"meta\\\": [ { \\\"2\\\": \\\"\\\" }, { \\\"acc\\\": \\\"0 0 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" }, { \\\"unit\\\": \\\"%\\\" } ], \\\"init\\\": \\\"50\\\", \\\"min\\\": \\\"25\\\", \\\"max\\\": \\\"100\\\", \\\"step\\\": \\\"1\\\" } ] } ] } ] } \";}function metadatamydsp3(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"author\", \"Pierre Cochard\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_author\", \"Priyanka Shekar (pshekar@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\", \"Copyright (c) 2013 Priyanka Shekar\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_license\", \"MIT License (MIT)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_name\", \"Harmonic Exciter\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/name\", \"Faust Audio Effect Library\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/version\", \"1.33\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/name\", \"Faust Oscillator Library\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/version\", \"1.11\");m.declare(\"name\", \"bird\");}"}},"4":{"patchId":"4","code":"process = vgroup(\"SBlowhistleBottle\",environment{declare name \"Blowhistle Bottle\";\r\ndeclare author \"ER\"; //From \"Blow bottle\" by Romain Michon;\r\ndeclare version \"1.0\";\r\ndeclare licence \"STK-4.3\"; // Synthesis Tool Kit 4.3 (MIT style license);\r\ndeclare description \"This object implements a helmholtz resonator (biquad filter) with a polynomial jet excitation (a la Cook).\";\r\n\r\n/* =============== DESCRIPTION ================= :\r\n\r\n- Blow bottles with whistling echo.\r\n- Left : silence/dying echo.\r\n- Front : single blow bottle.\r\n- Back : maximum whistling echo\r\n- Bottom : bottle + whistling echo \r\n- Rocking : changes tone of blow bottle. \r\n\r\n*/\r\n\r\nimport(\"math.lib\");\r\nimport(\"music.lib\");\r\nimport(\"instrument.lib\");\r\nimport(\"filter.lib\");\r\n\r\n//==================== INSTRUMENT =======================\r\n\r\nprocess = vgroup(\"Blowhistle Bottles\", par(i, N, blow(i)) :>_);\r\n\r\nblow(n)= par(i, 2, \r\n\t//differential pressure\r\n\t(-(breathPressure(trigger(n))) <: \r\n\t((+(1))*randPressure((trigger(n))) : +(breathPressure(trigger(n)))) - *(jetTable),_ : baPaF(i,n),_)~_: !,_: \r\n\t//signal scaling\r\n\tdcblocker*envelopeG(trigger(n))*(0.5)<:+(voice(i,n))*resonGain(i)):>_\r\n\twith{\r\n\t\t\tbaPaF(0,n) = bandPassFilter(freq(n));\r\n\t\t\tbaPaF(1,n) = bandPassFilter(freq(n)*8);\r\n\t\t\tvoice(0,n) = 0*n;\r\n\t\t\tvoice(1,n) = 1*(resonbp(freq(n)*8,Q,gain):echo);\r\n\t\t\tresonGain(0) = 1;\r\n\t\t\tresonGain(1) =(hslider(\"v:[1]Instrument/Whistle Volume[acc:2 0 -10 0 10]\", 0.07, 0, 0.2, 0.001))^2:smooth(0.999);\r\n\r\n\t\t\techo = _:+~(@(delayEcho):*(feedback));\r\n\t\t\tdelayEcho = 44100;\r\n\t\t\tfeedback = hslider(\"h:[2]Echo/Echo Intensity [style:knob][acc:2 0 -10 0 10]\", 0.48, 0.2, 0.98, 0.01):smooth(0.999):min(0.98):max(0.2);\r\n\t\t\t};\r\n\r\n//==================== GUI SPECIFICATION ================\r\nN = 10;\r\nQ = 30;\r\nposition(n) = abs(hand - n) < 0.5;\r\nhand = hslider(\"v:[1]Instrument/Instrument Hand[acc:0 0 -10 0 10]\", 5, 0, N, 1):int:automat(360, 15, 0.0);\r\nenvelopeAttack = 0.01;\r\nvibratoFreq = 5;\r\nvibratoGain = 0.1;\r\n\r\n\r\n//--------------------- Non-variable Parameters -------------\r\n\r\ngain = 0.5;\r\nnoiseGain = 0.5;\r\npressure = 1;\r\nvibratoBegin = 0.05;\r\nvibratoAttack = 0.5;\r\nvibratoRelease = 0.01;\r\nenvelopeDecay = 0.01;\r\nenvelopeRelease = 0.5;\r\n\r\n//----------------------- Frequency Table --------------------\r\n\r\nfreq(0) = 130.81;\r\nfreq(1) = 146.83;\r\nfreq(2) = 164.81;\r\nfreq(3) = 195.99;\r\nfreq(4) = 220.00;\r\n\r\nfreq(d)\t = freq(d-5)*2;\r\n\r\n//==================== SIGNAL PROCESSING ================\r\n\r\n//----------------------- Synthesis parameters computing and functions declaration ----------------------------\r\n\r\n//botlle radius\r\nbottleRadius = 0.999;\r\n\r\nbandPassFilter(f) = bandPass(f,bottleRadius);\r\n\r\n//----------------------- Algorithm implementation ----------------------------\r\n\r\n//global envelope is of type attack - decay - sustain - release\r\nenvelopeG(t) = gain*adsr(gain*envelopeAttack,envelopeDecay,80,envelopeRelease,t);\r\n\r\n//pressure envelope is also ADSR\r\nenvelope(t) = pressure*adsr(gain*0.02,0.01,80,gain*0.2,t);\r\n\r\n//vibrato\r\nvibrato(t) = osc(vibratoFreq)*vibratoGain*envVibrato(vibratoBegin,vibratoAttack,100,vibratoRelease,t)*osc(vibratoFreq);\r\n\r\n//breat pressure\r\nbreathPressure(t) = envelope(t) + vibrato(t);\r\n\r\n//breath noise\r\nrandPressure(t) = noiseGain*noise*breathPressure(t) ;\r\n\r\n//------------------------- Enveloppe Trigger --------------------------------------------\r\n\r\ntrigger(n) = position(n): trig\r\n\twith{\r\n\tupfront(x) \t= (x-x') > 0;\r\n\tdecay(n,x)\t= x - (x>0.0)/n;\r\n\trelease(n)\t= + ~ decay(n);\r\n\ttrig = upfront : release(8820) : >(0.0);\r\n\t};\r\n\r\n\r\n\t}.process);","name":"SBlowhistleBottle","x":"167","y":"206","inputs":{"source":[]},"outputs":{"destination":["9"]},"params":{"sliders":[{"path":"/SBlowhistleBottle/Blowhistle_Bottles/Instrument/Instrument_Hand","value":5},{"path":"/SBlowhistleBottle/Blowhistle_Bottles/Instrument/Whistle_Volume","value":0.07000000029802322},{"path":"/SBlowhistleBottle/Blowhistle_Bottles/Echo/Echo_Intensity","value":0.47999998927116394}]},"factory":{"name":"mydsp4","code":"/* ------------------------------------------------------------author: \"ER\"name: \"Blowhistle Bottle\"version: \"1.0\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp4Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var abs = global.Math.abs;var cosf = global.Math.cos;var fabsf = global.Math.abs;var max = global.Math.max;var min = global.Math.min;var powf = global.Math.pow;var floorf = global.Math.floor;var sinf = global.Math.sin;var tanf = global.Math.tan;function faustpower2_f(value) {value = +(value);return +((value * value));}function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputsmydsp4SIG0(dsp) {dsp = dsp | 0;return 0;}function getNumOutputsmydsp4SIG0(dsp) {dsp = dsp | 0;return 1;}function instanceInitmydsp4SIG0(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function fillmydsp4SIG0(dsp, count, output) {dsp = dsp | 0;count = count | 0;output = output | 0;var i = 0;for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAPF32[output + ((i | 0) << 2) >> 2] = 0.;}}function getNumInputsmydsp4SIG1(dsp) {dsp = dsp | 0;return 0;}function getNumOutputsmydsp4SIG1(dsp) {dsp = dsp | 0;return 1;}function instanceInitmydsp4SIG1(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i12 = 0;for (i12 = 0; (((i12 | 0) < 2) | 0); i12 = (((i12 | 0) + 1) | 0)) {HEAP32[dsp + 2885280 + ((i12 | 0) << 2) >> 2] = 0;}}function fillmydsp4SIG1(dsp, count, output) {dsp = dsp | 0;count = count | 0;output = output | 0;var i = 0;for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAP32[dsp + 2885280 + (0 << 2) >> 2] = ((1 + (HEAP32[dsp + 2885280 + (1 << 2) >> 2] | 0)) | 0);HEAPF32[output + ((i | 0) << 2) >> 2] = +(sinf(+(9.58738e-05 * +((((HEAP32[dsp + 2885280 + (0 << 2) >> 2] | 0) - 1) | 0)))));HEAP32[dsp + 2885280 + (1 << 2) >> 2] = (HEAP32[dsp + 2885280 + (0 << 2) >> 2] | 0);}}function getNumInputs(dsp) {dsp = dsp | 0;return 0;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;instanceInitmydsp4SIG1(dsp, (samplingFreq | 0));fillmydsp4SIG1(dsp, 65536, (dsp + 0 | 0));}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;var i6 = 0;var i7 = 0;var i8 = 0;var i9 = 0;var i10 = 0;var i11 = 0;var i13 = 0;var i14 = 0;var i15 = 0;var i16 = 0;var i17 = 0;var i18 = 0;var i19 = 0;var i20 = 0;var i21 = 0;var i22 = 0;var i23 = 0;var i24 = 0;var i25 = 0;var i26 = 0;var i27 = 0;var i28 = 0;var i29 = 0;var i30 = 0;var i31 = 0;var i32 = 0;var i33 = 0;var i34 = 0;var i35 = 0;var i36 = 0;var i37 = 0;var i38 = 0;var i39 = 0;var i40 = 0;var i41 = 0;var i42 = 0;var i43 = 0;var i44 = 0;var i45 = 0;var i46 = 0;var i47 = 0;var i48 = 0;var i49 = 0;var i50 = 0;var i51 = 0;var i52 = 0;var i53 = 0;var i54 = 0;var i55 = 0;var i56 = 0;var i57 = 0;var i58 = 0;var i59 = 0;var i60 = 0;var i61 = 0;var i62 = 0;var i63 = 0;var i64 = 0;var i65 = 0;var i66 = 0;var i67 = 0;var i68 = 0;var i69 = 0;var i70 = 0;var i71 = 0;var i72 = 0;var i73 = 0;var i74 = 0;var i75 = 0;var i76 = 0;var i77 = 0;var i78 = 0;var i79 = 0;var i80 = 0;var i81 = 0;var i82 = 0;var i83 = 0;var i84 = 0;var i85 = 0;var i86 = 0;var i87 = 0;var i88 = 0;var i89 = 0;var i90 = 0;var i91 = 0;var i92 = 0;var i93 = 0;var i94 = 0;var i95 = 0;var i96 = 0;var i97 = 0;var i98 = 0;var i99 = 0;var i100 = 0;var i101 = 0;var i102 = 0;var i103 = 0;var i104 = 0;var i105 = 0;var i106 = 0;var i107 = 0;var i108 = 0;var i109 = 0;var i110 = 0;var i111 = 0;var i112 = 0;var i113 = 0;var i114 = 0;var i115 = 0;var i116 = 0;var i117 = 0;var i118 = 0;var i119 = 0;var i120 = 0;var i121 = 0;var i122 = 0;var i123 = 0;var i124 = 0;var i125 = 0;var i126 = 0;var i127 = 0;var i128 = 0;var i129 = 0;var i130 = 0;var i131 = 0;var i132 = 0;var i133 = 0;var i134 = 0;var i135 = 0;var i136 = 0;var i137 = 0;var i138 = 0;var i139 = 0;var i140 = 0;var i141 = 0;var i142 = 0;var i143 = 0;var i144 = 0;var i145 = 0;var i146 = 0;var i147 = 0;var i148 = 0;var i149 = 0;var i150 = 0;var i151 = 0;var i152 = 0;var i153 = 0;var i154 = 0;var i155 = 0;var i156 = 0;var i157 = 0;var i158 = 0;var i159 = 0;var i160 = 0;var i161 = 0;var i162 = 0;var i163 = 0;var i164 = 0;var i165 = 0;var i166 = 0;var i167 = 0;var i168 = 0;var i169 = 0;var i170 = 0;var i171 = 0;var i172 = 0;var i173 = 0;var i174 = 0;var i175 = 0;var i176 = 0;var i177 = 0;var i178 = 0;var i179 = 0;var i180 = 0;var i181 = 0;var i182 = 0;var i183 = 0;var i184 = 0;var i185 = 0;var i186 = 0;var i187 = 0;var i188 = 0;var i189 = 0;var i190 = 0;var i191 = 0;var i192 = 0;var i193 = 0;var i194 = 0;var i195 = 0;var i196 = 0;var i197 = 0;var i198 = 0;var i199 = 0;HEAP32[dsp + 2885288 >> 2] = (samplingFreq | 0);instanceInitmydsp4SIG0(dsp, (samplingFreq | 0));fillmydsp4SIG0(dsp, 16, (dsp + 2883584 | 0));HEAP32[dsp + 2885292 >> 2] = ((min(192000, ((max(1, (HEAP32[dsp + 2885288 >> 2] | 0))) | 0))) | 0);HEAP32[dsp + 2885296 >> 2] = ~~(+(0.166667 * +((HEAP32[dsp + 2885292 >> 2] | 0))));for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAP32[dsp + 2884008 + ((i0 | 0) << 2) >> 2] = 0;}for (i1 = 0; (((i1 | 0) < 2) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAP32[dsp + 2884016 + ((i1 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 2885300 >> 2] = +(5.);for (i2 = 0; (((i2 | 0) < 2) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAP32[dsp + 2884024 + ((i2 | 0) << 2) >> 2] = 0;}for (i3 = 0; (((i3 | 0) < 2) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAP32[dsp + 2884032 + ((i3 | 0) << 2) >> 2] = 0;}for (i4 = 0; (((i4 | 0) < 2) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAP32[dsp + 2884040 + ((i4 | 0) << 2) >> 2] = 0;}for (i5 = 0; (((i5 | 0) < 2) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAP32[dsp + 2884048 + ((i5 | 0) << 2) >> 2] = 0;}for (i6 = 0; (((i6 | 0) < 2) | 0); i6 = (((i6 | 0) + 1) | 0)) {HEAPF32[dsp + 2884056 + ((i6 | 0) << 2) >> 2] = 0.;}for (i7 = 0; (((i7 | 0) < 2) | 0); i7 = (((i7 | 0) + 1) | 0)) {HEAP32[dsp + 2884064 + ((i7 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 2885304 >> 2] = +(100. / +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885308 >> 2] = +(1. - +(powf(80., +(HEAPF32[dsp + 2885304 >> 2]))));HEAPF32[dsp + 2885312 >> 2] = +(1. - +(1. / +(powf(80000., +(10. / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i8 = 0; (((i8 | 0) < 2) | 0); i8 = (((i8 | 0) + 1) | 0)) {HEAPF32[dsp + 2884072 + ((i8 | 0) << 2) >> 2] = 0.;}for (i9 = 0; (((i9 | 0) < 2) | 0); i9 = (((i9 | 0) + 1) | 0)) {HEAP32[dsp + 2884080 + ((i9 | 0) << 2) >> 2] = 0;}for (i10 = 0; (((i10 | 0) < 2) | 0); i10 = (((i10 | 0) + 1) | 0)) {HEAP32[dsp + 2884088 + ((i10 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 2885316 >> 2] = +(2. / +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885320 >> 2] = +(0.05 * +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885324 >> 2] = +(1. - +(1. / +(powf(100000., +(HEAPF32[dsp + 2885304 >> 2])))));for (i11 = 0; (((i11 | 0) < 2) | 0); i11 = (((i11 | 0) + 1) | 0)) {HEAPF32[dsp + 2884096 + ((i11 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885328 >> 2] = +(5. / +((HEAP32[dsp + 2885292 >> 2] | 0)));for (i13 = 0; (((i13 | 0) < 2) | 0); i13 = (((i13 | 0) + 1) | 0)) {HEAPF32[dsp + 2884104 + ((i13 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885332 >> 2] = +(0. - +(1.998 * +(cosf(+(821.903 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i14 = 0; (((i14 | 0) < 2) | 0); i14 = (((i14 | 0) + 1) | 0)) {HEAP32[dsp + 2884112 + ((i14 | 0) << 2) >> 2] = 0;}for (i15 = 0; (((i15 | 0) < 3) | 0); i15 = (((i15 | 0) + 1) | 0)) {HEAPF32[dsp + 2883648 + ((i15 | 0) << 2) >> 2] = 0.;}for (i16 = 0; (((i16 | 0) < 2) | 0); i16 = (((i16 | 0) + 1) | 0)) {HEAPF32[dsp + 2884120 + ((i16 | 0) << 2) >> 2] = 0.;}for (i17 = 0; (((i17 | 0) < 2) | 0); i17 = (((i17 | 0) + 1) | 0)) {HEAPF32[dsp + 2884128 + ((i17 | 0) << 2) >> 2] = 0.;}for (i18 = 0; (((i18 | 0) < 2) | 0); i18 = (((i18 | 0) + 1) | 0)) {HEAPF32[dsp + 2884136 + ((i18 | 0) << 2) >> 2] = 0.;}for (i19 = 0; (((i19 | 0) < 2) | 0); i19 = (((i19 | 0) + 1) | 0)) {HEAP32[dsp + 2884144 + ((i19 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 2885336 >> 2] = +(200. / +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885340 >> 2] = +(1. - +(1. / +(powf(80000., +(HEAPF32[dsp + 2885316 >> 2])))));for (i20 = 0; (((i20 | 0) < 2) | 0); i20 = (((i20 | 0) + 1) | 0)) {HEAPF32[dsp + 2884152 + ((i20 | 0) << 2) >> 2] = 0.;}for (i21 = 0; (((i21 | 0) < 2) | 0); i21 = (((i21 | 0) + 1) | 0)) {HEAP32[dsp + 2884160 + ((i21 | 0) << 2) >> 2] = 0;}for (i22 = 0; (((i22 | 0) < 2) | 0); i22 = (((i22 | 0) + 1) | 0)) {HEAPF32[dsp + 2884168 + ((i22 | 0) << 2) >> 2] = 0.;}for (i23 = 0; (((i23 | 0) < 2) | 0); i23 = (((i23 | 0) + 1) | 0)) {HEAP32[dsp + 2884176 + ((i23 | 0) << 2) >> 2] = 0;}for (i24 = 0; (((i24 | 0) < 2) | 0); i24 = (((i24 | 0) + 1) | 0)) {HEAPF32[dsp + 2884184 + ((i24 | 0) << 2) >> 2] = 0.;}for (i25 = 0; (((i25 | 0) < 2) | 0); i25 = (((i25 | 0) + 1) | 0)) {HEAP32[dsp + 2884192 + ((i25 | 0) << 2) >> 2] = 0;}for (i26 = 0; (((i26 | 0) < 2) | 0); i26 = (((i26 | 0) + 1) | 0)) {HEAP32[dsp + 2884200 + ((i26 | 0) << 2) >> 2] = 0;}for (i27 = 0; (((i27 | 0) < 2) | 0); i27 = (((i27 | 0) + 1) | 0)) {HEAPF32[dsp + 2884208 + ((i27 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885344 >> 2] = +(0. - +(1.998 * +(cosf(+(922.56 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i28 = 0; (((i28 | 0) < 3) | 0); i28 = (((i28 | 0) + 1) | 0)) {HEAPF32[dsp + 2883660 + ((i28 | 0) << 2) >> 2] = 0.;}for (i29 = 0; (((i29 | 0) < 2) | 0); i29 = (((i29 | 0) + 1) | 0)) {HEAPF32[dsp + 2884216 + ((i29 | 0) << 2) >> 2] = 0.;}for (i30 = 0; (((i30 | 0) < 2) | 0); i30 = (((i30 | 0) + 1) | 0)) {HEAPF32[dsp + 2884224 + ((i30 | 0) << 2) >> 2] = 0.;}for (i31 = 0; (((i31 | 0) < 2) | 0); i31 = (((i31 | 0) + 1) | 0)) {HEAPF32[dsp + 2884232 + ((i31 | 0) << 2) >> 2] = 0.;}for (i32 = 0; (((i32 | 0) < 2) | 0); i32 = (((i32 | 0) + 1) | 0)) {HEAP32[dsp + 2884240 + ((i32 | 0) << 2) >> 2] = 0;}for (i33 = 0; (((i33 | 0) < 2) | 0); i33 = (((i33 | 0) + 1) | 0)) {HEAPF32[dsp + 2884248 + ((i33 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885348 >> 2] = +(0.07);for (i34 = 0; (((i34 | 0) < 2) | 0); i34 = (((i34 | 0) + 1) | 0)) {HEAPF32[dsp + 2884256 + ((i34 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885352 >> 2] = +(0.48);for (i35 = 0; (((i35 | 0) < 2) | 0); i35 = (((i35 | 0) + 1) | 0)) {HEAPF32[dsp + 2884264 + ((i35 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885356 >> 2] = +(tanf(+(3287.61 / +((HEAP32[dsp + 2885292 >> 2] | 0)))));HEAPF32[dsp + 2885360 >> 2] = +(1. / +(HEAPF32[dsp + 2885356 >> 2]));HEAPF32[dsp + 2885364 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885360 >> 2])) / +(HEAPF32[dsp + 2885356 >> 2]))));HEAPF32[dsp + 2885368 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885356 >> 2]));HEAPF32[dsp + 2885372 >> 2] = +(0. - +(HEAPF32[dsp + 2885368 >> 2]));HEAPF32[dsp + 2885376 >> 2] = +(6575.23 / +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885380 >> 2] = +(0. - +(1.998 * +(cosf(+(HEAPF32[dsp + 2885376 >> 2])))));for (i36 = 0; (((i36 | 0) < 3) | 0); i36 = (((i36 | 0) + 1) | 0)) {HEAPF32[dsp + 2883672 + ((i36 | 0) << 2) >> 2] = 0.;}for (i37 = 0; (((i37 | 0) < 2) | 0); i37 = (((i37 | 0) + 1) | 0)) {HEAPF32[dsp + 2884272 + ((i37 | 0) << 2) >> 2] = 0.;}for (i38 = 0; (((i38 | 0) < 2) | 0); i38 = (((i38 | 0) + 1) | 0)) {HEAPF32[dsp + 2884280 + ((i38 | 0) << 2) >> 2] = 0.;}for (i39 = 0; (((i39 | 0) < 2) | 0); i39 = (((i39 | 0) + 1) | 0)) {HEAPF32[dsp + 2884288 + ((i39 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885384 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885360 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885356 >> 2])));HEAPF32[dsp + 2885388 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885356 >> 2]))))));for (i40 = 0; (((i40 | 0) < 3) | 0); i40 = (((i40 | 0) + 1) | 0)) {HEAPF32[dsp + 2883684 + ((i40 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 2885392 >> 2] = 0;for (i41 = 0; (((i41 | 0) < 65536) | 0); i41 = (((i41 | 0) + 1) | 0)) {HEAPF32[dsp + 262144 + ((i41 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885396 >> 2] = +(tanf(+(3690.24 / +((HEAP32[dsp + 2885292 >> 2] | 0)))));HEAPF32[dsp + 2885400 >> 2] = +(1. / +(HEAPF32[dsp + 2885396 >> 2]));HEAPF32[dsp + 2885404 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885400 >> 2])) / +(HEAPF32[dsp + 2885396 >> 2]))));HEAPF32[dsp + 2885408 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885396 >> 2]));HEAPF32[dsp + 2885412 >> 2] = +(0. - +(HEAPF32[dsp + 2885408 >> 2]));HEAPF32[dsp + 2885416 >> 2] = +(7380.48 / +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885420 >> 2] = +(0. - +(1.998 * +(cosf(+(HEAPF32[dsp + 2885416 >> 2])))));for (i42 = 0; (((i42 | 0) < 3) | 0); i42 = (((i42 | 0) + 1) | 0)) {HEAPF32[dsp + 2883696 + ((i42 | 0) << 2) >> 2] = 0.;}for (i43 = 0; (((i43 | 0) < 2) | 0); i43 = (((i43 | 0) + 1) | 0)) {HEAPF32[dsp + 2884296 + ((i43 | 0) << 2) >> 2] = 0.;}for (i44 = 0; (((i44 | 0) < 2) | 0); i44 = (((i44 | 0) + 1) | 0)) {HEAPF32[dsp + 2884304 + ((i44 | 0) << 2) >> 2] = 0.;}for (i45 = 0; (((i45 | 0) < 2) | 0); i45 = (((i45 | 0) + 1) | 0)) {HEAPF32[dsp + 2884312 + ((i45 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885424 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885400 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885396 >> 2])));HEAPF32[dsp + 2885428 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885396 >> 2]))))));for (i46 = 0; (((i46 | 0) < 3) | 0); i46 = (((i46 | 0) + 1) | 0)) {HEAPF32[dsp + 2883708 + ((i46 | 0) << 2) >> 2] = 0.;}for (i47 = 0; (((i47 | 0) < 65536) | 0); i47 = (((i47 | 0) + 1) | 0)) {HEAPF32[dsp + 524288 + ((i47 | 0) << 2) >> 2] = 0.;}for (i48 = 0; (((i48 | 0) < 2) | 0); i48 = (((i48 | 0) + 1) | 0)) {HEAP32[dsp + 2884320 + ((i48 | 0) << 2) >> 2] = 0;}for (i49 = 0; (((i49 | 0) < 2) | 0); i49 = (((i49 | 0) + 1) | 0)) {HEAPF32[dsp + 2884328 + ((i49 | 0) << 2) >> 2] = 0.;}for (i50 = 0; (((i50 | 0) < 2) | 0); i50 = (((i50 | 0) + 1) | 0)) {HEAP32[dsp + 2884336 + ((i50 | 0) << 2) >> 2] = 0;}for (i51 = 0; (((i51 | 0) < 2) | 0); i51 = (((i51 | 0) + 1) | 0)) {HEAPF32[dsp + 2884344 + ((i51 | 0) << 2) >> 2] = 0.;}for (i52 = 0; (((i52 | 0) < 2) | 0); i52 = (((i52 | 0) + 1) | 0)) {HEAP32[dsp + 2884352 + ((i52 | 0) << 2) >> 2] = 0;}for (i53 = 0; (((i53 | 0) < 2) | 0); i53 = (((i53 | 0) + 1) | 0)) {HEAP32[dsp + 2884360 + ((i53 | 0) << 2) >> 2] = 0;}for (i54 = 0; (((i54 | 0) < 2) | 0); i54 = (((i54 | 0) + 1) | 0)) {HEAPF32[dsp + 2884368 + ((i54 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885432 >> 2] = +(0. - +(1.998 * +(cosf(+(1035.53 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i55 = 0; (((i55 | 0) < 3) | 0); i55 = (((i55 | 0) + 1) | 0)) {HEAPF32[dsp + 2883720 + ((i55 | 0) << 2) >> 2] = 0.;}for (i56 = 0; (((i56 | 0) < 2) | 0); i56 = (((i56 | 0) + 1) | 0)) {HEAPF32[dsp + 2884376 + ((i56 | 0) << 2) >> 2] = 0.;}for (i57 = 0; (((i57 | 0) < 2) | 0); i57 = (((i57 | 0) + 1) | 0)) {HEAPF32[dsp + 2884384 + ((i57 | 0) << 2) >> 2] = 0.;}for (i58 = 0; (((i58 | 0) < 2) | 0); i58 = (((i58 | 0) + 1) | 0)) {HEAPF32[dsp + 2884392 + ((i58 | 0) << 2) >> 2] = 0.;}for (i59 = 0; (((i59 | 0) < 2) | 0); i59 = (((i59 | 0) + 1) | 0)) {HEAP32[dsp + 2884400 + ((i59 | 0) << 2) >> 2] = 0;}for (i60 = 0; (((i60 | 0) < 2) | 0); i60 = (((i60 | 0) + 1) | 0)) {HEAPF32[dsp + 2884408 + ((i60 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885436 >> 2] = +(tanf(+(4142.13 / +((HEAP32[dsp + 2885292 >> 2] | 0)))));HEAPF32[dsp + 2885440 >> 2] = +(1. / +(HEAPF32[dsp + 2885436 >> 2]));HEAPF32[dsp + 2885444 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885440 >> 2])) / +(HEAPF32[dsp + 2885436 >> 2]))));HEAPF32[dsp + 2885448 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885436 >> 2]));HEAPF32[dsp + 2885452 >> 2] = +(0. - +(HEAPF32[dsp + 2885448 >> 2]));HEAPF32[dsp + 2885456 >> 2] = +(8284.25 / +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885460 >> 2] = +(0. - +(1.998 * +(cosf(+(HEAPF32[dsp + 2885456 >> 2])))));for (i61 = 0; (((i61 | 0) < 3) | 0); i61 = (((i61 | 0) + 1) | 0)) {HEAPF32[dsp + 2883732 + ((i61 | 0) << 2) >> 2] = 0.;}for (i62 = 0; (((i62 | 0) < 2) | 0); i62 = (((i62 | 0) + 1) | 0)) {HEAPF32[dsp + 2884416 + ((i62 | 0) << 2) >> 2] = 0.;}for (i63 = 0; (((i63 | 0) < 2) | 0); i63 = (((i63 | 0) + 1) | 0)) {HEAPF32[dsp + 2884424 + ((i63 | 0) << 2) >> 2] = 0.;}for (i64 = 0; (((i64 | 0) < 2) | 0); i64 = (((i64 | 0) + 1) | 0)) {HEAPF32[dsp + 2884432 + ((i64 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885464 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885440 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885436 >> 2])));HEAPF32[dsp + 2885468 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885436 >> 2]))))));for (i65 = 0; (((i65 | 0) < 3) | 0); i65 = (((i65 | 0) + 1) | 0)) {HEAPF32[dsp + 2883744 + ((i65 | 0) << 2) >> 2] = 0.;}for (i66 = 0; (((i66 | 0) < 65536) | 0); i66 = (((i66 | 0) + 1) | 0)) {HEAPF32[dsp + 786432 + ((i66 | 0) << 2) >> 2] = 0.;}for (i67 = 0; (((i67 | 0) < 2) | 0); i67 = (((i67 | 0) + 1) | 0)) {HEAP32[dsp + 2884440 + ((i67 | 0) << 2) >> 2] = 0;}for (i68 = 0; (((i68 | 0) < 2) | 0); i68 = (((i68 | 0) + 1) | 0)) {HEAPF32[dsp + 2884448 + ((i68 | 0) << 2) >> 2] = 0.;}for (i69 = 0; (((i69 | 0) < 2) | 0); i69 = (((i69 | 0) + 1) | 0)) {HEAP32[dsp + 2884456 + ((i69 | 0) << 2) >> 2] = 0;}for (i70 = 0; (((i70 | 0) < 2) | 0); i70 = (((i70 | 0) + 1) | 0)) {HEAPF32[dsp + 2884464 + ((i70 | 0) << 2) >> 2] = 0.;}for (i71 = 0; (((i71 | 0) < 2) | 0); i71 = (((i71 | 0) + 1) | 0)) {HEAP32[dsp + 2884472 + ((i71 | 0) << 2) >> 2] = 0;}for (i72 = 0; (((i72 | 0) < 2) | 0); i72 = (((i72 | 0) + 1) | 0)) {HEAP32[dsp + 2884480 + ((i72 | 0) << 2) >> 2] = 0;}for (i73 = 0; (((i73 | 0) < 2) | 0); i73 = (((i73 | 0) + 1) | 0)) {HEAPF32[dsp + 2884488 + ((i73 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885472 >> 2] = +(0. - +(1.998 * +(cosf(+(1231.44 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i74 = 0; (((i74 | 0) < 3) | 0); i74 = (((i74 | 0) + 1) | 0)) {HEAPF32[dsp + 2883756 + ((i74 | 0) << 2) >> 2] = 0.;}for (i75 = 0; (((i75 | 0) < 2) | 0); i75 = (((i75 | 0) + 1) | 0)) {HEAPF32[dsp + 2884496 + ((i75 | 0) << 2) >> 2] = 0.;}for (i76 = 0; (((i76 | 0) < 2) | 0); i76 = (((i76 | 0) + 1) | 0)) {HEAPF32[dsp + 2884504 + ((i76 | 0) << 2) >> 2] = 0.;}for (i77 = 0; (((i77 | 0) < 2) | 0); i77 = (((i77 | 0) + 1) | 0)) {HEAPF32[dsp + 2884512 + ((i77 | 0) << 2) >> 2] = 0.;}for (i78 = 0; (((i78 | 0) < 2) | 0); i78 = (((i78 | 0) + 1) | 0)) {HEAP32[dsp + 2884520 + ((i78 | 0) << 2) >> 2] = 0;}for (i79 = 0; (((i79 | 0) < 2) | 0); i79 = (((i79 | 0) + 1) | 0)) {HEAPF32[dsp + 2884528 + ((i79 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885476 >> 2] = +(tanf(+(4925.77 / +((HEAP32[dsp + 2885292 >> 2] | 0)))));HEAPF32[dsp + 2885480 >> 2] = +(1. / +(HEAPF32[dsp + 2885476 >> 2]));HEAPF32[dsp + 2885484 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885480 >> 2])) / +(HEAPF32[dsp + 2885476 >> 2]))));HEAPF32[dsp + 2885488 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885476 >> 2]));HEAPF32[dsp + 2885492 >> 2] = +(0. - +(HEAPF32[dsp + 2885488 >> 2]));HEAPF32[dsp + 2885496 >> 2] = +(9851.53 / +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885500 >> 2] = +(0. - +(1.998 * +(cosf(+(HEAPF32[dsp + 2885496 >> 2])))));for (i80 = 0; (((i80 | 0) < 3) | 0); i80 = (((i80 | 0) + 1) | 0)) {HEAPF32[dsp + 2883768 + ((i80 | 0) << 2) >> 2] = 0.;}for (i81 = 0; (((i81 | 0) < 2) | 0); i81 = (((i81 | 0) + 1) | 0)) {HEAPF32[dsp + 2884536 + ((i81 | 0) << 2) >> 2] = 0.;}for (i82 = 0; (((i82 | 0) < 2) | 0); i82 = (((i82 | 0) + 1) | 0)) {HEAPF32[dsp + 2884544 + ((i82 | 0) << 2) >> 2] = 0.;}for (i83 = 0; (((i83 | 0) < 2) | 0); i83 = (((i83 | 0) + 1) | 0)) {HEAPF32[dsp + 2884552 + ((i83 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885504 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885480 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885476 >> 2])));HEAPF32[dsp + 2885508 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885476 >> 2]))))));for (i84 = 0; (((i84 | 0) < 3) | 0); i84 = (((i84 | 0) + 1) | 0)) {HEAPF32[dsp + 2883780 + ((i84 | 0) << 2) >> 2] = 0.;}for (i85 = 0; (((i85 | 0) < 65536) | 0); i85 = (((i85 | 0) + 1) | 0)) {HEAPF32[dsp + 1048576 + ((i85 | 0) << 2) >> 2] = 0.;}for (i86 = 0; (((i86 | 0) < 2) | 0); i86 = (((i86 | 0) + 1) | 0)) {HEAP32[dsp + 2884560 + ((i86 | 0) << 2) >> 2] = 0;}for (i87 = 0; (((i87 | 0) < 2) | 0); i87 = (((i87 | 0) + 1) | 0)) {HEAPF32[dsp + 2884568 + ((i87 | 0) << 2) >> 2] = 0.;}for (i88 = 0; (((i88 | 0) < 2) | 0); i88 = (((i88 | 0) + 1) | 0)) {HEAP32[dsp + 2884576 + ((i88 | 0) << 2) >> 2] = 0;}for (i89 = 0; (((i89 | 0) < 2) | 0); i89 = (((i89 | 0) + 1) | 0)) {HEAPF32[dsp + 2884584 + ((i89 | 0) << 2) >> 2] = 0.;}for (i90 = 0; (((i90 | 0) < 2) | 0); i90 = (((i90 | 0) + 1) | 0)) {HEAP32[dsp + 2884592 + ((i90 | 0) << 2) >> 2] = 0;}for (i91 = 0; (((i91 | 0) < 2) | 0); i91 = (((i91 | 0) + 1) | 0)) {HEAP32[dsp + 2884600 + ((i91 | 0) << 2) >> 2] = 0;}for (i92 = 0; (((i92 | 0) < 2) | 0); i92 = (((i92 | 0) + 1) | 0)) {HEAPF32[dsp + 2884608 + ((i92 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885512 >> 2] = +(0. - +(1.998 * +(cosf(+(1382.3 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i93 = 0; (((i93 | 0) < 3) | 0); i93 = (((i93 | 0) + 1) | 0)) {HEAPF32[dsp + 2883792 + ((i93 | 0) << 2) >> 2] = 0.;}for (i94 = 0; (((i94 | 0) < 2) | 0); i94 = (((i94 | 0) + 1) | 0)) {HEAPF32[dsp + 2884616 + ((i94 | 0) << 2) >> 2] = 0.;}for (i95 = 0; (((i95 | 0) < 2) | 0); i95 = (((i95 | 0) + 1) | 0)) {HEAPF32[dsp + 2884624 + ((i95 | 0) << 2) >> 2] = 0.;}for (i96 = 0; (((i96 | 0) < 2) | 0); i96 = (((i96 | 0) + 1) | 0)) {HEAPF32[dsp + 2884632 + ((i96 | 0) << 2) >> 2] = 0.;}for (i97 = 0; (((i97 | 0) < 2) | 0); i97 = (((i97 | 0) + 1) | 0)) {HEAP32[dsp + 2884640 + ((i97 | 0) << 2) >> 2] = 0;}for (i98 = 0; (((i98 | 0) < 2) | 0); i98 = (((i98 | 0) + 1) | 0)) {HEAPF32[dsp + 2884648 + ((i98 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885516 >> 2] = +(tanf(+(5529.2 / +((HEAP32[dsp + 2885292 >> 2] | 0)))));HEAPF32[dsp + 2885520 >> 2] = +(1. / +(HEAPF32[dsp + 2885516 >> 2]));HEAPF32[dsp + 2885524 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885520 >> 2])) / +(HEAPF32[dsp + 2885516 >> 2]))));HEAPF32[dsp + 2885528 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885516 >> 2]));HEAPF32[dsp + 2885532 >> 2] = +(0. - +(HEAPF32[dsp + 2885528 >> 2]));HEAPF32[dsp + 2885536 >> 2] = +(11058.4 / +((HEAP32[dsp + 2885292 >> 2] | 0)));HEAPF32[dsp + 2885540 >> 2] = +(0. - +(1.998 * +(cosf(+(HEAPF32[dsp + 2885536 >> 2])))));for (i99 = 0; (((i99 | 0) < 3) | 0); i99 = (((i99 | 0) + 1) | 0)) {HEAPF32[dsp + 2883804 + ((i99 | 0) << 2) >> 2] = 0.;}for (i100 = 0; (((i100 | 0) < 2) | 0); i100 = (((i100 | 0) + 1) | 0)) {HEAPF32[dsp + 2884656 + ((i100 | 0) << 2) >> 2] = 0.;}for (i101 = 0; (((i101 | 0) < 2) | 0); i101 = (((i101 | 0) + 1) | 0)) {HEAPF32[dsp + 2884664 + ((i101 | 0) << 2) >> 2] = 0.;}for (i102 = 0; (((i102 | 0) < 2) | 0); i102 = (((i102 | 0) + 1) | 0)) {HEAPF32[dsp + 2884672 + ((i102 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885544 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885520 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885516 >> 2])));HEAPF32[dsp + 2885548 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885516 >> 2]))))));for (i103 = 0; (((i103 | 0) < 3) | 0); i103 = (((i103 | 0) + 1) | 0)) {HEAPF32[dsp + 2883816 + ((i103 | 0) << 2) >> 2] = 0.;}for (i104 = 0; (((i104 | 0) < 65536) | 0); i104 = (((i104 | 0) + 1) | 0)) {HEAPF32[dsp + 1310720 + ((i104 | 0) << 2) >> 2] = 0.;}for (i105 = 0; (((i105 | 0) < 2) | 0); i105 = (((i105 | 0) + 1) | 0)) {HEAP32[dsp + 2884680 + ((i105 | 0) << 2) >> 2] = 0;}for (i106 = 0; (((i106 | 0) < 2) | 0); i106 = (((i106 | 0) + 1) | 0)) {HEAPF32[dsp + 2884688 + ((i106 | 0) << 2) >> 2] = 0.;}for (i107 = 0; (((i107 | 0) < 2) | 0); i107 = (((i107 | 0) + 1) | 0)) {HEAP32[dsp + 2884696 + ((i107 | 0) << 2) >> 2] = 0;}for (i108 = 0; (((i108 | 0) < 2) | 0); i108 = (((i108 | 0) + 1) | 0)) {HEAPF32[dsp + 2884704 + ((i108 | 0) << 2) >> 2] = 0.;}for (i109 = 0; (((i109 | 0) < 2) | 0); i109 = (((i109 | 0) + 1) | 0)) {HEAP32[dsp + 2884712 + ((i109 | 0) << 2) >> 2] = 0;}for (i110 = 0; (((i110 | 0) < 2) | 0); i110 = (((i110 | 0) + 1) | 0)) {HEAP32[dsp + 2884720 + ((i110 | 0) << 2) >> 2] = 0;}for (i111 = 0; (((i111 | 0) < 2) | 0); i111 = (((i111 | 0) + 1) | 0)) {HEAPF32[dsp + 2884728 + ((i111 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885552 >> 2] = +(0. - +(1.998 * +(cosf(+(1643.81 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i112 = 0; (((i112 | 0) < 3) | 0); i112 = (((i112 | 0) + 1) | 0)) {HEAPF32[dsp + 2883828 + ((i112 | 0) << 2) >> 2] = 0.;}for (i113 = 0; (((i113 | 0) < 2) | 0); i113 = (((i113 | 0) + 1) | 0)) {HEAPF32[dsp + 2884736 + ((i113 | 0) << 2) >> 2] = 0.;}for (i114 = 0; (((i114 | 0) < 2) | 0); i114 = (((i114 | 0) + 1) | 0)) {HEAPF32[dsp + 2884744 + ((i114 | 0) << 2) >> 2] = 0.;}for (i115 = 0; (((i115 | 0) < 2) | 0); i115 = (((i115 | 0) + 1) | 0)) {HEAPF32[dsp + 2884752 + ((i115 | 0) << 2) >> 2] = 0.;}for (i116 = 0; (((i116 | 0) < 2) | 0); i116 = (((i116 | 0) + 1) | 0)) {HEAP32[dsp + 2884760 + ((i116 | 0) << 2) >> 2] = 0;}for (i117 = 0; (((i117 | 0) < 2) | 0); i117 = (((i117 | 0) + 1) | 0)) {HEAPF32[dsp + 2884768 + ((i117 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885556 >> 2] = +(tanf(+(HEAPF32[dsp + 2885376 >> 2])));HEAPF32[dsp + 2885560 >> 2] = +(1. / +(HEAPF32[dsp + 2885556 >> 2]));HEAPF32[dsp + 2885564 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885560 >> 2])) / +(HEAPF32[dsp + 2885556 >> 2]))));HEAPF32[dsp + 2885568 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885556 >> 2]));HEAPF32[dsp + 2885572 >> 2] = +(0. - +(HEAPF32[dsp + 2885568 >> 2]));HEAPF32[dsp + 2885576 >> 2] = +(0. - +(1.998 * +(cosf(+(13150.5 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i118 = 0; (((i118 | 0) < 3) | 0); i118 = (((i118 | 0) + 1) | 0)) {HEAPF32[dsp + 2883840 + ((i118 | 0) << 2) >> 2] = 0.;}for (i119 = 0; (((i119 | 0) < 2) | 0); i119 = (((i119 | 0) + 1) | 0)) {HEAPF32[dsp + 2884776 + ((i119 | 0) << 2) >> 2] = 0.;}for (i120 = 0; (((i120 | 0) < 2) | 0); i120 = (((i120 | 0) + 1) | 0)) {HEAPF32[dsp + 2884784 + ((i120 | 0) << 2) >> 2] = 0.;}for (i121 = 0; (((i121 | 0) < 2) | 0); i121 = (((i121 | 0) + 1) | 0)) {HEAPF32[dsp + 2884792 + ((i121 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885580 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885560 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885556 >> 2])));HEAPF32[dsp + 2885584 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885556 >> 2]))))));for (i122 = 0; (((i122 | 0) < 3) | 0); i122 = (((i122 | 0) + 1) | 0)) {HEAPF32[dsp + 2883852 + ((i122 | 0) << 2) >> 2] = 0.;}for (i123 = 0; (((i123 | 0) < 65536) | 0); i123 = (((i123 | 0) + 1) | 0)) {HEAPF32[dsp + 1572864 + ((i123 | 0) << 2) >> 2] = 0.;}for (i124 = 0; (((i124 | 0) < 2) | 0); i124 = (((i124 | 0) + 1) | 0)) {HEAP32[dsp + 2884800 + ((i124 | 0) << 2) >> 2] = 0;}for (i125 = 0; (((i125 | 0) < 2) | 0); i125 = (((i125 | 0) + 1) | 0)) {HEAPF32[dsp + 2884808 + ((i125 | 0) << 2) >> 2] = 0.;}for (i126 = 0; (((i126 | 0) < 2) | 0); i126 = (((i126 | 0) + 1) | 0)) {HEAP32[dsp + 2884816 + ((i126 | 0) << 2) >> 2] = 0;}for (i127 = 0; (((i127 | 0) < 2) | 0); i127 = (((i127 | 0) + 1) | 0)) {HEAPF32[dsp + 2884824 + ((i127 | 0) << 2) >> 2] = 0.;}for (i128 = 0; (((i128 | 0) < 2) | 0); i128 = (((i128 | 0) + 1) | 0)) {HEAP32[dsp + 2884832 + ((i128 | 0) << 2) >> 2] = 0;}for (i129 = 0; (((i129 | 0) < 2) | 0); i129 = (((i129 | 0) + 1) | 0)) {HEAP32[dsp + 2884840 + ((i129 | 0) << 2) >> 2] = 0;}for (i130 = 0; (((i130 | 0) < 2) | 0); i130 = (((i130 | 0) + 1) | 0)) {HEAPF32[dsp + 2884848 + ((i130 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885588 >> 2] = +(0. - +(1.998 * +(cosf(+(1845.12 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i131 = 0; (((i131 | 0) < 3) | 0); i131 = (((i131 | 0) + 1) | 0)) {HEAPF32[dsp + 2883864 + ((i131 | 0) << 2) >> 2] = 0.;}for (i132 = 0; (((i132 | 0) < 2) | 0); i132 = (((i132 | 0) + 1) | 0)) {HEAPF32[dsp + 2884856 + ((i132 | 0) << 2) >> 2] = 0.;}for (i133 = 0; (((i133 | 0) < 2) | 0); i133 = (((i133 | 0) + 1) | 0)) {HEAPF32[dsp + 2884864 + ((i133 | 0) << 2) >> 2] = 0.;}for (i134 = 0; (((i134 | 0) < 2) | 0); i134 = (((i134 | 0) + 1) | 0)) {HEAPF32[dsp + 2884872 + ((i134 | 0) << 2) >> 2] = 0.;}for (i135 = 0; (((i135 | 0) < 2) | 0); i135 = (((i135 | 0) + 1) | 0)) {HEAP32[dsp + 2884880 + ((i135 | 0) << 2) >> 2] = 0;}for (i136 = 0; (((i136 | 0) < 2) | 0); i136 = (((i136 | 0) + 1) | 0)) {HEAPF32[dsp + 2884888 + ((i136 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885592 >> 2] = +(tanf(+(HEAPF32[dsp + 2885416 >> 2])));HEAPF32[dsp + 2885596 >> 2] = +(1. / +(HEAPF32[dsp + 2885592 >> 2]));HEAPF32[dsp + 2885600 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885596 >> 2])) / +(HEAPF32[dsp + 2885592 >> 2]))));HEAPF32[dsp + 2885604 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885592 >> 2]));HEAPF32[dsp + 2885608 >> 2] = +(0. - +(HEAPF32[dsp + 2885604 >> 2]));HEAPF32[dsp + 2885612 >> 2] = +(0. - +(1.998 * +(cosf(+(14761. / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i137 = 0; (((i137 | 0) < 3) | 0); i137 = (((i137 | 0) + 1) | 0)) {HEAPF32[dsp + 2883876 + ((i137 | 0) << 2) >> 2] = 0.;}for (i138 = 0; (((i138 | 0) < 2) | 0); i138 = (((i138 | 0) + 1) | 0)) {HEAPF32[dsp + 2884896 + ((i138 | 0) << 2) >> 2] = 0.;}for (i139 = 0; (((i139 | 0) < 2) | 0); i139 = (((i139 | 0) + 1) | 0)) {HEAPF32[dsp + 2884904 + ((i139 | 0) << 2) >> 2] = 0.;}for (i140 = 0; (((i140 | 0) < 2) | 0); i140 = (((i140 | 0) + 1) | 0)) {HEAPF32[dsp + 2884912 + ((i140 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885616 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885596 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885592 >> 2])));HEAPF32[dsp + 2885620 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885592 >> 2]))))));for (i141 = 0; (((i141 | 0) < 3) | 0); i141 = (((i141 | 0) + 1) | 0)) {HEAPF32[dsp + 2883888 + ((i141 | 0) << 2) >> 2] = 0.;}for (i142 = 0; (((i142 | 0) < 65536) | 0); i142 = (((i142 | 0) + 1) | 0)) {HEAPF32[dsp + 1835008 + ((i142 | 0) << 2) >> 2] = 0.;}for (i143 = 0; (((i143 | 0) < 2) | 0); i143 = (((i143 | 0) + 1) | 0)) {HEAP32[dsp + 2884920 + ((i143 | 0) << 2) >> 2] = 0;}for (i144 = 0; (((i144 | 0) < 2) | 0); i144 = (((i144 | 0) + 1) | 0)) {HEAPF32[dsp + 2884928 + ((i144 | 0) << 2) >> 2] = 0.;}for (i145 = 0; (((i145 | 0) < 2) | 0); i145 = (((i145 | 0) + 1) | 0)) {HEAP32[dsp + 2884936 + ((i145 | 0) << 2) >> 2] = 0;}for (i146 = 0; (((i146 | 0) < 2) | 0); i146 = (((i146 | 0) + 1) | 0)) {HEAPF32[dsp + 2884944 + ((i146 | 0) << 2) >> 2] = 0.;}for (i147 = 0; (((i147 | 0) < 2) | 0); i147 = (((i147 | 0) + 1) | 0)) {HEAP32[dsp + 2884952 + ((i147 | 0) << 2) >> 2] = 0;}for (i148 = 0; (((i148 | 0) < 2) | 0); i148 = (((i148 | 0) + 1) | 0)) {HEAP32[dsp + 2884960 + ((i148 | 0) << 2) >> 2] = 0;}for (i149 = 0; (((i149 | 0) < 2) | 0); i149 = (((i149 | 0) + 1) | 0)) {HEAPF32[dsp + 2884968 + ((i149 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885624 >> 2] = +(0. - +(1.998 * +(cosf(+(2071.06 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i150 = 0; (((i150 | 0) < 3) | 0); i150 = (((i150 | 0) + 1) | 0)) {HEAPF32[dsp + 2883900 + ((i150 | 0) << 2) >> 2] = 0.;}for (i151 = 0; (((i151 | 0) < 2) | 0); i151 = (((i151 | 0) + 1) | 0)) {HEAPF32[dsp + 2884976 + ((i151 | 0) << 2) >> 2] = 0.;}for (i152 = 0; (((i152 | 0) < 2) | 0); i152 = (((i152 | 0) + 1) | 0)) {HEAPF32[dsp + 2884984 + ((i152 | 0) << 2) >> 2] = 0.;}for (i153 = 0; (((i153 | 0) < 2) | 0); i153 = (((i153 | 0) + 1) | 0)) {HEAPF32[dsp + 2884992 + ((i153 | 0) << 2) >> 2] = 0.;}for (i154 = 0; (((i154 | 0) < 2) | 0); i154 = (((i154 | 0) + 1) | 0)) {HEAP32[dsp + 2885000 + ((i154 | 0) << 2) >> 2] = 0;}for (i155 = 0; (((i155 | 0) < 2) | 0); i155 = (((i155 | 0) + 1) | 0)) {HEAPF32[dsp + 2885008 + ((i155 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885628 >> 2] = +(tanf(+(HEAPF32[dsp + 2885456 >> 2])));HEAPF32[dsp + 2885632 >> 2] = +(1. / +(HEAPF32[dsp + 2885628 >> 2]));HEAPF32[dsp + 2885636 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885632 >> 2])) / +(HEAPF32[dsp + 2885628 >> 2]))));HEAPF32[dsp + 2885640 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885628 >> 2]));HEAPF32[dsp + 2885644 >> 2] = +(0. - +(HEAPF32[dsp + 2885640 >> 2]));HEAPF32[dsp + 2885648 >> 2] = +(0. - +(1.998 * +(cosf(+(16568.5 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i156 = 0; (((i156 | 0) < 3) | 0); i156 = (((i156 | 0) + 1) | 0)) {HEAPF32[dsp + 2883912 + ((i156 | 0) << 2) >> 2] = 0.;}for (i157 = 0; (((i157 | 0) < 2) | 0); i157 = (((i157 | 0) + 1) | 0)) {HEAPF32[dsp + 2885016 + ((i157 | 0) << 2) >> 2] = 0.;}for (i158 = 0; (((i158 | 0) < 2) | 0); i158 = (((i158 | 0) + 1) | 0)) {HEAPF32[dsp + 2885024 + ((i158 | 0) << 2) >> 2] = 0.;}for (i159 = 0; (((i159 | 0) < 2) | 0); i159 = (((i159 | 0) + 1) | 0)) {HEAPF32[dsp + 2885032 + ((i159 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885652 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885632 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885628 >> 2])));HEAPF32[dsp + 2885656 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885628 >> 2]))))));for (i160 = 0; (((i160 | 0) < 3) | 0); i160 = (((i160 | 0) + 1) | 0)) {HEAPF32[dsp + 2883924 + ((i160 | 0) << 2) >> 2] = 0.;}for (i161 = 0; (((i161 | 0) < 65536) | 0); i161 = (((i161 | 0) + 1) | 0)) {HEAPF32[dsp + 2097152 + ((i161 | 0) << 2) >> 2] = 0.;}for (i162 = 0; (((i162 | 0) < 2) | 0); i162 = (((i162 | 0) + 1) | 0)) {HEAP32[dsp + 2885040 + ((i162 | 0) << 2) >> 2] = 0;}for (i163 = 0; (((i163 | 0) < 2) | 0); i163 = (((i163 | 0) + 1) | 0)) {HEAPF32[dsp + 2885048 + ((i163 | 0) << 2) >> 2] = 0.;}for (i164 = 0; (((i164 | 0) < 2) | 0); i164 = (((i164 | 0) + 1) | 0)) {HEAP32[dsp + 2885056 + ((i164 | 0) << 2) >> 2] = 0;}for (i165 = 0; (((i165 | 0) < 2) | 0); i165 = (((i165 | 0) + 1) | 0)) {HEAPF32[dsp + 2885064 + ((i165 | 0) << 2) >> 2] = 0.;}for (i166 = 0; (((i166 | 0) < 2) | 0); i166 = (((i166 | 0) + 1) | 0)) {HEAP32[dsp + 2885072 + ((i166 | 0) << 2) >> 2] = 0;}for (i167 = 0; (((i167 | 0) < 2) | 0); i167 = (((i167 | 0) + 1) | 0)) {HEAP32[dsp + 2885080 + ((i167 | 0) << 2) >> 2] = 0;}for (i168 = 0; (((i168 | 0) < 2) | 0); i168 = (((i168 | 0) + 1) | 0)) {HEAPF32[dsp + 2885088 + ((i168 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885660 >> 2] = +(0. - +(1.998 * +(cosf(+(2462.88 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i169 = 0; (((i169 | 0) < 3) | 0); i169 = (((i169 | 0) + 1) | 0)) {HEAPF32[dsp + 2883936 + ((i169 | 0) << 2) >> 2] = 0.;}for (i170 = 0; (((i170 | 0) < 2) | 0); i170 = (((i170 | 0) + 1) | 0)) {HEAPF32[dsp + 2885096 + ((i170 | 0) << 2) >> 2] = 0.;}for (i171 = 0; (((i171 | 0) < 2) | 0); i171 = (((i171 | 0) + 1) | 0)) {HEAPF32[dsp + 2885104 + ((i171 | 0) << 2) >> 2] = 0.;}for (i172 = 0; (((i172 | 0) < 2) | 0); i172 = (((i172 | 0) + 1) | 0)) {HEAPF32[dsp + 2885112 + ((i172 | 0) << 2) >> 2] = 0.;}for (i173 = 0; (((i173 | 0) < 2) | 0); i173 = (((i173 | 0) + 1) | 0)) {HEAP32[dsp + 2885120 + ((i173 | 0) << 2) >> 2] = 0;}for (i174 = 0; (((i174 | 0) < 2) | 0); i174 = (((i174 | 0) + 1) | 0)) {HEAPF32[dsp + 2885128 + ((i174 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885664 >> 2] = +(tanf(+(HEAPF32[dsp + 2885496 >> 2])));HEAPF32[dsp + 2885668 >> 2] = +(1. / +(HEAPF32[dsp + 2885664 >> 2]));HEAPF32[dsp + 2885672 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885668 >> 2])) / +(HEAPF32[dsp + 2885664 >> 2]))));HEAPF32[dsp + 2885676 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885664 >> 2]));HEAPF32[dsp + 2885680 >> 2] = +(0. - +(HEAPF32[dsp + 2885676 >> 2]));HEAPF32[dsp + 2885684 >> 2] = +(0. - +(1.998 * +(cosf(+(19703.1 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i175 = 0; (((i175 | 0) < 3) | 0); i175 = (((i175 | 0) + 1) | 0)) {HEAPF32[dsp + 2883948 + ((i175 | 0) << 2) >> 2] = 0.;}for (i176 = 0; (((i176 | 0) < 2) | 0); i176 = (((i176 | 0) + 1) | 0)) {HEAPF32[dsp + 2885136 + ((i176 | 0) << 2) >> 2] = 0.;}for (i177 = 0; (((i177 | 0) < 2) | 0); i177 = (((i177 | 0) + 1) | 0)) {HEAPF32[dsp + 2885144 + ((i177 | 0) << 2) >> 2] = 0.;}for (i178 = 0; (((i178 | 0) < 2) | 0); i178 = (((i178 | 0) + 1) | 0)) {HEAPF32[dsp + 2885152 + ((i178 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885688 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885668 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885664 >> 2])));HEAPF32[dsp + 2885692 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885664 >> 2]))))));for (i179 = 0; (((i179 | 0) < 3) | 0); i179 = (((i179 | 0) + 1) | 0)) {HEAPF32[dsp + 2883960 + ((i179 | 0) << 2) >> 2] = 0.;}for (i180 = 0; (((i180 | 0) < 65536) | 0); i180 = (((i180 | 0) + 1) | 0)) {HEAPF32[dsp + 2359296 + ((i180 | 0) << 2) >> 2] = 0.;}for (i181 = 0; (((i181 | 0) < 2) | 0); i181 = (((i181 | 0) + 1) | 0)) {HEAP32[dsp + 2885160 + ((i181 | 0) << 2) >> 2] = 0;}for (i182 = 0; (((i182 | 0) < 2) | 0); i182 = (((i182 | 0) + 1) | 0)) {HEAPF32[dsp + 2885168 + ((i182 | 0) << 2) >> 2] = 0.;}for (i183 = 0; (((i183 | 0) < 2) | 0); i183 = (((i183 | 0) + 1) | 0)) {HEAP32[dsp + 2885176 + ((i183 | 0) << 2) >> 2] = 0;}for (i184 = 0; (((i184 | 0) < 2) | 0); i184 = (((i184 | 0) + 1) | 0)) {HEAPF32[dsp + 2885184 + ((i184 | 0) << 2) >> 2] = 0.;}for (i185 = 0; (((i185 | 0) < 2) | 0); i185 = (((i185 | 0) + 1) | 0)) {HEAP32[dsp + 2885192 + ((i185 | 0) << 2) >> 2] = 0;}for (i186 = 0; (((i186 | 0) < 2) | 0); i186 = (((i186 | 0) + 1) | 0)) {HEAP32[dsp + 2885200 + ((i186 | 0) << 2) >> 2] = 0;}for (i187 = 0; (((i187 | 0) < 2) | 0); i187 = (((i187 | 0) + 1) | 0)) {HEAPF32[dsp + 2885208 + ((i187 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885696 >> 2] = +(0. - +(1.998 * +(cosf(+(2764.6 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i188 = 0; (((i188 | 0) < 3) | 0); i188 = (((i188 | 0) + 1) | 0)) {HEAPF32[dsp + 2883972 + ((i188 | 0) << 2) >> 2] = 0.;}for (i189 = 0; (((i189 | 0) < 2) | 0); i189 = (((i189 | 0) + 1) | 0)) {HEAPF32[dsp + 2885216 + ((i189 | 0) << 2) >> 2] = 0.;}for (i190 = 0; (((i190 | 0) < 2) | 0); i190 = (((i190 | 0) + 1) | 0)) {HEAPF32[dsp + 2885224 + ((i190 | 0) << 2) >> 2] = 0.;}for (i191 = 0; (((i191 | 0) < 2) | 0); i191 = (((i191 | 0) + 1) | 0)) {HEAPF32[dsp + 2885232 + ((i191 | 0) << 2) >> 2] = 0.;}for (i192 = 0; (((i192 | 0) < 2) | 0); i192 = (((i192 | 0) + 1) | 0)) {HEAP32[dsp + 2885240 + ((i192 | 0) << 2) >> 2] = 0;}for (i193 = 0; (((i193 | 0) < 2) | 0); i193 = (((i193 | 0) + 1) | 0)) {HEAPF32[dsp + 2885248 + ((i193 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885700 >> 2] = +(tanf(+(HEAPF32[dsp + 2885536 >> 2])));HEAPF32[dsp + 2885704 >> 2] = +(1. / +(HEAPF32[dsp + 2885700 >> 2]));HEAPF32[dsp + 2885708 >> 2] = +(1. / +(1. + +(+(0.0666667 + +(HEAPF32[dsp + 2885704 >> 2])) / +(HEAPF32[dsp + 2885700 >> 2]))));HEAPF32[dsp + 2885712 >> 2] = +(0.5 / +(HEAPF32[dsp + 2885700 >> 2]));HEAPF32[dsp + 2885716 >> 2] = +(0. - +(HEAPF32[dsp + 2885712 >> 2]));HEAPF32[dsp + 2885720 >> 2] = +(0. - +(1.998 * +(cosf(+(22116.8 / +((HEAP32[dsp + 2885292 >> 2] | 0)))))));for (i194 = 0; (((i194 | 0) < 3) | 0); i194 = (((i194 | 0) + 1) | 0)) {HEAPF32[dsp + 2883984 + ((i194 | 0) << 2) >> 2] = 0.;}for (i195 = 0; (((i195 | 0) < 2) | 0); i195 = (((i195 | 0) + 1) | 0)) {HEAPF32[dsp + 2885256 + ((i195 | 0) << 2) >> 2] = 0.;}for (i196 = 0; (((i196 | 0) < 2) | 0); i196 = (((i196 | 0) + 1) | 0)) {HEAPF32[dsp + 2885264 + ((i196 | 0) << 2) >> 2] = 0.;}for (i197 = 0; (((i197 | 0) < 2) | 0); i197 = (((i197 | 0) + 1) | 0)) {HEAPF32[dsp + 2885272 + ((i197 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 2885724 >> 2] = +(1. + +(+(+(HEAPF32[dsp + 2885704 >> 2]) - 0.0666667) / +(HEAPF32[dsp + 2885700 >> 2])));HEAPF32[dsp + 2885728 >> 2] = +(2. * +(1. - +(1. / +(faustpower2_f(+(HEAPF32[dsp + 2885700 >> 2]))))));for (i198 = 0; (((i198 | 0) < 3) | 0); i198 = (((i198 | 0) + 1) | 0)) {HEAPF32[dsp + 2883996 + ((i198 | 0) << 2) >> 2] = 0.;}for (i199 = 0; (((i199 | 0) < 65536) | 0); i199 = (((i199 | 0) + 1) | 0)) {HEAPF32[dsp + 2621440 + ((i199 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var output0 = 0;var iSlow0 = 0;var iSlow1 = 0;var fSlow2 = 0.;var fSlow3 = 0.;var i = 0;var iTemp0 = 0;var iSel0 = 0;var iTemp1 = 0;var iTemp2 = 0;var iTemp3 = 0;var iTemp4 = 0;var iTemp5 = 0;var iTemp6 = 0;var fTemp7 = 0.;var fTemp8 = 0.;var fTemp9 = 0.;var fTemp10 = 0.;var fTemp11 = 0.;var fTemp12 = 0.;var fTemp13 = 0.;var iTemp14 = 0;var iTemp15 = 0;var iTemp16 = 0;var iTemp17 = 0;var iTemp18 = 0;var iTemp19 = 0;var iTemp20 = 0;var fTemp21 = 0.;var fTemp22 = 0.;var fTemp23 = 0.;var fTemp24 = 0.;var fTemp25 = 0.;var iTemp26 = 0;var fTemp27 = 0.;var fTemp28 = 0.;var fTemp29 = 0.;var fTemp30 = 0.;var fTemp31 = 0.;var fTemp32 = 0.;var fTemp33 = 0.;var fTemp34 = 0.;var fTemp35 = 0.;var iTemp36 = 0;var iTemp37 = 0;var iTemp38 = 0;var iTemp39 = 0;var iTemp40 = 0;var iTemp41 = 0;var fTemp42 = 0.;var fTemp43 = 0.;var fTemp44 = 0.;var fTemp45 = 0.;var fTemp46 = 0.;var iTemp47 = 0;var fTemp48 = 0.;var fTemp49 = 0.;var fTemp50 = 0.;var fTemp51 = 0.;var iTemp52 = 0;var iTemp53 = 0;var iTemp54 = 0;var iTemp55 = 0;var iTemp56 = 0;var iTemp57 = 0;var fTemp58 = 0.;var fTemp59 = 0.;var fTemp60 = 0.;var fTemp61 = 0.;var fTemp62 = 0.;var iTemp63 = 0;var fTemp64 = 0.;var fTemp65 = 0.;var fTemp66 = 0.;var fTemp67 = 0.;var iTemp68 = 0;var iTemp69 = 0;var iTemp70 = 0;var iTemp71 = 0;var iTemp72 = 0;var iTemp73 = 0;var fTemp74 = 0.;var fTemp75 = 0.;var fTemp76 = 0.;var fTemp77 = 0.;var fTemp78 = 0.;var iTemp79 = 0;var fTemp80 = 0.;var fTemp81 = 0.;var fTemp82 = 0.;var fTemp83 = 0.;var iTemp84 = 0;var iTemp85 = 0;var iTemp86 = 0;var iTemp87 = 0;var iTemp88 = 0;var iTemp89 = 0;var fTemp90 = 0.;var fTemp91 = 0.;var fTemp92 = 0.;var fTemp93 = 0.;var fTemp94 = 0.;var iTemp95 = 0;var fTemp96 = 0.;var fTemp97 = 0.;var fTemp98 = 0.;var fTemp99 = 0.;var iTemp100 = 0;var iTemp101 = 0;var iTemp102 = 0;var iTemp103 = 0;var iTemp104 = 0;var iTemp105 = 0;var fTemp106 = 0.;var fTemp107 = 0.;var fTemp108 = 0.;var fTemp109 = 0.;var fTemp110 = 0.;var iTemp111 = 0;var fTemp112 = 0.;var fTemp113 = 0.;var fTemp114 = 0.;var fTemp115 = 0.;var iTemp116 = 0;var iTemp117 = 0;var iTemp118 = 0;var iTemp119 = 0;var iTemp120 = 0;var iTemp121 = 0;var fTemp122 = 0.;var fTemp123 = 0.;var fTemp124 = 0.;var fTemp125 = 0.;var fTemp126 = 0.;var iTemp127 = 0;var fTemp128 = 0.;var fTemp129 = 0.;var fTemp130 = 0.;var fTemp131 = 0.;var iTemp132 = 0;var iTemp133 = 0;var iTemp134 = 0;var iTemp135 = 0;var iTemp136 = 0;var iTemp137 = 0;var fTemp138 = 0.;var fTemp139 = 0.;var fTemp140 = 0.;var fTemp141 = 0.;var fTemp142 = 0.;var iTemp143 = 0;var fTemp144 = 0.;var fTemp145 = 0.;var fTemp146 = 0.;var fTemp147 = 0.;var iTemp148 = 0;var iTemp149 = 0;var iTemp150 = 0;var iTemp151 = 0;var iTemp152 = 0;var iTemp153 = 0;var fTemp154 = 0.;var fTemp155 = 0.;var fTemp156 = 0.;var fTemp157 = 0.;var fTemp158 = 0.;var iTemp159 = 0;var fTemp160 = 0.;var fTemp161 = 0.;var fTemp162 = 0.;var fTemp163 = 0.;output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);iSlow0 = ~~(+(+(HEAPF32[dsp + 2885300 >> 2])));iSlow1 = ((+((iSlow0 | 0)) <= 0.) | 0);fSlow2 = +(0.001 * +(faustpower2_f(+(+(HEAPF32[dsp + 2885348 >> 2])))));fSlow3 = +(0.001 * +(+(HEAPF32[dsp + 2885352 >> 2])));for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAP32[dsp + 2884008 + (0 << 2) >> 2] = ((((1 + (HEAP32[dsp + 2884008 + (1 << 2) >> 2] | 0)) | 0) % (HEAP32[dsp + 2885296 >> 2] | 0)) | 0);iTemp0 = (((HEAP32[dsp + 2884008 + (0 << 2) >> 2] | 0) == 0) | 0);HEAP32[dsp + 2884016 + (0 << 2) >> 2] = (iTemp0 | 0);HEAP32[dsp + 2884024 + (0 << 2) >> 2] = (iSlow0 | 0);iSel0 = 0;if (((HEAP32[dsp + 2884016 + (1 << 2) >> 2] | 0) != 0) | 0) {iSel0 = 0;} else {iSel0 = (((HEAP32[dsp + 2884032 + (1 << 2) >> 2] | 0) + ((abs((((iSlow0 | 0) - (HEAP32[dsp + 2884024 + (1 << 2) >> 2] | 0)) | 0))) | 0)) | 0);}HEAP32[dsp + 2884032 + (0 << 2) >> 2] = (iSel0 | 0);HEAP32[dsp + 2884040 + (0 << 2) >> 2] = (((((iTemp0 | 0) + (HEAP32[dsp + 2884040 + (1 << 2) >> 2] | 0)) | 0) % 15) | 0);HEAPF32[dsp + 2883584 + ((((((iTemp0 | 0) & (((((HEAP32[dsp + 2884032 + (0 << 2) >> 2] | 0) > 0) | 0) | (iSlow1 | 0)) | 0)) | 0)?(HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0):15) | 0) << 2) >> 2] = +((iSlow0 | 0));iTemp1 = ((+(fabsf(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]))) < 0.5) | 0);HEAP32[dsp + 2884048 + (0 << 2) >> 2] = (iTemp1 | 0);HEAPF32[dsp + 2884056 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884056 + (1 << 2) >> 2]) + +((((((iTemp1 | 0) - (HEAP32[dsp + 2884048 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2884056 + (1 << 2) >> 2]) > 0.) | 0))));iTemp2 = ((+(HEAPF32[dsp + 2884056 + (0 << 2) >> 2]) > 0.) | 0);iTemp3 = (((iTemp2 | 0) > 0) | 0);HEAP32[dsp + 2884064 + (0 << 2) >> 2] = (((iTemp3 | 0) & (((HEAP32[dsp + 2884064 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884072 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp4 = (((iTemp2 | 0) <= 0) | 0);iTemp5 = (((iTemp4 | 0) & ((+(HEAPF32[dsp + 2884072 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884072 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2884064 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp3 | 0)) | 0) & ((+(HEAPF32[dsp + 2884072 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884072 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884064 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884072 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp5 | 0)))))) * +((((((iTemp5 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884072 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2884080 + (0 << 2) >> 2] = (((iTemp3 | 0) & (((HEAP32[dsp + 2884080 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884096 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2884088 + (0 << 2) >> 2] = (imul((iTemp3 | 0), ((1 + (HEAP32[dsp + 2884088 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp6 = (((iTemp4 | 0) & ((+(HEAPF32[dsp + 2884096 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884096 + (0 << 2) >> 2] = +(+((((((iTemp6 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884096 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2884080 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp3 | 0)) | 0) & ((+(HEAPF32[dsp + 2884096 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2884088 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2884088 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884096 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp6 | 0)))))));fTemp7 = +(+(HEAPF32[dsp + 2885328 >> 2]) + +(HEAPF32[dsp + 2884104 + (1 << 2) >> 2]));HEAPF32[dsp + 2884104 + (0 << 2) >> 2] = +(+(fTemp7) - +(floorf(+(fTemp7))));fTemp8 = +(faustpower2_f(+(HEAPF32[dsp + 0 + (~~(+(65536. * +(HEAPF32[dsp + 2884104 + (0 << 2) >> 2]))) << 2) >> 2])));fTemp9 = +(+(HEAPF32[dsp + 2884072 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2884096 + (0 << 2) >> 2]) * +(fTemp8))));fTemp10 = +(+(HEAPF32[dsp + 2884120 + (1 << 2) >> 2]) - +(fTemp9));fTemp11 = +(+(fTemp10) * +(+(faustpower2_f(+(fTemp10))) - 1.));fTemp12 = +(+(((+(fTemp11) > 1.) | 0)) + +(+(fTemp11) * +(((+(fTemp11) <= 1.) | 0))));HEAP32[dsp + 2884112 + (0 << 2) >> 2] = ((12345 + (imul(1103515245, (HEAP32[dsp + 2884112 + (1 << 2) >> 2] | 0)) | 0)) | 0);fTemp13 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp9));HEAPF32[dsp + 2883648 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883648 + (2 << 2) >> 2])) + +(+(+(fTemp10) * +(+(+(fTemp12) * +(((+(fTemp12) >= -1.) | 0))) - +(((+(fTemp12) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885332 >> 2]) * +(HEAPF32[dsp + 2883648 + (1 << 2) >> 2])))) - +(+(fTemp9) + +(2.32831e-10 * +(+(fTemp13) * +(+(1. + +(HEAPF32[dsp + 2884120 + (1 << 2) >> 2])) - +(fTemp9)))))));HEAPF32[dsp + 2884120 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883648 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883648 + (2 << 2) >> 2])));HEAPF32[dsp + 2884128 + (0 << 2) >> 2] = +(fTemp10);HEAPF32[dsp + 2884136 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884128 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884136 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884128 + (1 << 2) >> 2]));HEAP32[dsp + 2884144 + (0 << 2) >> 2] = (((iTemp3 | 0) & (((HEAP32[dsp + 2884144 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884152 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp14 = (((iTemp4 | 0) & ((+(HEAPF32[dsp + 2884152 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884152 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2884144 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp3 | 0)) | 0) & ((+(HEAPF32[dsp + 2884152 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884152 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884144 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884152 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp14 | 0)))))) * +((((((iTemp14 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884152 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));iTemp15 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 1.))) < 0.5) | 0);HEAP32[dsp + 2884160 + (0 << 2) >> 2] = (iTemp15 | 0);HEAPF32[dsp + 2884168 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884168 + (1 << 2) >> 2]) + +((((((iTemp15 | 0) - (HEAP32[dsp + 2884160 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2884168 + (1 << 2) >> 2]) > 0.) | 0))));iTemp16 = ((+(HEAPF32[dsp + 2884168 + (0 << 2) >> 2]) > 0.) | 0);iTemp17 = (((iTemp16 | 0) > 0) | 0);HEAP32[dsp + 2884176 + (0 << 2) >> 2] = (((iTemp17 | 0) & (((HEAP32[dsp + 2884176 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884184 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp18 = (((iTemp16 | 0) <= 0) | 0);iTemp19 = (((iTemp18 | 0) & ((+(HEAPF32[dsp + 2884184 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884184 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2884176 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp17 | 0)) | 0) & ((+(HEAPF32[dsp + 2884184 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884184 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884176 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884184 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp19 | 0)))))) * +((((((iTemp19 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884184 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2884192 + (0 << 2) >> 2] = (((iTemp17 | 0) & (((HEAP32[dsp + 2884192 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884208 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2884200 + (0 << 2) >> 2] = (imul((iTemp17 | 0), ((1 + (HEAP32[dsp + 2884200 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp20 = (((iTemp18 | 0) & ((+(HEAPF32[dsp + 2884208 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884208 + (0 << 2) >> 2] = +(+((((((iTemp20 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884208 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2884192 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp17 | 0)) | 0) & ((+(HEAPF32[dsp + 2884208 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2884200 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2884200 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884208 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp20 | 0)))))));fTemp21 = +(+(HEAPF32[dsp + 2884184 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2884208 + (0 << 2) >> 2]) * +(fTemp8))));fTemp22 = +(+(HEAPF32[dsp + 2884216 + (1 << 2) >> 2]) - +(fTemp21));fTemp23 = +(+(fTemp22) * +(+(faustpower2_f(+(fTemp22))) - 1.));fTemp24 = +(+(((+(fTemp23) > 1.) | 0)) + +(+(fTemp23) * +(((+(fTemp23) <= 1.) | 0))));fTemp25 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp21));HEAPF32[dsp + 2883660 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883660 + (2 << 2) >> 2])) + +(+(+(fTemp22) * +(+(+(fTemp24) * +(((+(fTemp24) >= -1.) | 0))) - +(((+(fTemp24) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885344 >> 2]) * +(HEAPF32[dsp + 2883660 + (1 << 2) >> 2])))) - +(+(fTemp21) + +(2.32831e-10 * +(+(fTemp25) * +(+(1. + +(HEAPF32[dsp + 2884216 + (1 << 2) >> 2])) - +(fTemp21)))))));HEAPF32[dsp + 2884216 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883660 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883660 + (2 << 2) >> 2])));HEAPF32[dsp + 2884224 + (0 << 2) >> 2] = +(fTemp22);HEAPF32[dsp + 2884232 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884224 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884232 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884224 + (1 << 2) >> 2]));HEAP32[dsp + 2884240 + (0 << 2) >> 2] = (((iTemp17 | 0) & (((HEAP32[dsp + 2884240 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884248 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp26 = (((iTemp18 | 0) & ((+(HEAPF32[dsp + 2884248 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884248 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2884240 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp17 | 0)) | 0) & ((+(HEAPF32[dsp + 2884248 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884248 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884240 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884248 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp26 | 0)))))) * +((((((iTemp26 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884248 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAPF32[dsp + 2884256 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 2884256 + (1 << 2) >> 2])) + +(fSlow2));HEAPF32[dsp + 2884264 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 2884264 + (1 << 2) >> 2])) + +(fSlow3));fTemp27 = +(max(0.2, +(min(0.98, +(HEAPF32[dsp + 2884264 + (0 << 2) >> 2])))));fTemp28 = +(+(HEAPF32[dsp + 2884272 + (1 << 2) >> 2]) - +(fTemp9));fTemp29 = +(+(fTemp28) * +(+(faustpower2_f(+(fTemp28))) - 1.));fTemp30 = +(+(((+(fTemp29) > 1.) | 0)) + +(+(fTemp29) * +(((+(fTemp29) <= 1.) | 0))));HEAPF32[dsp + 2883672 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883672 + (2 << 2) >> 2])) + +(+(+(fTemp28) * +(+(+(fTemp30) * +(((+(fTemp30) >= -1.) | 0))) - +(((+(fTemp30) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885380 >> 2]) * +(HEAPF32[dsp + 2883672 + (1 << 2) >> 2])))) - +(+(fTemp9) + +(2.32831e-10 * +(+(fTemp13) * +(+(1. + +(HEAPF32[dsp + 2884272 + (1 << 2) >> 2])) - +(fTemp9)))))));HEAPF32[dsp + 2884272 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883672 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883672 + (2 << 2) >> 2])));HEAPF32[dsp + 2884280 + (0 << 2) >> 2] = +(fTemp28);HEAPF32[dsp + 2884288 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884280 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884288 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884280 + (1 << 2) >> 2]));fTemp31 = +(0.25 * +(+(HEAPF32[dsp + 2884152 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884288 + (0 << 2) >> 2])));HEAPF32[dsp + 2883684 + (0 << 2) >> 2] = +(+(fTemp31) - +(+(HEAPF32[dsp + 2885364 >> 2]) * +(+(+(HEAPF32[dsp + 2885384 >> 2]) * +(HEAPF32[dsp + 2883684 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885388 >> 2]) * +(HEAPF32[dsp + 2883684 + (1 << 2) >> 2])))));HEAPF32[dsp + 262144 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885364 >> 2]) * +(+(+(HEAPF32[dsp + 2885372 >> 2]) * +(HEAPF32[dsp + 2883684 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885368 >> 2]) * +(HEAPF32[dsp + 2883684 + (0 << 2) >> 2])))));fTemp32 = +(+(HEAPF32[dsp + 2884296 + (1 << 2) >> 2]) - +(fTemp21));fTemp33 = +(+(fTemp32) * +(+(faustpower2_f(+(fTemp32))) - 1.));fTemp34 = +(+(((+(fTemp33) > 1.) | 0)) + +(+(fTemp33) * +(((+(fTemp33) <= 1.) | 0))));HEAPF32[dsp + 2883696 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883696 + (2 << 2) >> 2])) + +(+(+(fTemp32) * +(+(+(fTemp34) * +(((+(fTemp34) >= -1.) | 0))) - +(((+(fTemp34) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885420 >> 2]) * +(HEAPF32[dsp + 2883696 + (1 << 2) >> 2])))) - +(+(fTemp21) + +(2.32831e-10 * +(+(fTemp25) * +(+(1. + +(HEAPF32[dsp + 2884296 + (1 << 2) >> 2])) - +(fTemp21)))))));HEAPF32[dsp + 2884296 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883696 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883696 + (2 << 2) >> 2])));HEAPF32[dsp + 2884304 + (0 << 2) >> 2] = +(fTemp32);HEAPF32[dsp + 2884312 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884304 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884312 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884304 + (1 << 2) >> 2]));fTemp35 = +(0.25 * +(+(HEAPF32[dsp + 2884248 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884312 + (0 << 2) >> 2])));HEAPF32[dsp + 2883708 + (0 << 2) >> 2] = +(+(fTemp35) - +(+(HEAPF32[dsp + 2885404 >> 2]) * +(+(+(HEAPF32[dsp + 2885424 >> 2]) * +(HEAPF32[dsp + 2883708 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885428 >> 2]) * +(HEAPF32[dsp + 2883708 + (1 << 2) >> 2])))));HEAPF32[dsp + 524288 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 524288 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885404 >> 2]) * +(+(+(HEAPF32[dsp + 2885412 >> 2]) * +(HEAPF32[dsp + 2883708 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885408 >> 2]) * +(HEAPF32[dsp + 2883708 + (0 << 2) >> 2])))));iTemp36 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 2.))) < 0.5) | 0);HEAP32[dsp + 2884320 + (0 << 2) >> 2] = (iTemp36 | 0);HEAPF32[dsp + 2884328 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884328 + (1 << 2) >> 2]) + +((((((iTemp36 | 0) - (HEAP32[dsp + 2884320 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2884328 + (1 << 2) >> 2]) > 0.) | 0))));iTemp37 = ((+(HEAPF32[dsp + 2884328 + (0 << 2) >> 2]) > 0.) | 0);iTemp38 = (((iTemp37 | 0) > 0) | 0);HEAP32[dsp + 2884336 + (0 << 2) >> 2] = (((iTemp38 | 0) & (((HEAP32[dsp + 2884336 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884344 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp39 = (((iTemp37 | 0) <= 0) | 0);iTemp40 = (((iTemp39 | 0) & ((+(HEAPF32[dsp + 2884344 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884344 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2884336 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp38 | 0)) | 0) & ((+(HEAPF32[dsp + 2884344 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884344 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884336 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884344 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp40 | 0)))))) * +((((((iTemp40 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884344 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2884352 + (0 << 2) >> 2] = (((iTemp38 | 0) & (((HEAP32[dsp + 2884352 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884368 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2884360 + (0 << 2) >> 2] = (imul((iTemp38 | 0), ((1 + (HEAP32[dsp + 2884360 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp41 = (((iTemp39 | 0) & ((+(HEAPF32[dsp + 2884368 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884368 + (0 << 2) >> 2] = +(+((((((iTemp41 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884368 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2884352 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp38 | 0)) | 0) & ((+(HEAPF32[dsp + 2884368 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2884360 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2884360 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884368 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp41 | 0)))))));fTemp42 = +(+(HEAPF32[dsp + 2884344 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2884368 + (0 << 2) >> 2]) * +(fTemp8))));fTemp43 = +(+(HEAPF32[dsp + 2884376 + (1 << 2) >> 2]) - +(fTemp42));fTemp44 = +(+(fTemp43) * +(+(faustpower2_f(+(fTemp43))) - 1.));fTemp45 = +(+(((+(fTemp44) > 1.) | 0)) + +(+(fTemp44) * +(((+(fTemp44) <= 1.) | 0))));fTemp46 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp42));HEAPF32[dsp + 2883720 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883720 + (2 << 2) >> 2])) + +(+(+(fTemp43) * +(+(+(fTemp45) * +(((+(fTemp45) >= -1.) | 0))) - +(((+(fTemp45) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885432 >> 2]) * +(HEAPF32[dsp + 2883720 + (1 << 2) >> 2])))) - +(+(fTemp42) + +(2.32831e-10 * +(+(fTemp46) * +(+(1. + +(HEAPF32[dsp + 2884376 + (1 << 2) >> 2])) - +(fTemp42)))))));HEAPF32[dsp + 2884376 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883720 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883720 + (2 << 2) >> 2])));HEAPF32[dsp + 2884384 + (0 << 2) >> 2] = +(fTemp43);HEAPF32[dsp + 2884392 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884384 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884392 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884384 + (1 << 2) >> 2]));HEAP32[dsp + 2884400 + (0 << 2) >> 2] = (((iTemp38 | 0) & (((HEAP32[dsp + 2884400 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884408 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp47 = (((iTemp39 | 0) & ((+(HEAPF32[dsp + 2884408 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884408 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2884400 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp38 | 0)) | 0) & ((+(HEAPF32[dsp + 2884408 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884408 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884400 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884408 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp47 | 0)))))) * +((((((iTemp47 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884408 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));fTemp48 = +(+(HEAPF32[dsp + 2884416 + (1 << 2) >> 2]) - +(fTemp42));fTemp49 = +(+(fTemp48) * +(+(faustpower2_f(+(fTemp48))) - 1.));fTemp50 = +(+(((+(fTemp49) > 1.) | 0)) + +(+(fTemp49) * +(((+(fTemp49) <= 1.) | 0))));HEAPF32[dsp + 2883732 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883732 + (2 << 2) >> 2])) + +(+(+(fTemp48) * +(+(+(fTemp50) * +(((+(fTemp50) >= -1.) | 0))) - +(((+(fTemp50) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885460 >> 2]) * +(HEAPF32[dsp + 2883732 + (1 << 2) >> 2])))) - +(+(fTemp42) + +(2.32831e-10 * +(+(fTemp46) * +(+(1. + +(HEAPF32[dsp + 2884416 + (1 << 2) >> 2])) - +(fTemp42)))))));HEAPF32[dsp + 2884416 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883732 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883732 + (2 << 2) >> 2])));HEAPF32[dsp + 2884424 + (0 << 2) >> 2] = +(fTemp48);HEAPF32[dsp + 2884432 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884424 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884432 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884424 + (1 << 2) >> 2]));fTemp51 = +(0.25 * +(+(HEAPF32[dsp + 2884408 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884432 + (0 << 2) >> 2])));HEAPF32[dsp + 2883744 + (0 << 2) >> 2] = +(+(fTemp51) - +(+(HEAPF32[dsp + 2885444 >> 2]) * +(+(+(HEAPF32[dsp + 2885464 >> 2]) * +(HEAPF32[dsp + 2883744 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885468 >> 2]) * +(HEAPF32[dsp + 2883744 + (1 << 2) >> 2])))));HEAPF32[dsp + 786432 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 786432 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885444 >> 2]) * +(+(+(HEAPF32[dsp + 2885452 >> 2]) * +(HEAPF32[dsp + 2883744 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885448 >> 2]) * +(HEAPF32[dsp + 2883744 + (0 << 2) >> 2])))));iTemp52 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 3.))) < 0.5) | 0);HEAP32[dsp + 2884440 + (0 << 2) >> 2] = (iTemp52 | 0);HEAPF32[dsp + 2884448 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884448 + (1 << 2) >> 2]) + +((((((iTemp52 | 0) - (HEAP32[dsp + 2884440 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2884448 + (1 << 2) >> 2]) > 0.) | 0))));iTemp53 = ((+(HEAPF32[dsp + 2884448 + (0 << 2) >> 2]) > 0.) | 0);iTemp54 = (((iTemp53 | 0) > 0) | 0);HEAP32[dsp + 2884456 + (0 << 2) >> 2] = (((iTemp54 | 0) & (((HEAP32[dsp + 2884456 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884464 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp55 = (((iTemp53 | 0) <= 0) | 0);iTemp56 = (((iTemp55 | 0) & ((+(HEAPF32[dsp + 2884464 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884464 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2884456 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp54 | 0)) | 0) & ((+(HEAPF32[dsp + 2884464 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884464 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884456 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884464 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp56 | 0)))))) * +((((((iTemp56 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884464 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2884472 + (0 << 2) >> 2] = (((iTemp54 | 0) & (((HEAP32[dsp + 2884472 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884488 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2884480 + (0 << 2) >> 2] = (imul((iTemp54 | 0), ((1 + (HEAP32[dsp + 2884480 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp57 = (((iTemp55 | 0) & ((+(HEAPF32[dsp + 2884488 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884488 + (0 << 2) >> 2] = +(+((((((iTemp57 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884488 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2884472 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp54 | 0)) | 0) & ((+(HEAPF32[dsp + 2884488 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2884480 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2884480 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884488 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp57 | 0)))))));fTemp58 = +(+(HEAPF32[dsp + 2884464 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2884488 + (0 << 2) >> 2]) * +(fTemp8))));fTemp59 = +(+(HEAPF32[dsp + 2884496 + (1 << 2) >> 2]) - +(fTemp58));fTemp60 = +(+(fTemp59) * +(+(faustpower2_f(+(fTemp59))) - 1.));fTemp61 = +(+(((+(fTemp60) > 1.) | 0)) + +(+(fTemp60) * +(((+(fTemp60) <= 1.) | 0))));fTemp62 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp58));HEAPF32[dsp + 2883756 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883756 + (2 << 2) >> 2])) + +(+(+(fTemp59) * +(+(+(fTemp61) * +(((+(fTemp61) >= -1.) | 0))) - +(((+(fTemp61) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885472 >> 2]) * +(HEAPF32[dsp + 2883756 + (1 << 2) >> 2])))) - +(+(fTemp58) + +(2.32831e-10 * +(+(fTemp62) * +(+(1. + +(HEAPF32[dsp + 2884496 + (1 << 2) >> 2])) - +(fTemp58)))))));HEAPF32[dsp + 2884496 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883756 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883756 + (2 << 2) >> 2])));HEAPF32[dsp + 2884504 + (0 << 2) >> 2] = +(fTemp59);HEAPF32[dsp + 2884512 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884504 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884512 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884504 + (1 << 2) >> 2]));HEAP32[dsp + 2884520 + (0 << 2) >> 2] = (((iTemp54 | 0) & (((HEAP32[dsp + 2884520 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884528 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp63 = (((iTemp55 | 0) & ((+(HEAPF32[dsp + 2884528 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884528 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2884520 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp54 | 0)) | 0) & ((+(HEAPF32[dsp + 2884528 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884528 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884520 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884528 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp63 | 0)))))) * +((((((iTemp63 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884528 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));fTemp64 = +(+(HEAPF32[dsp + 2884536 + (1 << 2) >> 2]) - +(fTemp58));fTemp65 = +(+(fTemp64) * +(+(faustpower2_f(+(fTemp64))) - 1.));fTemp66 = +(+(((+(fTemp65) > 1.) | 0)) + +(+(fTemp65) * +(((+(fTemp65) <= 1.) | 0))));HEAPF32[dsp + 2883768 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883768 + (2 << 2) >> 2])) + +(+(+(fTemp64) * +(+(+(fTemp66) * +(((+(fTemp66) >= -1.) | 0))) - +(((+(fTemp66) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885500 >> 2]) * +(HEAPF32[dsp + 2883768 + (1 << 2) >> 2])))) - +(+(fTemp58) + +(2.32831e-10 * +(+(fTemp62) * +(+(1. + +(HEAPF32[dsp + 2884536 + (1 << 2) >> 2])) - +(fTemp58)))))));HEAPF32[dsp + 2884536 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883768 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883768 + (2 << 2) >> 2])));HEAPF32[dsp + 2884544 + (0 << 2) >> 2] = +(fTemp64);HEAPF32[dsp + 2884552 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884544 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884552 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884544 + (1 << 2) >> 2]));fTemp67 = +(0.25 * +(+(HEAPF32[dsp + 2884528 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884552 + (0 << 2) >> 2])));HEAPF32[dsp + 2883780 + (0 << 2) >> 2] = +(+(fTemp67) - +(+(HEAPF32[dsp + 2885484 >> 2]) * +(+(+(HEAPF32[dsp + 2885504 >> 2]) * +(HEAPF32[dsp + 2883780 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885508 >> 2]) * +(HEAPF32[dsp + 2883780 + (1 << 2) >> 2])))));HEAPF32[dsp + 1048576 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 1048576 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885484 >> 2]) * +(+(+(HEAPF32[dsp + 2885492 >> 2]) * +(HEAPF32[dsp + 2883780 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885488 >> 2]) * +(HEAPF32[dsp + 2883780 + (0 << 2) >> 2])))));iTemp68 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 4.))) < 0.5) | 0);HEAP32[dsp + 2884560 + (0 << 2) >> 2] = (iTemp68 | 0);HEAPF32[dsp + 2884568 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884568 + (1 << 2) >> 2]) + +((((((iTemp68 | 0) - (HEAP32[dsp + 2884560 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2884568 + (1 << 2) >> 2]) > 0.) | 0))));iTemp69 = ((+(HEAPF32[dsp + 2884568 + (0 << 2) >> 2]) > 0.) | 0);iTemp70 = (((iTemp69 | 0) > 0) | 0);HEAP32[dsp + 2884576 + (0 << 2) >> 2] = (((iTemp70 | 0) & (((HEAP32[dsp + 2884576 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884584 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp71 = (((iTemp69 | 0) <= 0) | 0);iTemp72 = (((iTemp71 | 0) & ((+(HEAPF32[dsp + 2884584 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884584 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2884576 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp70 | 0)) | 0) & ((+(HEAPF32[dsp + 2884584 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884584 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884576 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884584 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp72 | 0)))))) * +((((((iTemp72 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884584 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2884592 + (0 << 2) >> 2] = (((iTemp70 | 0) & (((HEAP32[dsp + 2884592 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884608 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2884600 + (0 << 2) >> 2] = (imul((iTemp70 | 0), ((1 + (HEAP32[dsp + 2884600 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp73 = (((iTemp71 | 0) & ((+(HEAPF32[dsp + 2884608 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884608 + (0 << 2) >> 2] = +(+((((((iTemp73 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884608 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2884592 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp70 | 0)) | 0) & ((+(HEAPF32[dsp + 2884608 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2884600 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2884600 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884608 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp73 | 0)))))));fTemp74 = +(+(HEAPF32[dsp + 2884584 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2884608 + (0 << 2) >> 2]) * +(fTemp8))));fTemp75 = +(+(HEAPF32[dsp + 2884616 + (1 << 2) >> 2]) - +(fTemp74));fTemp76 = +(+(fTemp75) * +(+(faustpower2_f(+(fTemp75))) - 1.));fTemp77 = +(+(((+(fTemp76) > 1.) | 0)) + +(+(fTemp76) * +(((+(fTemp76) <= 1.) | 0))));fTemp78 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp74));HEAPF32[dsp + 2883792 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883792 + (2 << 2) >> 2])) + +(+(+(fTemp75) * +(+(+(fTemp77) * +(((+(fTemp77) >= -1.) | 0))) - +(((+(fTemp77) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885512 >> 2]) * +(HEAPF32[dsp + 2883792 + (1 << 2) >> 2])))) - +(+(fTemp74) + +(2.32831e-10 * +(+(fTemp78) * +(+(1. + +(HEAPF32[dsp + 2884616 + (1 << 2) >> 2])) - +(fTemp74)))))));HEAPF32[dsp + 2884616 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883792 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883792 + (2 << 2) >> 2])));HEAPF32[dsp + 2884624 + (0 << 2) >> 2] = +(fTemp75);HEAPF32[dsp + 2884632 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884624 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884632 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884624 + (1 << 2) >> 2]));HEAP32[dsp + 2884640 + (0 << 2) >> 2] = (((iTemp70 | 0) & (((HEAP32[dsp + 2884640 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884648 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp79 = (((iTemp71 | 0) & ((+(HEAPF32[dsp + 2884648 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884648 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2884640 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp70 | 0)) | 0) & ((+(HEAPF32[dsp + 2884648 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884648 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884640 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884648 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp79 | 0)))))) * +((((((iTemp79 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884648 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));fTemp80 = +(+(HEAPF32[dsp + 2884656 + (1 << 2) >> 2]) - +(fTemp74));fTemp81 = +(+(fTemp80) * +(+(faustpower2_f(+(fTemp80))) - 1.));fTemp82 = +(+(((+(fTemp81) > 1.) | 0)) + +(+(fTemp81) * +(((+(fTemp81) <= 1.) | 0))));HEAPF32[dsp + 2883804 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883804 + (2 << 2) >> 2])) + +(+(+(fTemp80) * +(+(+(fTemp82) * +(((+(fTemp82) >= -1.) | 0))) - +(((+(fTemp82) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885540 >> 2]) * +(HEAPF32[dsp + 2883804 + (1 << 2) >> 2])))) - +(+(fTemp74) + +(2.32831e-10 * +(+(fTemp78) * +(+(1. + +(HEAPF32[dsp + 2884656 + (1 << 2) >> 2])) - +(fTemp74)))))));HEAPF32[dsp + 2884656 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883804 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883804 + (2 << 2) >> 2])));HEAPF32[dsp + 2884664 + (0 << 2) >> 2] = +(fTemp80);HEAPF32[dsp + 2884672 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884664 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884672 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884664 + (1 << 2) >> 2]));fTemp83 = +(0.25 * +(+(HEAPF32[dsp + 2884648 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884672 + (0 << 2) >> 2])));HEAPF32[dsp + 2883816 + (0 << 2) >> 2] = +(+(fTemp83) - +(+(HEAPF32[dsp + 2885524 >> 2]) * +(+(+(HEAPF32[dsp + 2885544 >> 2]) * +(HEAPF32[dsp + 2883816 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885548 >> 2]) * +(HEAPF32[dsp + 2883816 + (1 << 2) >> 2])))));HEAPF32[dsp + 1310720 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 1310720 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885524 >> 2]) * +(+(+(HEAPF32[dsp + 2885532 >> 2]) * +(HEAPF32[dsp + 2883816 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885528 >> 2]) * +(HEAPF32[dsp + 2883816 + (0 << 2) >> 2])))));iTemp84 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 5.))) < 0.5) | 0);HEAP32[dsp + 2884680 + (0 << 2) >> 2] = (iTemp84 | 0);HEAPF32[dsp + 2884688 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884688 + (1 << 2) >> 2]) + +((((((iTemp84 | 0) - (HEAP32[dsp + 2884680 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2884688 + (1 << 2) >> 2]) > 0.) | 0))));iTemp85 = ((+(HEAPF32[dsp + 2884688 + (0 << 2) >> 2]) > 0.) | 0);iTemp86 = (((iTemp85 | 0) > 0) | 0);HEAP32[dsp + 2884696 + (0 << 2) >> 2] = (((iTemp86 | 0) & (((HEAP32[dsp + 2884696 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884704 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp87 = (((iTemp85 | 0) <= 0) | 0);iTemp88 = (((iTemp87 | 0) & ((+(HEAPF32[dsp + 2884704 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884704 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2884696 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp86 | 0)) | 0) & ((+(HEAPF32[dsp + 2884704 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884704 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884696 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884704 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp88 | 0)))))) * +((((((iTemp88 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884704 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2884712 + (0 << 2) >> 2] = (((iTemp86 | 0) & (((HEAP32[dsp + 2884712 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884728 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2884720 + (0 << 2) >> 2] = (imul((iTemp86 | 0), ((1 + (HEAP32[dsp + 2884720 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp89 = (((iTemp87 | 0) & ((+(HEAPF32[dsp + 2884728 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884728 + (0 << 2) >> 2] = +(+((((((iTemp89 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884728 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2884712 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp86 | 0)) | 0) & ((+(HEAPF32[dsp + 2884728 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2884720 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2884720 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884728 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp89 | 0)))))));fTemp90 = +(+(HEAPF32[dsp + 2884704 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2884728 + (0 << 2) >> 2]) * +(fTemp8))));fTemp91 = +(+(HEAPF32[dsp + 2884736 + (1 << 2) >> 2]) - +(fTemp90));fTemp92 = +(+(fTemp91) * +(+(faustpower2_f(+(fTemp91))) - 1.));fTemp93 = +(+(((+(fTemp92) > 1.) | 0)) + +(+(fTemp92) * +(((+(fTemp92) <= 1.) | 0))));fTemp94 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp90));HEAPF32[dsp + 2883828 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883828 + (2 << 2) >> 2])) + +(+(+(fTemp91) * +(+(+(fTemp93) * +(((+(fTemp93) >= -1.) | 0))) - +(((+(fTemp93) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885552 >> 2]) * +(HEAPF32[dsp + 2883828 + (1 << 2) >> 2])))) - +(+(fTemp90) + +(2.32831e-10 * +(+(fTemp94) * +(+(1. + +(HEAPF32[dsp + 2884736 + (1 << 2) >> 2])) - +(fTemp90)))))));HEAPF32[dsp + 2884736 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883828 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883828 + (2 << 2) >> 2])));HEAPF32[dsp + 2884744 + (0 << 2) >> 2] = +(fTemp91);HEAPF32[dsp + 2884752 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884744 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884752 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884744 + (1 << 2) >> 2]));HEAP32[dsp + 2884760 + (0 << 2) >> 2] = (((iTemp86 | 0) & (((HEAP32[dsp + 2884760 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884768 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp95 = (((iTemp87 | 0) & ((+(HEAPF32[dsp + 2884768 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884768 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2884760 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp86 | 0)) | 0) & ((+(HEAPF32[dsp + 2884768 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884768 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884760 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884768 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp95 | 0)))))) * +((((((iTemp95 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884768 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));fTemp96 = +(+(HEAPF32[dsp + 2884776 + (1 << 2) >> 2]) - +(fTemp90));fTemp97 = +(+(fTemp96) * +(+(faustpower2_f(+(fTemp96))) - 1.));fTemp98 = +(+(((+(fTemp97) > 1.) | 0)) + +(+(fTemp97) * +(((+(fTemp97) <= 1.) | 0))));HEAPF32[dsp + 2883840 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883840 + (2 << 2) >> 2])) + +(+(+(fTemp96) * +(+(+(fTemp98) * +(((+(fTemp98) >= -1.) | 0))) - +(((+(fTemp98) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885576 >> 2]) * +(HEAPF32[dsp + 2883840 + (1 << 2) >> 2])))) - +(+(fTemp90) + +(2.32831e-10 * +(+(fTemp94) * +(+(1. + +(HEAPF32[dsp + 2884776 + (1 << 2) >> 2])) - +(fTemp90)))))));HEAPF32[dsp + 2884776 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883840 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883840 + (2 << 2) >> 2])));HEAPF32[dsp + 2884784 + (0 << 2) >> 2] = +(fTemp96);HEAPF32[dsp + 2884792 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884784 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884792 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884784 + (1 << 2) >> 2]));fTemp99 = +(0.25 * +(+(HEAPF32[dsp + 2884768 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884792 + (0 << 2) >> 2])));HEAPF32[dsp + 2883852 + (0 << 2) >> 2] = +(+(fTemp99) - +(+(HEAPF32[dsp + 2885564 >> 2]) * +(+(+(HEAPF32[dsp + 2885580 >> 2]) * +(HEAPF32[dsp + 2883852 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885584 >> 2]) * +(HEAPF32[dsp + 2883852 + (1 << 2) >> 2])))));HEAPF32[dsp + 1572864 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 1572864 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885564 >> 2]) * +(+(+(HEAPF32[dsp + 2885572 >> 2]) * +(HEAPF32[dsp + 2883852 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885568 >> 2]) * +(HEAPF32[dsp + 2883852 + (0 << 2) >> 2])))));iTemp100 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 6.))) < 0.5) | 0);HEAP32[dsp + 2884800 + (0 << 2) >> 2] = (iTemp100 | 0);HEAPF32[dsp + 2884808 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884808 + (1 << 2) >> 2]) + +((((((iTemp100 | 0) - (HEAP32[dsp + 2884800 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2884808 + (1 << 2) >> 2]) > 0.) | 0))));iTemp101 = ((+(HEAPF32[dsp + 2884808 + (0 << 2) >> 2]) > 0.) | 0);iTemp102 = (((iTemp101 | 0) > 0) | 0);HEAP32[dsp + 2884816 + (0 << 2) >> 2] = (((iTemp102 | 0) & (((HEAP32[dsp + 2884816 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884824 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp103 = (((iTemp101 | 0) <= 0) | 0);iTemp104 = (((iTemp103 | 0) & ((+(HEAPF32[dsp + 2884824 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884824 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2884816 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp102 | 0)) | 0) & ((+(HEAPF32[dsp + 2884824 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884824 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884816 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884824 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp104 | 0)))))) * +((((((iTemp104 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884824 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2884832 + (0 << 2) >> 2] = (((iTemp102 | 0) & (((HEAP32[dsp + 2884832 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884848 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2884840 + (0 << 2) >> 2] = (imul((iTemp102 | 0), ((1 + (HEAP32[dsp + 2884840 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp105 = (((iTemp103 | 0) & ((+(HEAPF32[dsp + 2884848 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884848 + (0 << 2) >> 2] = +(+((((((iTemp105 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884848 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2884832 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp102 | 0)) | 0) & ((+(HEAPF32[dsp + 2884848 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2884840 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2884840 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884848 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp105 | 0)))))));fTemp106 = +(+(HEAPF32[dsp + 2884824 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2884848 + (0 << 2) >> 2]) * +(fTemp8))));fTemp107 = +(+(HEAPF32[dsp + 2884856 + (1 << 2) >> 2]) - +(fTemp106));fTemp108 = +(+(fTemp107) * +(+(faustpower2_f(+(fTemp107))) - 1.));fTemp109 = +(+(((+(fTemp108) > 1.) | 0)) + +(+(fTemp108) * +(((+(fTemp108) <= 1.) | 0))));fTemp110 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp106));HEAPF32[dsp + 2883864 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883864 + (2 << 2) >> 2])) + +(+(+(fTemp107) * +(+(+(fTemp109) * +(((+(fTemp109) >= -1.) | 0))) - +(((+(fTemp109) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885588 >> 2]) * +(HEAPF32[dsp + 2883864 + (1 << 2) >> 2])))) - +(+(fTemp106) + +(2.32831e-10 * +(+(fTemp110) * +(+(1. + +(HEAPF32[dsp + 2884856 + (1 << 2) >> 2])) - +(fTemp106)))))));HEAPF32[dsp + 2884856 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883864 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883864 + (2 << 2) >> 2])));HEAPF32[dsp + 2884864 + (0 << 2) >> 2] = +(fTemp107);HEAPF32[dsp + 2884872 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884864 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884872 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884864 + (1 << 2) >> 2]));HEAP32[dsp + 2884880 + (0 << 2) >> 2] = (((iTemp102 | 0) & (((HEAP32[dsp + 2884880 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884888 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp111 = (((iTemp103 | 0) & ((+(HEAPF32[dsp + 2884888 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884888 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2884880 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp102 | 0)) | 0) & ((+(HEAPF32[dsp + 2884888 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884888 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884880 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884888 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp111 | 0)))))) * +((((((iTemp111 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884888 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));fTemp112 = +(+(HEAPF32[dsp + 2884896 + (1 << 2) >> 2]) - +(fTemp106));fTemp113 = +(+(fTemp112) * +(+(faustpower2_f(+(fTemp112))) - 1.));fTemp114 = +(+(((+(fTemp113) > 1.) | 0)) + +(+(fTemp113) * +(((+(fTemp113) <= 1.) | 0))));HEAPF32[dsp + 2883876 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883876 + (2 << 2) >> 2])) + +(+(+(fTemp112) * +(+(+(fTemp114) * +(((+(fTemp114) >= -1.) | 0))) - +(((+(fTemp114) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885612 >> 2]) * +(HEAPF32[dsp + 2883876 + (1 << 2) >> 2])))) - +(+(fTemp106) + +(2.32831e-10 * +(+(fTemp110) * +(+(1. + +(HEAPF32[dsp + 2884896 + (1 << 2) >> 2])) - +(fTemp106)))))));HEAPF32[dsp + 2884896 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883876 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883876 + (2 << 2) >> 2])));HEAPF32[dsp + 2884904 + (0 << 2) >> 2] = +(fTemp112);HEAPF32[dsp + 2884912 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884904 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884912 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884904 + (1 << 2) >> 2]));fTemp115 = +(0.25 * +(+(HEAPF32[dsp + 2884888 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884912 + (0 << 2) >> 2])));HEAPF32[dsp + 2883888 + (0 << 2) >> 2] = +(+(fTemp115) - +(+(HEAPF32[dsp + 2885600 >> 2]) * +(+(+(HEAPF32[dsp + 2885616 >> 2]) * +(HEAPF32[dsp + 2883888 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885620 >> 2]) * +(HEAPF32[dsp + 2883888 + (1 << 2) >> 2])))));HEAPF32[dsp + 1835008 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 1835008 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885600 >> 2]) * +(+(+(HEAPF32[dsp + 2885608 >> 2]) * +(HEAPF32[dsp + 2883888 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885604 >> 2]) * +(HEAPF32[dsp + 2883888 + (0 << 2) >> 2])))));iTemp116 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 7.))) < 0.5) | 0);HEAP32[dsp + 2884920 + (0 << 2) >> 2] = (iTemp116 | 0);HEAPF32[dsp + 2884928 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884928 + (1 << 2) >> 2]) + +((((((iTemp116 | 0) - (HEAP32[dsp + 2884920 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2884928 + (1 << 2) >> 2]) > 0.) | 0))));iTemp117 = ((+(HEAPF32[dsp + 2884928 + (0 << 2) >> 2]) > 0.) | 0);iTemp118 = (((iTemp117 | 0) > 0) | 0);HEAP32[dsp + 2884936 + (0 << 2) >> 2] = (((iTemp118 | 0) & (((HEAP32[dsp + 2884936 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884944 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp119 = (((iTemp117 | 0) <= 0) | 0);iTemp120 = (((iTemp119 | 0) & ((+(HEAPF32[dsp + 2884944 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884944 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2884936 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp118 | 0)) | 0) & ((+(HEAPF32[dsp + 2884944 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884944 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2884936 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2884944 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp120 | 0)))))) * +((((((iTemp120 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884944 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2884952 + (0 << 2) >> 2] = (((iTemp118 | 0) & (((HEAP32[dsp + 2884952 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2884968 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2884960 + (0 << 2) >> 2] = (imul((iTemp118 | 0), ((1 + (HEAP32[dsp + 2884960 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp121 = (((iTemp119 | 0) & ((+(HEAPF32[dsp + 2884968 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2884968 + (0 << 2) >> 2] = +(+((((((iTemp121 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2884968 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2884952 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp118 | 0)) | 0) & ((+(HEAPF32[dsp + 2884968 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2884960 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2884960 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2884968 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp121 | 0)))))));fTemp122 = +(+(HEAPF32[dsp + 2884944 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2884968 + (0 << 2) >> 2]) * +(fTemp8))));fTemp123 = +(+(HEAPF32[dsp + 2884976 + (1 << 2) >> 2]) - +(fTemp122));fTemp124 = +(+(fTemp123) * +(+(faustpower2_f(+(fTemp123))) - 1.));fTemp125 = +(+(((+(fTemp124) > 1.) | 0)) + +(+(fTemp124) * +(((+(fTemp124) <= 1.) | 0))));fTemp126 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp122));HEAPF32[dsp + 2883900 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883900 + (2 << 2) >> 2])) + +(+(+(fTemp123) * +(+(+(fTemp125) * +(((+(fTemp125) >= -1.) | 0))) - +(((+(fTemp125) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885624 >> 2]) * +(HEAPF32[dsp + 2883900 + (1 << 2) >> 2])))) - +(+(fTemp122) + +(2.32831e-10 * +(+(fTemp126) * +(+(1. + +(HEAPF32[dsp + 2884976 + (1 << 2) >> 2])) - +(fTemp122)))))));HEAPF32[dsp + 2884976 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883900 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883900 + (2 << 2) >> 2])));HEAPF32[dsp + 2884984 + (0 << 2) >> 2] = +(fTemp123);HEAPF32[dsp + 2884992 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2884984 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2884992 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2884984 + (1 << 2) >> 2]));HEAP32[dsp + 2885000 + (0 << 2) >> 2] = (((iTemp118 | 0) & (((HEAP32[dsp + 2885000 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2885008 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp127 = (((iTemp119 | 0) & ((+(HEAPF32[dsp + 2885008 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2885008 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2885000 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp118 | 0)) | 0) & ((+(HEAPF32[dsp + 2885008 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2885008 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2885000 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2885008 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp127 | 0)))))) * +((((((iTemp127 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2885008 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));fTemp128 = +(+(HEAPF32[dsp + 2885016 + (1 << 2) >> 2]) - +(fTemp122));fTemp129 = +(+(fTemp128) * +(+(faustpower2_f(+(fTemp128))) - 1.));fTemp130 = +(+(((+(fTemp129) > 1.) | 0)) + +(+(fTemp129) * +(((+(fTemp129) <= 1.) | 0))));HEAPF32[dsp + 2883912 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883912 + (2 << 2) >> 2])) + +(+(+(fTemp128) * +(+(+(fTemp130) * +(((+(fTemp130) >= -1.) | 0))) - +(((+(fTemp130) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885648 >> 2]) * +(HEAPF32[dsp + 2883912 + (1 << 2) >> 2])))) - +(+(fTemp122) + +(2.32831e-10 * +(+(fTemp126) * +(+(1. + +(HEAPF32[dsp + 2885016 + (1 << 2) >> 2])) - +(fTemp122)))))));HEAPF32[dsp + 2885016 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883912 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883912 + (2 << 2) >> 2])));HEAPF32[dsp + 2885024 + (0 << 2) >> 2] = +(fTemp128);HEAPF32[dsp + 2885032 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2885024 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2885032 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2885024 + (1 << 2) >> 2]));fTemp131 = +(0.25 * +(+(HEAPF32[dsp + 2885008 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2885032 + (0 << 2) >> 2])));HEAPF32[dsp + 2883924 + (0 << 2) >> 2] = +(+(fTemp131) - +(+(HEAPF32[dsp + 2885636 >> 2]) * +(+(+(HEAPF32[dsp + 2885652 >> 2]) * +(HEAPF32[dsp + 2883924 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885656 >> 2]) * +(HEAPF32[dsp + 2883924 + (1 << 2) >> 2])))));HEAPF32[dsp + 2097152 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 2097152 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885636 >> 2]) * +(+(+(HEAPF32[dsp + 2885644 >> 2]) * +(HEAPF32[dsp + 2883924 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885640 >> 2]) * +(HEAPF32[dsp + 2883924 + (0 << 2) >> 2])))));iTemp132 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 8.))) < 0.5) | 0);HEAP32[dsp + 2885040 + (0 << 2) >> 2] = (iTemp132 | 0);HEAPF32[dsp + 2885048 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2885048 + (1 << 2) >> 2]) + +((((((iTemp132 | 0) - (HEAP32[dsp + 2885040 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2885048 + (1 << 2) >> 2]) > 0.) | 0))));iTemp133 = ((+(HEAPF32[dsp + 2885048 + (0 << 2) >> 2]) > 0.) | 0);iTemp134 = (((iTemp133 | 0) > 0) | 0);HEAP32[dsp + 2885056 + (0 << 2) >> 2] = (((iTemp134 | 0) & (((HEAP32[dsp + 2885056 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2885064 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp135 = (((iTemp133 | 0) <= 0) | 0);iTemp136 = (((iTemp135 | 0) & ((+(HEAPF32[dsp + 2885064 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2885064 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2885056 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp134 | 0)) | 0) & ((+(HEAPF32[dsp + 2885064 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2885064 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2885056 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2885064 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp136 | 0)))))) * +((((((iTemp136 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2885064 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2885072 + (0 << 2) >> 2] = (((iTemp134 | 0) & (((HEAP32[dsp + 2885072 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2885088 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2885080 + (0 << 2) >> 2] = (imul((iTemp134 | 0), ((1 + (HEAP32[dsp + 2885080 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp137 = (((iTemp135 | 0) & ((+(HEAPF32[dsp + 2885088 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2885088 + (0 << 2) >> 2] = +(+((((((iTemp137 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2885088 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2885072 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp134 | 0)) | 0) & ((+(HEAPF32[dsp + 2885088 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2885080 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2885080 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2885088 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp137 | 0)))))));fTemp138 = +(+(HEAPF32[dsp + 2885064 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2885088 + (0 << 2) >> 2]) * +(fTemp8))));fTemp139 = +(+(HEAPF32[dsp + 2885096 + (1 << 2) >> 2]) - +(fTemp138));fTemp140 = +(+(fTemp139) * +(+(faustpower2_f(+(fTemp139))) - 1.));fTemp141 = +(+(((+(fTemp140) > 1.) | 0)) + +(+(fTemp140) * +(((+(fTemp140) <= 1.) | 0))));fTemp142 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp138));HEAPF32[dsp + 2883936 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883936 + (2 << 2) >> 2])) + +(+(+(fTemp139) * +(+(+(fTemp141) * +(((+(fTemp141) >= -1.) | 0))) - +(((+(fTemp141) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885660 >> 2]) * +(HEAPF32[dsp + 2883936 + (1 << 2) >> 2])))) - +(+(fTemp138) + +(2.32831e-10 * +(+(fTemp142) * +(+(1. + +(HEAPF32[dsp + 2885096 + (1 << 2) >> 2])) - +(fTemp138)))))));HEAPF32[dsp + 2885096 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883936 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883936 + (2 << 2) >> 2])));HEAPF32[dsp + 2885104 + (0 << 2) >> 2] = +(fTemp139);HEAPF32[dsp + 2885112 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2885104 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2885112 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2885104 + (1 << 2) >> 2]));HEAP32[dsp + 2885120 + (0 << 2) >> 2] = (((iTemp134 | 0) & (((HEAP32[dsp + 2885120 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2885128 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp143 = (((iTemp135 | 0) & ((+(HEAPF32[dsp + 2885128 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2885128 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2885120 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp134 | 0)) | 0) & ((+(HEAPF32[dsp + 2885128 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2885128 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2885120 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2885128 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp143 | 0)))))) * +((((((iTemp143 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2885128 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));fTemp144 = +(+(HEAPF32[dsp + 2885136 + (1 << 2) >> 2]) - +(fTemp138));fTemp145 = +(+(fTemp144) * +(+(faustpower2_f(+(fTemp144))) - 1.));fTemp146 = +(+(((+(fTemp145) > 1.) | 0)) + +(+(fTemp145) * +(((+(fTemp145) <= 1.) | 0))));HEAPF32[dsp + 2883948 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883948 + (2 << 2) >> 2])) + +(+(+(fTemp144) * +(+(+(fTemp146) * +(((+(fTemp146) >= -1.) | 0))) - +(((+(fTemp146) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885684 >> 2]) * +(HEAPF32[dsp + 2883948 + (1 << 2) >> 2])))) - +(+(fTemp138) + +(2.32831e-10 * +(+(fTemp142) * +(+(1. + +(HEAPF32[dsp + 2885136 + (1 << 2) >> 2])) - +(fTemp138)))))));HEAPF32[dsp + 2885136 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883948 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883948 + (2 << 2) >> 2])));HEAPF32[dsp + 2885144 + (0 << 2) >> 2] = +(fTemp144);HEAPF32[dsp + 2885152 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2885144 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2885152 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2885144 + (1 << 2) >> 2]));fTemp147 = +(0.25 * +(+(HEAPF32[dsp + 2885128 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2885152 + (0 << 2) >> 2])));HEAPF32[dsp + 2883960 + (0 << 2) >> 2] = +(+(fTemp147) - +(+(HEAPF32[dsp + 2885672 >> 2]) * +(+(+(HEAPF32[dsp + 2885688 >> 2]) * +(HEAPF32[dsp + 2883960 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885692 >> 2]) * +(HEAPF32[dsp + 2883960 + (1 << 2) >> 2])))));HEAPF32[dsp + 2359296 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 2359296 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885672 >> 2]) * +(+(+(HEAPF32[dsp + 2885680 >> 2]) * +(HEAPF32[dsp + 2883960 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885676 >> 2]) * +(HEAPF32[dsp + 2883960 + (0 << 2) >> 2])))));iTemp148 = ((+(fabsf(+(+(HEAPF32[dsp + 2883584 + ((HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0) << 2) >> 2]) - 9.))) < 0.5) | 0);HEAP32[dsp + 2885160 + (0 << 2) >> 2] = (iTemp148 | 0);HEAPF32[dsp + 2885168 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2885168 + (1 << 2) >> 2]) + +((((((iTemp148 | 0) - (HEAP32[dsp + 2885160 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(0.000113379 * +(((+(HEAPF32[dsp + 2885168 + (1 << 2) >> 2]) > 0.) | 0))));iTemp149 = ((+(HEAPF32[dsp + 2885168 + (0 << 2) >> 2]) > 0.) | 0);iTemp150 = (((iTemp149 | 0) > 0) | 0);HEAP32[dsp + 2885176 + (0 << 2) >> 2] = (((iTemp150 | 0) & (((HEAP32[dsp + 2885176 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2885184 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp151 = (((iTemp149 | 0) <= 0) | 0);iTemp152 = (((iTemp151 | 0) & ((+(HEAPF32[dsp + 2885184 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2885184 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885304 >> 2]) * +((((((((HEAP32[dsp + 2885176 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp150 | 0)) | 0) & ((+(HEAPF32[dsp + 2885184 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2885184 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2885176 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2885184 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885312 >> 2]) * +((iTemp152 | 0)))))) * +((((((iTemp152 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2885184 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));HEAP32[dsp + 2885192 + (0 << 2) >> 2] = (((iTemp150 | 0) & (((HEAP32[dsp + 2885192 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2885208 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);HEAP32[dsp + 2885200 + (0 << 2) >> 2] = (imul((iTemp150 | 0), ((1 + (HEAP32[dsp + 2885200 + (1 << 2) >> 2] | 0)) | 0)) | 0);iTemp153 = (((iTemp151 | 0) & ((+(HEAPF32[dsp + 2885208 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2885208 + (0 << 2) >> 2] = +(+((((((iTemp153 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2885208 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)) * +(+(+(HEAPF32[dsp + 2885316 >> 2]) * +((imul((((((((((HEAP32[dsp + 2885192 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp150 | 0)) | 0) & ((+(HEAPF32[dsp + 2885208 + (1 << 2) >> 2]) < 1.) | 0)) | 0) & ((+((HEAP32[dsp + 2885200 + (1 << 2) >> 2] | 0)) > +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0), ((1 - ((+((HEAP32[dsp + 2885200 + (1 << 2) >> 2] | 0)) < +(HEAPF32[dsp + 2885320 >> 2])) | 0)) | 0)) | 0))) + +(+(HEAPF32[dsp + 2885208 + (1 << 2) >> 2]) * +(1. - +(+(HEAPF32[dsp + 2885324 >> 2]) * +((iTemp153 | 0)))))));fTemp154 = +(+(HEAPF32[dsp + 2885184 + (0 << 2) >> 2]) + +(0.1 * +(+(HEAPF32[dsp + 2885208 + (0 << 2) >> 2]) * +(fTemp8))));fTemp155 = +(+(HEAPF32[dsp + 2885216 + (1 << 2) >> 2]) - +(fTemp154));fTemp156 = +(+(fTemp155) * +(+(faustpower2_f(+(fTemp155))) - 1.));fTemp157 = +(+(((+(fTemp156) > 1.) | 0)) + +(+(fTemp156) * +(((+(fTemp156) <= 1.) | 0))));fTemp158 = +(+((HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0)) * +(fTemp154));HEAPF32[dsp + 2883972 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883972 + (2 << 2) >> 2])) + +(+(+(fTemp155) * +(+(+(fTemp157) * +(((+(fTemp157) >= -1.) | 0))) - +(((+(fTemp157) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885696 >> 2]) * +(HEAPF32[dsp + 2883972 + (1 << 2) >> 2])))) - +(+(fTemp154) + +(2.32831e-10 * +(+(fTemp158) * +(+(1. + +(HEAPF32[dsp + 2885216 + (1 << 2) >> 2])) - +(fTemp154)))))));HEAPF32[dsp + 2885216 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883972 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883972 + (2 << 2) >> 2])));HEAPF32[dsp + 2885224 + (0 << 2) >> 2] = +(fTemp155);HEAPF32[dsp + 2885232 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2885224 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2885232 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2885224 + (1 << 2) >> 2]));HEAP32[dsp + 2885240 + (0 << 2) >> 2] = (((iTemp150 | 0) & (((HEAP32[dsp + 2885240 + (1 << 2) >> 2] | 0) | ((+(HEAPF32[dsp + 2885248 + (1 << 2) >> 2]) >= 1.) | 0)) | 0)) | 0);iTemp159 = (((iTemp151 | 0) & ((+(HEAPF32[dsp + 2885248 + (1 << 2) >> 2]) > 0.) | 0)) | 0);HEAPF32[dsp + 2885248 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 2885336 >> 2]) * +((((((((HEAP32[dsp + 2885240 + (1 << 2) >> 2] | 0) == 0) | 0) & (iTemp150 | 0)) | 0) & ((+(HEAPF32[dsp + 2885248 + (1 << 2) >> 2]) < 1.) | 0)) | 0))) + +(+(HEAPF32[dsp + 2885248 + (1 << 2) >> 2]) * +(+(1. - +(+(HEAPF32[dsp + 2885308 >> 2]) * +((((HEAP32[dsp + 2885240 + (1 << 2) >> 2] | 0) & ((+(HEAPF32[dsp + 2885248 + (1 << 2) >> 2]) > 80.) | 0)) | 0)))) - +(+(HEAPF32[dsp + 2885340 >> 2]) * +((iTemp159 | 0)))))) * +((((((iTemp159 | 0) == 0) | 0) | ((+(HEAPF32[dsp + 2885248 + (1 << 2) >> 2]) >= 1.e-06) | 0)) | 0)));fTemp160 = +(+(HEAPF32[dsp + 2885256 + (1 << 2) >> 2]) - +(fTemp154));fTemp161 = +(+(fTemp160) * +(+(faustpower2_f(+(fTemp160))) - 1.));fTemp162 = +(+(((+(fTemp161) > 1.) | 0)) + +(+(fTemp161) * +(((+(fTemp161) <= 1.) | 0))));HEAPF32[dsp + 2883984 + (0 << 2) >> 2] = +(0. - +(+(+(0.998001 * +(HEAPF32[dsp + 2883984 + (2 << 2) >> 2])) + +(+(+(fTemp160) * +(+(+(fTemp162) * +(((+(fTemp162) >= -1.) | 0))) - +(((+(fTemp162) < -1.) | 0)))) + +(+(HEAPF32[dsp + 2885720 >> 2]) * +(HEAPF32[dsp + 2883984 + (1 << 2) >> 2])))) - +(+(fTemp154) + +(2.32831e-10 * +(+(fTemp158) * +(+(1. + +(HEAPF32[dsp + 2885256 + (1 << 2) >> 2])) - +(fTemp154)))))));HEAPF32[dsp + 2885256 + (0 << 2) >> 2] = +(+(0.0009995 * +(HEAPF32[dsp + 2883984 + (0 << 2) >> 2])) - +(0.0009995 * +(HEAPF32[dsp + 2883984 + (2 << 2) >> 2])));HEAPF32[dsp + 2885264 + (0 << 2) >> 2] = +(fTemp160);HEAPF32[dsp + 2885272 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 2885264 + (0 << 2) >> 2]) + +(0.995 * +(HEAPF32[dsp + 2885272 + (1 << 2) >> 2]))) - +(HEAPF32[dsp + 2885264 + (1 << 2) >> 2]));fTemp163 = +(0.25 * +(+(HEAPF32[dsp + 2885248 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2885272 + (0 << 2) >> 2])));HEAPF32[dsp + 2883996 + (0 << 2) >> 2] = +(+(fTemp163) - +(+(HEAPF32[dsp + 2885708 >> 2]) * +(+(+(HEAPF32[dsp + 2885724 >> 2]) * +(HEAPF32[dsp + 2883996 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885728 >> 2]) * +(HEAPF32[dsp + 2883996 + (1 << 2) >> 2])))));HEAPF32[dsp + 2621440 + ((((HEAP32[dsp + 2885392 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(fTemp27) * +(HEAPF32[dsp + 2621440 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 44101) | 0) & 65535) | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 2885708 >> 2]) * +(+(+(HEAPF32[dsp + 2885716 >> 2]) * +(HEAPF32[dsp + 2883996 + (2 << 2) >> 2])) + +(+(HEAPF32[dsp + 2885712 >> 2]) * +(HEAPF32[dsp + 2883996 + (0 << 2) >> 2])))));HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(0.25 * +(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(HEAPF32[dsp + 2884136 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884152 + (0 << 2) >> 2])) + +(+(HEAPF32[dsp + 2884232 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884248 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(+(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp31)) + +(+(HEAPF32[dsp + 524288 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp35)))))) + +(+(HEAPF32[dsp + 2884392 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884408 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 786432 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp51))))) + +(+(HEAPF32[dsp + 2884512 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884528 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 1048576 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp67))))) + +(+(HEAPF32[dsp + 2884632 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884648 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 1310720 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp83))))) + +(+(HEAPF32[dsp + 2884752 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884768 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 1572864 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp99))))) + +(+(HEAPF32[dsp + 2884872 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2884888 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 1835008 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp115))))) + +(+(HEAPF32[dsp + 2884992 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2885008 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 2097152 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp131))))) + +(+(HEAPF32[dsp + 2885112 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2885128 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 2359296 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp147))))) + +(+(HEAPF32[dsp + 2885232 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 2885248 + (0 << 2) >> 2]))) + +(4. * +(+(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]) * +(+(HEAPF32[dsp + 2621440 + ((((((HEAP32[dsp + 2885392 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]) + +(fTemp163)))))));HEAP32[dsp + 2884008 + (1 << 2) >> 2] = (HEAP32[dsp + 2884008 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884016 + (1 << 2) >> 2] = (HEAP32[dsp + 2884016 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884024 + (1 << 2) >> 2] = (HEAP32[dsp + 2884024 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884032 + (1 << 2) >> 2] = (HEAP32[dsp + 2884032 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884040 + (1 << 2) >> 2] = (HEAP32[dsp + 2884040 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884048 + (1 << 2) >> 2] = (HEAP32[dsp + 2884048 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884056 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884056 + (0 << 2) >> 2]);HEAP32[dsp + 2884064 + (1 << 2) >> 2] = (HEAP32[dsp + 2884064 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884072 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884072 + (0 << 2) >> 2]);HEAP32[dsp + 2884080 + (1 << 2) >> 2] = (HEAP32[dsp + 2884080 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884088 + (1 << 2) >> 2] = (HEAP32[dsp + 2884088 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884096 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884096 + (0 << 2) >> 2]);HEAPF32[dsp + 2884104 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884104 + (0 << 2) >> 2]);HEAP32[dsp + 2884112 + (1 << 2) >> 2] = (HEAP32[dsp + 2884112 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2883648 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883648 + (1 << 2) >> 2]);HEAPF32[dsp + 2883648 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883648 + (0 << 2) >> 2]);HEAPF32[dsp + 2884120 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884120 + (0 << 2) >> 2]);HEAPF32[dsp + 2884128 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884128 + (0 << 2) >> 2]);HEAPF32[dsp + 2884136 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884136 + (0 << 2) >> 2]);HEAP32[dsp + 2884144 + (1 << 2) >> 2] = (HEAP32[dsp + 2884144 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884152 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884152 + (0 << 2) >> 2]);HEAP32[dsp + 2884160 + (1 << 2) >> 2] = (HEAP32[dsp + 2884160 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884168 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884168 + (0 << 2) >> 2]);HEAP32[dsp + 2884176 + (1 << 2) >> 2] = (HEAP32[dsp + 2884176 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884184 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884184 + (0 << 2) >> 2]);HEAP32[dsp + 2884192 + (1 << 2) >> 2] = (HEAP32[dsp + 2884192 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884200 + (1 << 2) >> 2] = (HEAP32[dsp + 2884200 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884208 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884208 + (0 << 2) >> 2]);HEAPF32[dsp + 2883660 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883660 + (1 << 2) >> 2]);HEAPF32[dsp + 2883660 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883660 + (0 << 2) >> 2]);HEAPF32[dsp + 2884216 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884216 + (0 << 2) >> 2]);HEAPF32[dsp + 2884224 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884224 + (0 << 2) >> 2]);HEAPF32[dsp + 2884232 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884232 + (0 << 2) >> 2]);HEAP32[dsp + 2884240 + (1 << 2) >> 2] = (HEAP32[dsp + 2884240 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884248 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884248 + (0 << 2) >> 2]);HEAPF32[dsp + 2884256 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884256 + (0 << 2) >> 2]);HEAPF32[dsp + 2884264 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884264 + (0 << 2) >> 2]);HEAPF32[dsp + 2883672 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883672 + (1 << 2) >> 2]);HEAPF32[dsp + 2883672 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883672 + (0 << 2) >> 2]);HEAPF32[dsp + 2884272 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884272 + (0 << 2) >> 2]);HEAPF32[dsp + 2884280 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884280 + (0 << 2) >> 2]);HEAPF32[dsp + 2884288 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884288 + (0 << 2) >> 2]);HEAPF32[dsp + 2883684 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883684 + (1 << 2) >> 2]);HEAPF32[dsp + 2883684 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883684 + (0 << 2) >> 2]);HEAP32[dsp + 2885392 >> 2] = (((HEAP32[dsp + 2885392 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 2883696 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883696 + (1 << 2) >> 2]);HEAPF32[dsp + 2883696 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883696 + (0 << 2) >> 2]);HEAPF32[dsp + 2884296 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884296 + (0 << 2) >> 2]);HEAPF32[dsp + 2884304 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884304 + (0 << 2) >> 2]);HEAPF32[dsp + 2884312 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884312 + (0 << 2) >> 2]);HEAPF32[dsp + 2883708 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883708 + (1 << 2) >> 2]);HEAPF32[dsp + 2883708 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883708 + (0 << 2) >> 2]);HEAP32[dsp + 2884320 + (1 << 2) >> 2] = (HEAP32[dsp + 2884320 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884328 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884328 + (0 << 2) >> 2]);HEAP32[dsp + 2884336 + (1 << 2) >> 2] = (HEAP32[dsp + 2884336 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884344 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884344 + (0 << 2) >> 2]);HEAP32[dsp + 2884352 + (1 << 2) >> 2] = (HEAP32[dsp + 2884352 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884360 + (1 << 2) >> 2] = (HEAP32[dsp + 2884360 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884368 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884368 + (0 << 2) >> 2]);HEAPF32[dsp + 2883720 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883720 + (1 << 2) >> 2]);HEAPF32[dsp + 2883720 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883720 + (0 << 2) >> 2]);HEAPF32[dsp + 2884376 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884376 + (0 << 2) >> 2]);HEAPF32[dsp + 2884384 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884384 + (0 << 2) >> 2]);HEAPF32[dsp + 2884392 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884392 + (0 << 2) >> 2]);HEAP32[dsp + 2884400 + (1 << 2) >> 2] = (HEAP32[dsp + 2884400 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884408 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884408 + (0 << 2) >> 2]);HEAPF32[dsp + 2883732 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883732 + (1 << 2) >> 2]);HEAPF32[dsp + 2883732 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883732 + (0 << 2) >> 2]);HEAPF32[dsp + 2884416 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884416 + (0 << 2) >> 2]);HEAPF32[dsp + 2884424 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884424 + (0 << 2) >> 2]);HEAPF32[dsp + 2884432 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884432 + (0 << 2) >> 2]);HEAPF32[dsp + 2883744 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883744 + (1 << 2) >> 2]);HEAPF32[dsp + 2883744 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883744 + (0 << 2) >> 2]);HEAP32[dsp + 2884440 + (1 << 2) >> 2] = (HEAP32[dsp + 2884440 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884448 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884448 + (0 << 2) >> 2]);HEAP32[dsp + 2884456 + (1 << 2) >> 2] = (HEAP32[dsp + 2884456 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884464 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884464 + (0 << 2) >> 2]);HEAP32[dsp + 2884472 + (1 << 2) >> 2] = (HEAP32[dsp + 2884472 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884480 + (1 << 2) >> 2] = (HEAP32[dsp + 2884480 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884488 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884488 + (0 << 2) >> 2]);HEAPF32[dsp + 2883756 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883756 + (1 << 2) >> 2]);HEAPF32[dsp + 2883756 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883756 + (0 << 2) >> 2]);HEAPF32[dsp + 2884496 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884496 + (0 << 2) >> 2]);HEAPF32[dsp + 2884504 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884504 + (0 << 2) >> 2]);HEAPF32[dsp + 2884512 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884512 + (0 << 2) >> 2]);HEAP32[dsp + 2884520 + (1 << 2) >> 2] = (HEAP32[dsp + 2884520 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884528 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884528 + (0 << 2) >> 2]);HEAPF32[dsp + 2883768 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883768 + (1 << 2) >> 2]);HEAPF32[dsp + 2883768 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883768 + (0 << 2) >> 2]);HEAPF32[dsp + 2884536 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884536 + (0 << 2) >> 2]);HEAPF32[dsp + 2884544 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884544 + (0 << 2) >> 2]);HEAPF32[dsp + 2884552 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884552 + (0 << 2) >> 2]);HEAPF32[dsp + 2883780 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883780 + (1 << 2) >> 2]);HEAPF32[dsp + 2883780 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883780 + (0 << 2) >> 2]);HEAP32[dsp + 2884560 + (1 << 2) >> 2] = (HEAP32[dsp + 2884560 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884568 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884568 + (0 << 2) >> 2]);HEAP32[dsp + 2884576 + (1 << 2) >> 2] = (HEAP32[dsp + 2884576 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884584 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884584 + (0 << 2) >> 2]);HEAP32[dsp + 2884592 + (1 << 2) >> 2] = (HEAP32[dsp + 2884592 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884600 + (1 << 2) >> 2] = (HEAP32[dsp + 2884600 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884608 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884608 + (0 << 2) >> 2]);HEAPF32[dsp + 2883792 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883792 + (1 << 2) >> 2]);HEAPF32[dsp + 2883792 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883792 + (0 << 2) >> 2]);HEAPF32[dsp + 2884616 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884616 + (0 << 2) >> 2]);HEAPF32[dsp + 2884624 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884624 + (0 << 2) >> 2]);HEAPF32[dsp + 2884632 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884632 + (0 << 2) >> 2]);HEAP32[dsp + 2884640 + (1 << 2) >> 2] = (HEAP32[dsp + 2884640 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884648 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884648 + (0 << 2) >> 2]);HEAPF32[dsp + 2883804 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883804 + (1 << 2) >> 2]);HEAPF32[dsp + 2883804 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883804 + (0 << 2) >> 2]);HEAPF32[dsp + 2884656 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884656 + (0 << 2) >> 2]);HEAPF32[dsp + 2884664 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884664 + (0 << 2) >> 2]);HEAPF32[dsp + 2884672 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884672 + (0 << 2) >> 2]);HEAPF32[dsp + 2883816 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883816 + (1 << 2) >> 2]);HEAPF32[dsp + 2883816 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883816 + (0 << 2) >> 2]);HEAP32[dsp + 2884680 + (1 << 2) >> 2] = (HEAP32[dsp + 2884680 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884688 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884688 + (0 << 2) >> 2]);HEAP32[dsp + 2884696 + (1 << 2) >> 2] = (HEAP32[dsp + 2884696 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884704 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884704 + (0 << 2) >> 2]);HEAP32[dsp + 2884712 + (1 << 2) >> 2] = (HEAP32[dsp + 2884712 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884720 + (1 << 2) >> 2] = (HEAP32[dsp + 2884720 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884728 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884728 + (0 << 2) >> 2]);HEAPF32[dsp + 2883828 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883828 + (1 << 2) >> 2]);HEAPF32[dsp + 2883828 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883828 + (0 << 2) >> 2]);HEAPF32[dsp + 2884736 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884736 + (0 << 2) >> 2]);HEAPF32[dsp + 2884744 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884744 + (0 << 2) >> 2]);HEAPF32[dsp + 2884752 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884752 + (0 << 2) >> 2]);HEAP32[dsp + 2884760 + (1 << 2) >> 2] = (HEAP32[dsp + 2884760 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884768 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884768 + (0 << 2) >> 2]);HEAPF32[dsp + 2883840 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883840 + (1 << 2) >> 2]);HEAPF32[dsp + 2883840 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883840 + (0 << 2) >> 2]);HEAPF32[dsp + 2884776 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884776 + (0 << 2) >> 2]);HEAPF32[dsp + 2884784 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884784 + (0 << 2) >> 2]);HEAPF32[dsp + 2884792 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884792 + (0 << 2) >> 2]);HEAPF32[dsp + 2883852 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883852 + (1 << 2) >> 2]);HEAPF32[dsp + 2883852 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883852 + (0 << 2) >> 2]);HEAP32[dsp + 2884800 + (1 << 2) >> 2] = (HEAP32[dsp + 2884800 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884808 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884808 + (0 << 2) >> 2]);HEAP32[dsp + 2884816 + (1 << 2) >> 2] = (HEAP32[dsp + 2884816 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884824 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884824 + (0 << 2) >> 2]);HEAP32[dsp + 2884832 + (1 << 2) >> 2] = (HEAP32[dsp + 2884832 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884840 + (1 << 2) >> 2] = (HEAP32[dsp + 2884840 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884848 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884848 + (0 << 2) >> 2]);HEAPF32[dsp + 2883864 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883864 + (1 << 2) >> 2]);HEAPF32[dsp + 2883864 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883864 + (0 << 2) >> 2]);HEAPF32[dsp + 2884856 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884856 + (0 << 2) >> 2]);HEAPF32[dsp + 2884864 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884864 + (0 << 2) >> 2]);HEAPF32[dsp + 2884872 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884872 + (0 << 2) >> 2]);HEAP32[dsp + 2884880 + (1 << 2) >> 2] = (HEAP32[dsp + 2884880 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884888 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884888 + (0 << 2) >> 2]);HEAPF32[dsp + 2883876 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883876 + (1 << 2) >> 2]);HEAPF32[dsp + 2883876 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883876 + (0 << 2) >> 2]);HEAPF32[dsp + 2884896 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884896 + (0 << 2) >> 2]);HEAPF32[dsp + 2884904 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884904 + (0 << 2) >> 2]);HEAPF32[dsp + 2884912 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884912 + (0 << 2) >> 2]);HEAPF32[dsp + 2883888 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883888 + (1 << 2) >> 2]);HEAPF32[dsp + 2883888 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883888 + (0 << 2) >> 2]);HEAP32[dsp + 2884920 + (1 << 2) >> 2] = (HEAP32[dsp + 2884920 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884928 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884928 + (0 << 2) >> 2]);HEAP32[dsp + 2884936 + (1 << 2) >> 2] = (HEAP32[dsp + 2884936 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884944 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884944 + (0 << 2) >> 2]);HEAP32[dsp + 2884952 + (1 << 2) >> 2] = (HEAP32[dsp + 2884952 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2884960 + (1 << 2) >> 2] = (HEAP32[dsp + 2884960 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2884968 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884968 + (0 << 2) >> 2]);HEAPF32[dsp + 2883900 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883900 + (1 << 2) >> 2]);HEAPF32[dsp + 2883900 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883900 + (0 << 2) >> 2]);HEAPF32[dsp + 2884976 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884976 + (0 << 2) >> 2]);HEAPF32[dsp + 2884984 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884984 + (0 << 2) >> 2]);HEAPF32[dsp + 2884992 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2884992 + (0 << 2) >> 2]);HEAP32[dsp + 2885000 + (1 << 2) >> 2] = (HEAP32[dsp + 2885000 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885008 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885008 + (0 << 2) >> 2]);HEAPF32[dsp + 2883912 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883912 + (1 << 2) >> 2]);HEAPF32[dsp + 2883912 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883912 + (0 << 2) >> 2]);HEAPF32[dsp + 2885016 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885016 + (0 << 2) >> 2]);HEAPF32[dsp + 2885024 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885024 + (0 << 2) >> 2]);HEAPF32[dsp + 2885032 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885032 + (0 << 2) >> 2]);HEAPF32[dsp + 2883924 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883924 + (1 << 2) >> 2]);HEAPF32[dsp + 2883924 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883924 + (0 << 2) >> 2]);HEAP32[dsp + 2885040 + (1 << 2) >> 2] = (HEAP32[dsp + 2885040 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885048 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885048 + (0 << 2) >> 2]);HEAP32[dsp + 2885056 + (1 << 2) >> 2] = (HEAP32[dsp + 2885056 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885064 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885064 + (0 << 2) >> 2]);HEAP32[dsp + 2885072 + (1 << 2) >> 2] = (HEAP32[dsp + 2885072 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2885080 + (1 << 2) >> 2] = (HEAP32[dsp + 2885080 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885088 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885088 + (0 << 2) >> 2]);HEAPF32[dsp + 2883936 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883936 + (1 << 2) >> 2]);HEAPF32[dsp + 2883936 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883936 + (0 << 2) >> 2]);HEAPF32[dsp + 2885096 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885096 + (0 << 2) >> 2]);HEAPF32[dsp + 2885104 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885104 + (0 << 2) >> 2]);HEAPF32[dsp + 2885112 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885112 + (0 << 2) >> 2]);HEAP32[dsp + 2885120 + (1 << 2) >> 2] = (HEAP32[dsp + 2885120 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885128 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885128 + (0 << 2) >> 2]);HEAPF32[dsp + 2883948 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883948 + (1 << 2) >> 2]);HEAPF32[dsp + 2883948 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883948 + (0 << 2) >> 2]);HEAPF32[dsp + 2885136 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885136 + (0 << 2) >> 2]);HEAPF32[dsp + 2885144 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885144 + (0 << 2) >> 2]);HEAPF32[dsp + 2885152 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885152 + (0 << 2) >> 2]);HEAPF32[dsp + 2883960 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883960 + (1 << 2) >> 2]);HEAPF32[dsp + 2883960 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883960 + (0 << 2) >> 2]);HEAP32[dsp + 2885160 + (1 << 2) >> 2] = (HEAP32[dsp + 2885160 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885168 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885168 + (0 << 2) >> 2]);HEAP32[dsp + 2885176 + (1 << 2) >> 2] = (HEAP32[dsp + 2885176 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885184 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885184 + (0 << 2) >> 2]);HEAP32[dsp + 2885192 + (1 << 2) >> 2] = (HEAP32[dsp + 2885192 + (0 << 2) >> 2] | 0);HEAP32[dsp + 2885200 + (1 << 2) >> 2] = (HEAP32[dsp + 2885200 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885208 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885208 + (0 << 2) >> 2]);HEAPF32[dsp + 2883972 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883972 + (1 << 2) >> 2]);HEAPF32[dsp + 2883972 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883972 + (0 << 2) >> 2]);HEAPF32[dsp + 2885216 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885216 + (0 << 2) >> 2]);HEAPF32[dsp + 2885224 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885224 + (0 << 2) >> 2]);HEAPF32[dsp + 2885232 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885232 + (0 << 2) >> 2]);HEAP32[dsp + 2885240 + (1 << 2) >> 2] = (HEAP32[dsp + 2885240 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 2885248 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885248 + (0 << 2) >> 2]);HEAPF32[dsp + 2883984 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883984 + (1 << 2) >> 2]);HEAPF32[dsp + 2883984 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883984 + (0 << 2) >> 2]);HEAPF32[dsp + 2885256 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885256 + (0 << 2) >> 2]);HEAPF32[dsp + 2885264 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885264 + (0 << 2) >> 2]);HEAPF32[dsp + 2885272 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2885272 + (0 << 2) >> 2]);HEAPF32[dsp + 2883996 + (2 << 2) >> 2] = +(HEAPF32[dsp + 2883996 + (1 << 2) >> 2]);HEAPF32[dsp + 2883996 + (1 << 2) >> 2] = +(HEAPF32[dsp + 2883996 + (0 << 2) >> 2]);}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp4() {return 2885732;}function getPathTablemydsp4() {var pathTable = [];pathTable[\"/SBlowhistleBottle/Blowhistle_Bottles/Instrument/Instrument_Hand\"] = 2885300;pathTable[\"/SBlowhistleBottle/Blowhistle_Bottles/Instrument/Whistle_Volume\"] = 2885348;pathTable[\"/SBlowhistleBottle/Blowhistle_Bottles/Echo/Echo_Intensity\"] = 2885352;return pathTable;}function getJSONmydsp4() {return \"{ \\\"name\\\": \\\"Blowhistle Bottle\\\", \\\"inputs\\\": \\\"0\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"author\\\": \\\"ER\\\" }, { \\\"description\\\": \\\"This object implements a helmholtz resonator (biquad filter) with a polynomial jet excitation (a la Cook).\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_author\\\": \\\"Priyanka Shekar (pshekar@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\\\": \\\"Copyright (c) 2013 Priyanka Shekar\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_license\\\": \\\"MIT License (MIT)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_name\\\": \\\"Harmonic Exciter\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/name\\\": \\\"Faust Audio Effect Library\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/version\\\": \\\"1.33\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/author\\\": \\\"Romain Michon (rmichon@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/copyright\\\": \\\"Romain Michon\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/licence\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/name\\\": \\\"Faust-STK Tools Library\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"licence\\\": \\\"STK-4.3\\\" }, { \\\"name\\\": \\\"Blowhistle Bottle\\\" }, { \\\"version\\\": \\\"1.0\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"SBlowhistleBottle\\\", \\\"items\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Blowhistle Bottles\\\", \\\"items\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Instrument\\\", \\\"meta\\\": [ { \\\"1\\\": \\\"\\\" } ], \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Instrument Hand\\\", \\\"address\\\": \\\"/SBlowhistleBottle/Blowhistle_Bottles/Instrument/Instrument_Hand\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"0 0 -10 0 10\\\" } ], \\\"init\\\": \\\"5\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"10\\\", \\\"step\\\": \\\"1\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Whistle Volume\\\", \\\"address\\\": \\\"/SBlowhistleBottle/Blowhistle_Bottles/Instrument/Whistle_Volume\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"2 0 -10 0 10\\\" } ], \\\"init\\\": \\\"0.07\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"0.2\\\", \\\"step\\\": \\\"0.001\\\" } ] }, { \\\"type\\\": \\\"hgroup\\\", \\\"label\\\": \\\"Echo\\\", \\\"meta\\\": [ { \\\"2\\\": \\\"\\\" } ], \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Echo Intensity\\\", \\\"address\\\": \\\"/SBlowhistleBottle/Blowhistle_Bottles/Echo/Echo_Intensity\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"2 0 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" } ], \\\"init\\\": \\\"0.48\\\", \\\"min\\\": \\\"0.2\\\", \\\"max\\\": \\\"0.98\\\", \\\"step\\\": \\\"0.01\\\" } ] } ] } ] } ] } \";}function metadatamydsp4(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"author\", \"ER\");m.declare(\"description\", \"This object implements a helmholtz resonator (biquad filter) with a polynomial jet excitation (a la Cook).\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_author\", \"Priyanka Shekar (pshekar@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\", \"Copyright (c) 2013 Priyanka Shekar\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_license\", \"MIT License (MIT)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_name\", \"Harmonic Exciter\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/name\", \"Faust Audio Effect Library\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/version\", \"1.33\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/author\", \"Romain Michon (rmichon@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/copyright\", \"Romain Michon\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/licence\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/name\", \"Faust-STK Tools Library\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"licence\", \"STK-4.3\");m.declare(\"name\", \"Blowhistle Bottle\");m.declare(\"version\", \"1.0\");}"}},"5":{"patchId":"5","code":"process = vgroup(\"SBouncyHarp\",environment{declare name \"Bouncy Harp\";\r\ndeclare author \"ER\"; //From Nonlinear EKS by Julius Smith and Romain Michon;\r\n\r\n/* =============== DESCRIPTION ================= :\r\n\r\nDo not hesitate to make swift and abrupt gestures.\r\n- Head : Silence\r\n- Swing : To pluck the strings of the harp.\r\n- Fishing rod with abrupt stop in Head position : bouncing string effect.\r\n- Frying Pan and Tennis Racket : to pluck a single bouncing string.\r\n\r\n*/\r\n\r\nimport(\"music.lib\"); // Define SR, delay\r\nimport(\"instrument.lib\");\r\nimport(\"effect.lib\"); // stereopanner\r\n\r\n//==================== INSTRUMENT =======================\r\n\r\nprocess = par(i, N, NLFeks(i)):>_;\r\n\r\nNLFeks(n) = filtered_excitation(n,P(octave(n)),octave(n)) : stringloop(octave(n));\r\n \t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n//==================== GUI SPECIFICATION ================\r\n\r\nN = 15;\r\nhand = hslider(\"[1]Instrument Hand [acc:1 1 -8 0 11]\", 0, 0, N, 1);// => gate\r\ngain = 1;\r\nreverse = select2(_, 1, 0);\r\npickangle = 0.9 * hslider(\"[3]Dry/Soft Strings[acc:2 0 -10 0 10]\", 0.45,0,0.9,0.1);\r\n\r\nbeta = hslider(\"[4]Picking Position [acc:2 0 -10 0 10]\", 0.13, 0.02, 0.5, 0.01);\r\nt60 = hslider(\"[5]Resonance (InstrReverb)[acc:1 0 -10 0 10]\", 5, 0.5, 10, 0.01); // -60db decay time (sec)\r\n\r\nB = 0.5;\r\nL = -10 : db2linear;\r\n\r\n//---------------------------------- FREQUENCY TABLE ---------------------------\r\n\r\nfreq(0) = 115;\r\nfreq(1) = 130;\r\nfreq(2) = 145;\r\nfreq(3) = 160;\r\nfreq(4) = 175;\r\n\r\nfreq(d)\t = freq(d-5)*(2);\r\noctave(d) = freq(d) * hslider(\"Hight[acc:2 0 -10 0 10]\", 3, 1, 6, 0.1) : smooth(0.999);\t\r\n\t\r\n\r\n//==================== SIGNAL PROCESSING ================\r\n\r\n//----------------------- noiseburst -------------------------\r\n// White noise burst (adapted from Faust's karplus.dsp example)\r\n// Requires music.lib (for noise)\r\nnoiseburst(d,e) = noise : *(trigger(d,e))\r\nwith{\r\nupfront(x) = (x-x') > 0;\r\ndecay(n,x) = x - (x>0)/n;\r\nrelease(n) = + ~ decay(n);\r\nposition(d) = abs(hand - d) < 0.5;\r\ntrigger(d,n) = position(d) : upfront : release(n) : > (0.0);\r\n};\r\n\r\n\r\nP(f) = SR/f ; // fundamental period in samples\r\nPmax = 4096; // maximum P (for delay-line allocation)\r\n\r\nppdel(f) = beta*P(f); // pick position delay\r\npickposfilter(f) = ffcombfilter(Pmax,ppdel(f),-1); // defined in filter.lib\r\n\r\nexcitation(d,e) = noiseburst(d,e) : *(gain); // defined in signal.lib\r\n\r\nrho(f) = pow(0.001,1.0/(f*t60)); // multiplies loop-gain\r\n\r\n// Original EKS damping filter:\r\nb1 = 0.5*B; b0 = 1.0-b1; // S and 1-S\r\ndampingfilter1(f,x) = rho(f) * ((b0 * x) + (b1 * x'));\r\n\r\n// Linear phase FIR3 damping filter:\r\nh0 = (1.0 + B)/2; h1 = (1.0 - B)/4;\r\ndampingfilter2(f,x) = rho(f) * (h0 * x' + h1*(x+x''));\r\n\r\nloopfilter(f) = dampingfilter2(f); // or dampingfilter1\r\n\r\nfiltered_excitation(d,e,f) = excitation(d,e) : smooth(pickangle) \r\n\t\t : pickposfilter(f) : levelfilter(L,f); // see filter.lib\r\n\r\n\r\nstringloop(f) = (+ : fdelay4(Pmax, P(f)-2)) ~ (loopfilter(f));// : NLFM(f));\r\n\r\n}.process);","name":"SBouncyHarp","x":"146","y":"77","inputs":{"source":[]},"outputs":{"destination":["8"]},"params":{"sliders":[{"path":"/SBouncyHarp/Hight","value":3},{"path":"/SBouncyHarp/Instrument_Hand","value":0},{"path":"/SBouncyHarp/Dry/Soft_Strings","value":0.44999998807907104},{"path":"/SBouncyHarp/Picking_Position","value":0.12999999523162842},{"path":"/SBouncyHarp/Resonance_(InstrReverb)","value":5}]},"factory":{"name":"mydsp5","code":"/* ------------------------------------------------------------author: \"ER\"name: \"Bouncy Harp\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp5Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var fabsf = global.Math.abs;var max = global.Math.max;var min = global.Math.min;var powf = global.Math.pow;function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputs(dsp) {dsp = dsp | 0;return 0;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;var i6 = 0;var i7 = 0;var i8 = 0;var i9 = 0;var i10 = 0;var i11 = 0;var i12 = 0;var i13 = 0;var i14 = 0;var i15 = 0;var i16 = 0;var i17 = 0;var i18 = 0;var i19 = 0;var i20 = 0;var i21 = 0;var i22 = 0;var i23 = 0;var i24 = 0;var i25 = 0;var i26 = 0;var i27 = 0;var i28 = 0;var i29 = 0;var i30 = 0;var i31 = 0;var i32 = 0;var i33 = 0;var i34 = 0;var i35 = 0;var i36 = 0;var i37 = 0;var i38 = 0;var i39 = 0;var i40 = 0;var i41 = 0;var i42 = 0;var i43 = 0;var i44 = 0;var i45 = 0;var i46 = 0;var i47 = 0;var i48 = 0;var i49 = 0;var i50 = 0;var i51 = 0;var i52 = 0;var i53 = 0;var i54 = 0;var i55 = 0;var i56 = 0;var i57 = 0;var i58 = 0;var i59 = 0;var i60 = 0;var i61 = 0;var i62 = 0;var i63 = 0;var i64 = 0;var i65 = 0;var i66 = 0;var i67 = 0;var i68 = 0;var i69 = 0;var i70 = 0;var i71 = 0;var i72 = 0;var i73 = 0;var i74 = 0;var i75 = 0;var i76 = 0;var i77 = 0;var i78 = 0;var i79 = 0;var i80 = 0;var i81 = 0;var i82 = 0;var i83 = 0;var i84 = 0;var i85 = 0;var i86 = 0;var i87 = 0;var i88 = 0;var i89 = 0;var i90 = 0;var i91 = 0;var i92 = 0;var i93 = 0;var i94 = 0;var i95 = 0;var i96 = 0;var i97 = 0;var i98 = 0;var i99 = 0;var i100 = 0;var i101 = 0;var i102 = 0;var i103 = 0;var i104 = 0;var i105 = 0;HEAP32[dsp + 492256 >> 2] = (samplingFreq | 0);HEAPF32[dsp + 492248 >> 2] = +(0.45);for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAP32[dsp + 491760 + ((i0 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 492252 >> 2] = +(0.);for (i1 = 0; (((i1 | 0) < 2) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAP32[dsp + 491768 + ((i1 | 0) << 2) >> 2] = 0;}HEAP32[dsp + 492260 >> 2] = ((min(192000, ((max(1, (HEAP32[dsp + 492256 >> 2] | 0))) | 0))) | 0);HEAPF32[dsp + 492264 >> 2] = +(1. / +((HEAP32[dsp + 492260 >> 2] | 0)));HEAPF32[dsp + 492268 >> 2] = +(3.);for (i2 = 0; (((i2 | 0) < 2) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAPF32[dsp + 491776 + ((i2 | 0) << 2) >> 2] = 0.;}for (i3 = 0; (((i3 | 0) < 2) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAPF32[dsp + 491784 + ((i3 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 492272 >> 2] = 0;for (i4 = 0; (((i4 | 0) < 4096) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAPF32[dsp + 0 + ((i4 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 492276 >> 2] = +(0.13);HEAPF32[dsp + 492280 >> 2] = +(5.);HEAPF32[dsp + 492284 >> 2] = +(3.14159 / +((HEAP32[dsp + 492260 >> 2] | 0)));for (i5 = 0; (((i5 | 0) < 2) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAPF32[dsp + 491792 + ((i5 | 0) << 2) >> 2] = 0.;}for (i6 = 0; (((i6 | 0) < 4096) | 0); i6 = (((i6 | 0) + 1) | 0)) {HEAPF32[dsp + 16384 + ((i6 | 0) << 2) >> 2] = 0.;}for (i7 = 0; (((i7 | 0) < 4) | 0); i7 = (((i7 | 0) + 1) | 0)) {HEAPF32[dsp + 491520 + ((i7 | 0) << 2) >> 2] = 0.;}for (i8 = 0; (((i8 | 0) < 2) | 0); i8 = (((i8 | 0) + 1) | 0)) {HEAP32[dsp + 491800 + ((i8 | 0) << 2) >> 2] = 0;}for (i9 = 0; (((i9 | 0) < 2) | 0); i9 = (((i9 | 0) + 1) | 0)) {HEAPF32[dsp + 491808 + ((i9 | 0) << 2) >> 2] = 0.;}for (i10 = 0; (((i10 | 0) < 2) | 0); i10 = (((i10 | 0) + 1) | 0)) {HEAPF32[dsp + 491816 + ((i10 | 0) << 2) >> 2] = 0.;}for (i11 = 0; (((i11 | 0) < 4096) | 0); i11 = (((i11 | 0) + 1) | 0)) {HEAPF32[dsp + 32768 + ((i11 | 0) << 2) >> 2] = 0.;}for (i12 = 0; (((i12 | 0) < 2) | 0); i12 = (((i12 | 0) + 1) | 0)) {HEAPF32[dsp + 491824 + ((i12 | 0) << 2) >> 2] = 0.;}for (i13 = 0; (((i13 | 0) < 4096) | 0); i13 = (((i13 | 0) + 1) | 0)) {HEAPF32[dsp + 49152 + ((i13 | 0) << 2) >> 2] = 0.;}for (i14 = 0; (((i14 | 0) < 4) | 0); i14 = (((i14 | 0) + 1) | 0)) {HEAPF32[dsp + 491536 + ((i14 | 0) << 2) >> 2] = 0.;}for (i15 = 0; (((i15 | 0) < 2) | 0); i15 = (((i15 | 0) + 1) | 0)) {HEAP32[dsp + 491832 + ((i15 | 0) << 2) >> 2] = 0;}for (i16 = 0; (((i16 | 0) < 2) | 0); i16 = (((i16 | 0) + 1) | 0)) {HEAPF32[dsp + 491840 + ((i16 | 0) << 2) >> 2] = 0.;}for (i17 = 0; (((i17 | 0) < 2) | 0); i17 = (((i17 | 0) + 1) | 0)) {HEAPF32[dsp + 491848 + ((i17 | 0) << 2) >> 2] = 0.;}for (i18 = 0; (((i18 | 0) < 4096) | 0); i18 = (((i18 | 0) + 1) | 0)) {HEAPF32[dsp + 65536 + ((i18 | 0) << 2) >> 2] = 0.;}for (i19 = 0; (((i19 | 0) < 2) | 0); i19 = (((i19 | 0) + 1) | 0)) {HEAPF32[dsp + 491856 + ((i19 | 0) << 2) >> 2] = 0.;}for (i20 = 0; (((i20 | 0) < 4096) | 0); i20 = (((i20 | 0) + 1) | 0)) {HEAPF32[dsp + 81920 + ((i20 | 0) << 2) >> 2] = 0.;}for (i21 = 0; (((i21 | 0) < 4) | 0); i21 = (((i21 | 0) + 1) | 0)) {HEAPF32[dsp + 491552 + ((i21 | 0) << 2) >> 2] = 0.;}for (i22 = 0; (((i22 | 0) < 2) | 0); i22 = (((i22 | 0) + 1) | 0)) {HEAP32[dsp + 491864 + ((i22 | 0) << 2) >> 2] = 0;}for (i23 = 0; (((i23 | 0) < 2) | 0); i23 = (((i23 | 0) + 1) | 0)) {HEAPF32[dsp + 491872 + ((i23 | 0) << 2) >> 2] = 0.;}for (i24 = 0; (((i24 | 0) < 2) | 0); i24 = (((i24 | 0) + 1) | 0)) {HEAPF32[dsp + 491880 + ((i24 | 0) << 2) >> 2] = 0.;}for (i25 = 0; (((i25 | 0) < 4096) | 0); i25 = (((i25 | 0) + 1) | 0)) {HEAPF32[dsp + 98304 + ((i25 | 0) << 2) >> 2] = 0.;}for (i26 = 0; (((i26 | 0) < 2) | 0); i26 = (((i26 | 0) + 1) | 0)) {HEAPF32[dsp + 491888 + ((i26 | 0) << 2) >> 2] = 0.;}for (i27 = 0; (((i27 | 0) < 4096) | 0); i27 = (((i27 | 0) + 1) | 0)) {HEAPF32[dsp + 114688 + ((i27 | 0) << 2) >> 2] = 0.;}for (i28 = 0; (((i28 | 0) < 4) | 0); i28 = (((i28 | 0) + 1) | 0)) {HEAPF32[dsp + 491568 + ((i28 | 0) << 2) >> 2] = 0.;}for (i29 = 0; (((i29 | 0) < 2) | 0); i29 = (((i29 | 0) + 1) | 0)) {HEAP32[dsp + 491896 + ((i29 | 0) << 2) >> 2] = 0;}for (i30 = 0; (((i30 | 0) < 2) | 0); i30 = (((i30 | 0) + 1) | 0)) {HEAPF32[dsp + 491904 + ((i30 | 0) << 2) >> 2] = 0.;}for (i31 = 0; (((i31 | 0) < 2) | 0); i31 = (((i31 | 0) + 1) | 0)) {HEAPF32[dsp + 491912 + ((i31 | 0) << 2) >> 2] = 0.;}for (i32 = 0; (((i32 | 0) < 4096) | 0); i32 = (((i32 | 0) + 1) | 0)) {HEAPF32[dsp + 131072 + ((i32 | 0) << 2) >> 2] = 0.;}for (i33 = 0; (((i33 | 0) < 2) | 0); i33 = (((i33 | 0) + 1) | 0)) {HEAPF32[dsp + 491920 + ((i33 | 0) << 2) >> 2] = 0.;}for (i34 = 0; (((i34 | 0) < 4096) | 0); i34 = (((i34 | 0) + 1) | 0)) {HEAPF32[dsp + 147456 + ((i34 | 0) << 2) >> 2] = 0.;}for (i35 = 0; (((i35 | 0) < 4) | 0); i35 = (((i35 | 0) + 1) | 0)) {HEAPF32[dsp + 491584 + ((i35 | 0) << 2) >> 2] = 0.;}for (i36 = 0; (((i36 | 0) < 2) | 0); i36 = (((i36 | 0) + 1) | 0)) {HEAP32[dsp + 491928 + ((i36 | 0) << 2) >> 2] = 0;}for (i37 = 0; (((i37 | 0) < 2) | 0); i37 = (((i37 | 0) + 1) | 0)) {HEAPF32[dsp + 491936 + ((i37 | 0) << 2) >> 2] = 0.;}for (i38 = 0; (((i38 | 0) < 2) | 0); i38 = (((i38 | 0) + 1) | 0)) {HEAPF32[dsp + 491944 + ((i38 | 0) << 2) >> 2] = 0.;}for (i39 = 0; (((i39 | 0) < 4096) | 0); i39 = (((i39 | 0) + 1) | 0)) {HEAPF32[dsp + 163840 + ((i39 | 0) << 2) >> 2] = 0.;}for (i40 = 0; (((i40 | 0) < 2) | 0); i40 = (((i40 | 0) + 1) | 0)) {HEAPF32[dsp + 491952 + ((i40 | 0) << 2) >> 2] = 0.;}for (i41 = 0; (((i41 | 0) < 4096) | 0); i41 = (((i41 | 0) + 1) | 0)) {HEAPF32[dsp + 180224 + ((i41 | 0) << 2) >> 2] = 0.;}for (i42 = 0; (((i42 | 0) < 4) | 0); i42 = (((i42 | 0) + 1) | 0)) {HEAPF32[dsp + 491600 + ((i42 | 0) << 2) >> 2] = 0.;}for (i43 = 0; (((i43 | 0) < 2) | 0); i43 = (((i43 | 0) + 1) | 0)) {HEAP32[dsp + 491960 + ((i43 | 0) << 2) >> 2] = 0;}for (i44 = 0; (((i44 | 0) < 2) | 0); i44 = (((i44 | 0) + 1) | 0)) {HEAPF32[dsp + 491968 + ((i44 | 0) << 2) >> 2] = 0.;}for (i45 = 0; (((i45 | 0) < 2) | 0); i45 = (((i45 | 0) + 1) | 0)) {HEAPF32[dsp + 491976 + ((i45 | 0) << 2) >> 2] = 0.;}for (i46 = 0; (((i46 | 0) < 4096) | 0); i46 = (((i46 | 0) + 1) | 0)) {HEAPF32[dsp + 196608 + ((i46 | 0) << 2) >> 2] = 0.;}for (i47 = 0; (((i47 | 0) < 2) | 0); i47 = (((i47 | 0) + 1) | 0)) {HEAPF32[dsp + 491984 + ((i47 | 0) << 2) >> 2] = 0.;}for (i48 = 0; (((i48 | 0) < 4096) | 0); i48 = (((i48 | 0) + 1) | 0)) {HEAPF32[dsp + 212992 + ((i48 | 0) << 2) >> 2] = 0.;}for (i49 = 0; (((i49 | 0) < 4) | 0); i49 = (((i49 | 0) + 1) | 0)) {HEAPF32[dsp + 491616 + ((i49 | 0) << 2) >> 2] = 0.;}for (i50 = 0; (((i50 | 0) < 2) | 0); i50 = (((i50 | 0) + 1) | 0)) {HEAP32[dsp + 491992 + ((i50 | 0) << 2) >> 2] = 0;}for (i51 = 0; (((i51 | 0) < 2) | 0); i51 = (((i51 | 0) + 1) | 0)) {HEAPF32[dsp + 492000 + ((i51 | 0) << 2) >> 2] = 0.;}for (i52 = 0; (((i52 | 0) < 2) | 0); i52 = (((i52 | 0) + 1) | 0)) {HEAPF32[dsp + 492008 + ((i52 | 0) << 2) >> 2] = 0.;}for (i53 = 0; (((i53 | 0) < 4096) | 0); i53 = (((i53 | 0) + 1) | 0)) {HEAPF32[dsp + 229376 + ((i53 | 0) << 2) >> 2] = 0.;}for (i54 = 0; (((i54 | 0) < 2) | 0); i54 = (((i54 | 0) + 1) | 0)) {HEAPF32[dsp + 492016 + ((i54 | 0) << 2) >> 2] = 0.;}for (i55 = 0; (((i55 | 0) < 4096) | 0); i55 = (((i55 | 0) + 1) | 0)) {HEAPF32[dsp + 245760 + ((i55 | 0) << 2) >> 2] = 0.;}for (i56 = 0; (((i56 | 0) < 4) | 0); i56 = (((i56 | 0) + 1) | 0)) {HEAPF32[dsp + 491632 + ((i56 | 0) << 2) >> 2] = 0.;}for (i57 = 0; (((i57 | 0) < 2) | 0); i57 = (((i57 | 0) + 1) | 0)) {HEAP32[dsp + 492024 + ((i57 | 0) << 2) >> 2] = 0;}for (i58 = 0; (((i58 | 0) < 2) | 0); i58 = (((i58 | 0) + 1) | 0)) {HEAPF32[dsp + 492032 + ((i58 | 0) << 2) >> 2] = 0.;}for (i59 = 0; (((i59 | 0) < 2) | 0); i59 = (((i59 | 0) + 1) | 0)) {HEAPF32[dsp + 492040 + ((i59 | 0) << 2) >> 2] = 0.;}for (i60 = 0; (((i60 | 0) < 4096) | 0); i60 = (((i60 | 0) + 1) | 0)) {HEAPF32[dsp + 262144 + ((i60 | 0) << 2) >> 2] = 0.;}for (i61 = 0; (((i61 | 0) < 2) | 0); i61 = (((i61 | 0) + 1) | 0)) {HEAPF32[dsp + 492048 + ((i61 | 0) << 2) >> 2] = 0.;}for (i62 = 0; (((i62 | 0) < 4096) | 0); i62 = (((i62 | 0) + 1) | 0)) {HEAPF32[dsp + 278528 + ((i62 | 0) << 2) >> 2] = 0.;}for (i63 = 0; (((i63 | 0) < 4) | 0); i63 = (((i63 | 0) + 1) | 0)) {HEAPF32[dsp + 491648 + ((i63 | 0) << 2) >> 2] = 0.;}for (i64 = 0; (((i64 | 0) < 2) | 0); i64 = (((i64 | 0) + 1) | 0)) {HEAP32[dsp + 492056 + ((i64 | 0) << 2) >> 2] = 0;}for (i65 = 0; (((i65 | 0) < 2) | 0); i65 = (((i65 | 0) + 1) | 0)) {HEAPF32[dsp + 492064 + ((i65 | 0) << 2) >> 2] = 0.;}for (i66 = 0; (((i66 | 0) < 2) | 0); i66 = (((i66 | 0) + 1) | 0)) {HEAPF32[dsp + 492072 + ((i66 | 0) << 2) >> 2] = 0.;}for (i67 = 0; (((i67 | 0) < 4096) | 0); i67 = (((i67 | 0) + 1) | 0)) {HEAPF32[dsp + 294912 + ((i67 | 0) << 2) >> 2] = 0.;}for (i68 = 0; (((i68 | 0) < 2) | 0); i68 = (((i68 | 0) + 1) | 0)) {HEAPF32[dsp + 492080 + ((i68 | 0) << 2) >> 2] = 0.;}for (i69 = 0; (((i69 | 0) < 4096) | 0); i69 = (((i69 | 0) + 1) | 0)) {HEAPF32[dsp + 311296 + ((i69 | 0) << 2) >> 2] = 0.;}for (i70 = 0; (((i70 | 0) < 4) | 0); i70 = (((i70 | 0) + 1) | 0)) {HEAPF32[dsp + 491664 + ((i70 | 0) << 2) >> 2] = 0.;}for (i71 = 0; (((i71 | 0) < 2) | 0); i71 = (((i71 | 0) + 1) | 0)) {HEAP32[dsp + 492088 + ((i71 | 0) << 2) >> 2] = 0;}for (i72 = 0; (((i72 | 0) < 2) | 0); i72 = (((i72 | 0) + 1) | 0)) {HEAPF32[dsp + 492096 + ((i72 | 0) << 2) >> 2] = 0.;}for (i73 = 0; (((i73 | 0) < 2) | 0); i73 = (((i73 | 0) + 1) | 0)) {HEAPF32[dsp + 492104 + ((i73 | 0) << 2) >> 2] = 0.;}for (i74 = 0; (((i74 | 0) < 4096) | 0); i74 = (((i74 | 0) + 1) | 0)) {HEAPF32[dsp + 327680 + ((i74 | 0) << 2) >> 2] = 0.;}for (i75 = 0; (((i75 | 0) < 2) | 0); i75 = (((i75 | 0) + 1) | 0)) {HEAPF32[dsp + 492112 + ((i75 | 0) << 2) >> 2] = 0.;}for (i76 = 0; (((i76 | 0) < 4096) | 0); i76 = (((i76 | 0) + 1) | 0)) {HEAPF32[dsp + 344064 + ((i76 | 0) << 2) >> 2] = 0.;}for (i77 = 0; (((i77 | 0) < 4) | 0); i77 = (((i77 | 0) + 1) | 0)) {HEAPF32[dsp + 491680 + ((i77 | 0) << 2) >> 2] = 0.;}for (i78 = 0; (((i78 | 0) < 2) | 0); i78 = (((i78 | 0) + 1) | 0)) {HEAP32[dsp + 492120 + ((i78 | 0) << 2) >> 2] = 0;}for (i79 = 0; (((i79 | 0) < 2) | 0); i79 = (((i79 | 0) + 1) | 0)) {HEAPF32[dsp + 492128 + ((i79 | 0) << 2) >> 2] = 0.;}for (i80 = 0; (((i80 | 0) < 2) | 0); i80 = (((i80 | 0) + 1) | 0)) {HEAPF32[dsp + 492136 + ((i80 | 0) << 2) >> 2] = 0.;}for (i81 = 0; (((i81 | 0) < 4096) | 0); i81 = (((i81 | 0) + 1) | 0)) {HEAPF32[dsp + 360448 + ((i81 | 0) << 2) >> 2] = 0.;}for (i82 = 0; (((i82 | 0) < 2) | 0); i82 = (((i82 | 0) + 1) | 0)) {HEAPF32[dsp + 492144 + ((i82 | 0) << 2) >> 2] = 0.;}for (i83 = 0; (((i83 | 0) < 4096) | 0); i83 = (((i83 | 0) + 1) | 0)) {HEAPF32[dsp + 376832 + ((i83 | 0) << 2) >> 2] = 0.;}for (i84 = 0; (((i84 | 0) < 4) | 0); i84 = (((i84 | 0) + 1) | 0)) {HEAPF32[dsp + 491696 + ((i84 | 0) << 2) >> 2] = 0.;}for (i85 = 0; (((i85 | 0) < 2) | 0); i85 = (((i85 | 0) + 1) | 0)) {HEAP32[dsp + 492152 + ((i85 | 0) << 2) >> 2] = 0;}for (i86 = 0; (((i86 | 0) < 2) | 0); i86 = (((i86 | 0) + 1) | 0)) {HEAPF32[dsp + 492160 + ((i86 | 0) << 2) >> 2] = 0.;}for (i87 = 0; (((i87 | 0) < 2) | 0); i87 = (((i87 | 0) + 1) | 0)) {HEAPF32[dsp + 492168 + ((i87 | 0) << 2) >> 2] = 0.;}for (i88 = 0; (((i88 | 0) < 4096) | 0); i88 = (((i88 | 0) + 1) | 0)) {HEAPF32[dsp + 393216 + ((i88 | 0) << 2) >> 2] = 0.;}for (i89 = 0; (((i89 | 0) < 2) | 0); i89 = (((i89 | 0) + 1) | 0)) {HEAPF32[dsp + 492176 + ((i89 | 0) << 2) >> 2] = 0.;}for (i90 = 0; (((i90 | 0) < 4096) | 0); i90 = (((i90 | 0) + 1) | 0)) {HEAPF32[dsp + 409600 + ((i90 | 0) << 2) >> 2] = 0.;}for (i91 = 0; (((i91 | 0) < 4) | 0); i91 = (((i91 | 0) + 1) | 0)) {HEAPF32[dsp + 491712 + ((i91 | 0) << 2) >> 2] = 0.;}for (i92 = 0; (((i92 | 0) < 2) | 0); i92 = (((i92 | 0) + 1) | 0)) {HEAP32[dsp + 492184 + ((i92 | 0) << 2) >> 2] = 0;}for (i93 = 0; (((i93 | 0) < 2) | 0); i93 = (((i93 | 0) + 1) | 0)) {HEAPF32[dsp + 492192 + ((i93 | 0) << 2) >> 2] = 0.;}for (i94 = 0; (((i94 | 0) < 2) | 0); i94 = (((i94 | 0) + 1) | 0)) {HEAPF32[dsp + 492200 + ((i94 | 0) << 2) >> 2] = 0.;}for (i95 = 0; (((i95 | 0) < 4096) | 0); i95 = (((i95 | 0) + 1) | 0)) {HEAPF32[dsp + 425984 + ((i95 | 0) << 2) >> 2] = 0.;}for (i96 = 0; (((i96 | 0) < 2) | 0); i96 = (((i96 | 0) + 1) | 0)) {HEAPF32[dsp + 492208 + ((i96 | 0) << 2) >> 2] = 0.;}for (i97 = 0; (((i97 | 0) < 4096) | 0); i97 = (((i97 | 0) + 1) | 0)) {HEAPF32[dsp + 442368 + ((i97 | 0) << 2) >> 2] = 0.;}for (i98 = 0; (((i98 | 0) < 4) | 0); i98 = (((i98 | 0) + 1) | 0)) {HEAPF32[dsp + 491728 + ((i98 | 0) << 2) >> 2] = 0.;}for (i99 = 0; (((i99 | 0) < 2) | 0); i99 = (((i99 | 0) + 1) | 0)) {HEAP32[dsp + 492216 + ((i99 | 0) << 2) >> 2] = 0;}for (i100 = 0; (((i100 | 0) < 2) | 0); i100 = (((i100 | 0) + 1) | 0)) {HEAPF32[dsp + 492224 + ((i100 | 0) << 2) >> 2] = 0.;}for (i101 = 0; (((i101 | 0) < 2) | 0); i101 = (((i101 | 0) + 1) | 0)) {HEAPF32[dsp + 492232 + ((i101 | 0) << 2) >> 2] = 0.;}for (i102 = 0; (((i102 | 0) < 4096) | 0); i102 = (((i102 | 0) + 1) | 0)) {HEAPF32[dsp + 458752 + ((i102 | 0) << 2) >> 2] = 0.;}for (i103 = 0; (((i103 | 0) < 2) | 0); i103 = (((i103 | 0) + 1) | 0)) {HEAPF32[dsp + 492240 + ((i103 | 0) << 2) >> 2] = 0.;}for (i104 = 0; (((i104 | 0) < 4096) | 0); i104 = (((i104 | 0) + 1) | 0)) {HEAPF32[dsp + 475136 + ((i104 | 0) << 2) >> 2] = 0.;}for (i105 = 0; (((i105 | 0) < 4) | 0); i105 = (((i105 | 0) + 1) | 0)) {HEAPF32[dsp + 491744 + ((i105 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var output0 = 0;var fSlow0 = 0.;var fSlow1 = 0.;var fSlow2 = 0.;var iSlow3 = 0;var fSlow4 = 0.;var fSlow5 = 0.;var fSlow6 = 0.;var fSlow7 = 0.;var iSlow8 = 0;var fSlow9 = 0.;var iSlow10 = 0;var fSlow11 = 0.;var iSlow12 = 0;var fSlow13 = 0.;var iSlow14 = 0;var fSlow15 = 0.;var iSlow16 = 0;var fSlow17 = 0.;var iSlow18 = 0;var fSlow19 = 0.;var iSlow20 = 0;var fSlow21 = 0.;var iSlow22 = 0;var fSlow23 = 0.;var iSlow24 = 0;var fSlow25 = 0.;var iSlow26 = 0;var fSlow27 = 0.;var iSlow28 = 0;var fSlow29 = 0.;var iSlow30 = 0;var fSlow31 = 0.;var iSlow32 = 0;var fSlow33 = 0.;var iSlow34 = 0;var fSlow35 = 0.;var i = 0;var fTemp0 = 0.;var fTemp1 = 0.;var fTemp2 = 0.;var fTemp3 = 0.;var iTemp4 = 0;var fTemp5 = 0.;var fTemp6 = 0.;var fTemp7 = 0.;var fTemp8 = 0.;var fTemp9 = 0.;var fTemp10 = 0.;var fTemp11 = 0.;var fTemp12 = 0.;var fTemp13 = 0.;var iTemp14 = 0;var fTemp15 = 0.;var fTemp16 = 0.;var fTemp17 = 0.;var fTemp18 = 0.;var fTemp19 = 0.;var fTemp20 = 0.;var fTemp21 = 0.;var fTemp22 = 0.;var fTemp23 = 0.;var iTemp24 = 0;var fTemp25 = 0.;var fTemp26 = 0.;var fTemp27 = 0.;var fTemp28 = 0.;var fTemp29 = 0.;var fTemp30 = 0.;var fTemp31 = 0.;var fTemp32 = 0.;var fTemp33 = 0.;var iTemp34 = 0;var fTemp35 = 0.;var fTemp36 = 0.;var fTemp37 = 0.;var fTemp38 = 0.;var fTemp39 = 0.;var fTemp40 = 0.;var fTemp41 = 0.;var fTemp42 = 0.;var fTemp43 = 0.;var iTemp44 = 0;var fTemp45 = 0.;var fTemp46 = 0.;var fTemp47 = 0.;var fTemp48 = 0.;var fTemp49 = 0.;var fTemp50 = 0.;var fTemp51 = 0.;var fTemp52 = 0.;var fTemp53 = 0.;var iTemp54 = 0;var fTemp55 = 0.;var fTemp56 = 0.;var fTemp57 = 0.;var fTemp58 = 0.;var fTemp59 = 0.;var fTemp60 = 0.;var fTemp61 = 0.;var fTemp62 = 0.;var fTemp63 = 0.;var iTemp64 = 0;var fTemp65 = 0.;var fTemp66 = 0.;var fTemp67 = 0.;var fTemp68 = 0.;var fTemp69 = 0.;var fTemp70 = 0.;var fTemp71 = 0.;var fTemp72 = 0.;var fTemp73 = 0.;var iTemp74 = 0;var fTemp75 = 0.;var fTemp76 = 0.;var fTemp77 = 0.;var fTemp78 = 0.;var fTemp79 = 0.;var fTemp80 = 0.;var fTemp81 = 0.;var fTemp82 = 0.;var fTemp83 = 0.;var iTemp84 = 0;var fTemp85 = 0.;var fTemp86 = 0.;var fTemp87 = 0.;var fTemp88 = 0.;var fTemp89 = 0.;var fTemp90 = 0.;var fTemp91 = 0.;var fTemp92 = 0.;var fTemp93 = 0.;var iTemp94 = 0;var fTemp95 = 0.;var fTemp96 = 0.;var fTemp97 = 0.;var fTemp98 = 0.;var fTemp99 = 0.;var fTemp100 = 0.;var fTemp101 = 0.;var fTemp102 = 0.;var fTemp103 = 0.;var iTemp104 = 0;var fTemp105 = 0.;var fTemp106 = 0.;var fTemp107 = 0.;var fTemp108 = 0.;var fTemp109 = 0.;var fTemp110 = 0.;var fTemp111 = 0.;var fTemp112 = 0.;var fTemp113 = 0.;var iTemp114 = 0;var fTemp115 = 0.;var fTemp116 = 0.;var fTemp117 = 0.;var fTemp118 = 0.;var fTemp119 = 0.;var fTemp120 = 0.;var fTemp121 = 0.;var fTemp122 = 0.;var fTemp123 = 0.;var iTemp124 = 0;var fTemp125 = 0.;var fTemp126 = 0.;var fTemp127 = 0.;var fTemp128 = 0.;var fTemp129 = 0.;var fTemp130 = 0.;var fTemp131 = 0.;var fTemp132 = 0.;var fTemp133 = 0.;var iTemp134 = 0;var fTemp135 = 0.;var fTemp136 = 0.;var fTemp137 = 0.;var fTemp138 = 0.;var fTemp139 = 0.;var fTemp140 = 0.;var fTemp141 = 0.;var fTemp142 = 0.;var fTemp143 = 0.;var iTemp144 = 0;var fTemp145 = 0.;var fTemp146 = 0.;var fTemp147 = 0.;var fTemp148 = 0.;var fTemp149 = 0.;var j0 = 3;var j1 = 3;var j2 = 3;var j3 = 3;var j4 = 3;var j5 = 3;var j6 = 3;var j7 = 3;var j8 = 3;var j9 = 3;var j10 = 3;var j11 = 3;var j12 = 3;var j13 = 3;var j14 = 3;output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);fSlow0 = +(0.9 * +(+(HEAPF32[dsp + 492248 >> 2])));fSlow1 = +(4.65661e-10 * +(1. - +(fSlow0)));fSlow2 = +(+(HEAPF32[dsp + 492252 >> 2]));iSlow3 = ((+(fabsf(+(fSlow2))) < 0.5) | 0);fSlow4 = +(+(HEAPF32[dsp + 492268 >> 2]));fSlow5 = +(0.115 * +(fSlow4));fSlow6 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) * +(+(HEAPF32[dsp + 492276 >> 2])));fSlow7 = +(1. / +(+(HEAPF32[dsp + 492280 >> 2])));iSlow8 = ((+(fabsf(+(+(fSlow2) - 1.))) < 0.5) | 0);fSlow9 = +(0.13 * +(fSlow4));iSlow10 = ((+(fabsf(+(+(fSlow2) - 2.))) < 0.5) | 0);fSlow11 = +(0.145 * +(fSlow4));iSlow12 = ((+(fabsf(+(+(fSlow2) - 3.))) < 0.5) | 0);fSlow13 = +(0.16 * +(fSlow4));iSlow14 = ((+(fabsf(+(+(fSlow2) - 4.))) < 0.5) | 0);fSlow15 = +(0.175 * +(fSlow4));iSlow16 = ((+(fabsf(+(+(fSlow2) - 5.))) < 0.5) | 0);fSlow17 = +(0.23 * +(fSlow4));iSlow18 = ((+(fabsf(+(+(fSlow2) - 6.))) < 0.5) | 0);fSlow19 = +(0.26 * +(fSlow4));iSlow20 = ((+(fabsf(+(+(fSlow2) - 7.))) < 0.5) | 0);fSlow21 = +(0.29 * +(fSlow4));iSlow22 = ((+(fabsf(+(+(fSlow2) - 8.))) < 0.5) | 0);fSlow23 = +(0.32 * +(fSlow4));iSlow24 = ((+(fabsf(+(+(fSlow2) - 9.))) < 0.5) | 0);fSlow25 = +(0.35 * +(fSlow4));iSlow26 = ((+(fabsf(+(+(fSlow2) - 10.))) < 0.5) | 0);fSlow27 = +(0.46 * +(fSlow4));iSlow28 = ((+(fabsf(+(+(fSlow2) - 11.))) < 0.5) | 0);fSlow29 = +(0.52 * +(fSlow4));iSlow30 = ((+(fabsf(+(+(fSlow2) - 12.))) < 0.5) | 0);fSlow31 = +(0.58 * +(fSlow4));iSlow32 = ((+(fabsf(+(+(fSlow2) - 13.))) < 0.5) | 0);fSlow33 = +(0.64 * +(fSlow4));iSlow34 = ((+(fabsf(+(+(fSlow2) - 14.))) < 0.5) | 0);fSlow35 = +(0.7 * +(fSlow4));for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAP32[dsp + 491760 + (0 << 2) >> 2] = ((12345 + (imul(1103515245, (HEAP32[dsp + 491760 + (1 << 2) >> 2] | 0)) | 0)) | 0);HEAP32[dsp + 491768 + (0 << 2) >> 2] = (iSlow3 | 0);HEAPF32[dsp + 491776 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 491776 + (1 << 2) >> 2])) + +(fSlow5));HEAPF32[dsp + 491784 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 491784 + (1 << 2) >> 2]) + +((((((iSlow3 | 0) - (HEAP32[dsp + 491768 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 491776 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 491784 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 0 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 491784 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp0 = +(+(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 491776 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp1 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 491776 + (0 << 2) >> 2]));HEAPF32[dsp + 491792 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 491792 + (1 << 2) >> 2]) * +(1. - +(fTemp1))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 491776 + (0 << 2) >> 2]) * +(fTemp0)))) / +(1. + +(fTemp1)));fTemp2 = +(+(0.215443 * +(fTemp0)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 491776 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491520 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491520 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491520 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 491792 + (0 << 2) >> 2]))));HEAPF32[dsp + 16384 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp2);fTemp3 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 491776 + (0 << 2) >> 2]));iTemp4 = ~~(+(+(fTemp3) - 3.49999));fTemp5 = +(+(fTemp3) - +(3. + +((iTemp4 | 0))));fTemp6 = +(+(fTemp3) - +(4. + +((iTemp4 | 0))));fTemp7 = +(+(fTemp3) - +(5. + +((iTemp4 | 0))));fTemp8 = +(+(fTemp3) - +(6. + +((iTemp4 | 0))));fTemp9 = +(+(fTemp5) * +(fTemp6));HEAPF32[dsp + 491520 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp4 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp5))) * +(0. - +(0.5 * +(fTemp6)))) * +(0. - +(0.333333 * +(fTemp7)))) * +(0. - +(0.25 * +(fTemp8)))) + +(+(+(fTemp3) - +(2. + +((iTemp4 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp4 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp6))) * +(0. - +(0.5 * +(fTemp7)))) * +(0. - +(0.333333 * +(fTemp8)))) + +(0.5 * +(+(+(+(fTemp5) * +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp4 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp7))) * +(0. - +(0.5 * +(fTemp8)))))) + +(0.166667 * +(+(+(fTemp9) * +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp4 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp8))))) + +(0.0416667 * +(+(+(fTemp9) * +(fTemp7)) * +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp4 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 491800 + (0 << 2) >> 2] = (iSlow8 | 0);HEAPF32[dsp + 491808 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 491808 + (1 << 2) >> 2])) + +(fSlow9));HEAPF32[dsp + 491816 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 491816 + (1 << 2) >> 2]) + +((((((iSlow8 | 0) - (HEAP32[dsp + 491800 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 491808 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 491816 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 32768 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 491816 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp10 = +(+(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 491808 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp11 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 491808 + (0 << 2) >> 2]));HEAPF32[dsp + 491824 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 491824 + (1 << 2) >> 2]) * +(1. - +(fTemp11))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 491808 + (0 << 2) >> 2]) * +(fTemp10)))) / +(1. + +(fTemp11)));fTemp12 = +(+(0.215443 * +(fTemp10)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 491808 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491536 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491536 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491536 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 491824 + (0 << 2) >> 2]))));HEAPF32[dsp + 49152 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp12);fTemp13 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 491808 + (0 << 2) >> 2]));iTemp14 = ~~(+(+(fTemp13) - 3.49999));fTemp15 = +(+(fTemp13) - +(3. + +((iTemp14 | 0))));fTemp16 = +(+(fTemp13) - +(4. + +((iTemp14 | 0))));fTemp17 = +(+(fTemp13) - +(5. + +((iTemp14 | 0))));fTemp18 = +(+(fTemp13) - +(6. + +((iTemp14 | 0))));fTemp19 = +(+(fTemp15) * +(fTemp16));HEAPF32[dsp + 491536 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp14 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp15))) * +(0. - +(0.5 * +(fTemp16)))) * +(0. - +(0.333333 * +(fTemp17)))) * +(0. - +(0.25 * +(fTemp18)))) + +(+(+(fTemp13) - +(2. + +((iTemp14 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp14 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp16))) * +(0. - +(0.5 * +(fTemp17)))) * +(0. - +(0.333333 * +(fTemp18)))) + +(0.5 * +(+(+(+(fTemp15) * +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp14 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp17))) * +(0. - +(0.5 * +(fTemp18)))))) + +(0.166667 * +(+(+(fTemp19) * +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp14 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp18))))) + +(0.0416667 * +(+(+(fTemp19) * +(fTemp17)) * +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp14 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 491832 + (0 << 2) >> 2] = (iSlow10 | 0);HEAPF32[dsp + 491840 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 491840 + (1 << 2) >> 2])) + +(fSlow11));HEAPF32[dsp + 491848 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 491848 + (1 << 2) >> 2]) + +((((((iSlow10 | 0) - (HEAP32[dsp + 491832 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 491840 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 491848 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 65536 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 491848 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp20 = +(+(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 491840 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp21 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 491840 + (0 << 2) >> 2]));HEAPF32[dsp + 491856 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 491856 + (1 << 2) >> 2]) * +(1. - +(fTemp21))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 491840 + (0 << 2) >> 2]) * +(fTemp20)))) / +(1. + +(fTemp21)));fTemp22 = +(+(0.215443 * +(fTemp20)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 491840 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491552 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491552 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491552 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 491856 + (0 << 2) >> 2]))));HEAPF32[dsp + 81920 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp22);fTemp23 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 491840 + (0 << 2) >> 2]));iTemp24 = ~~(+(+(fTemp23) - 3.49999));fTemp25 = +(+(fTemp23) - +(3. + +((iTemp24 | 0))));fTemp26 = +(+(fTemp23) - +(4. + +((iTemp24 | 0))));fTemp27 = +(+(fTemp23) - +(5. + +((iTemp24 | 0))));fTemp28 = +(+(fTemp23) - +(6. + +((iTemp24 | 0))));fTemp29 = +(+(fTemp25) * +(fTemp26));HEAPF32[dsp + 491552 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp24 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp25))) * +(0. - +(0.5 * +(fTemp26)))) * +(0. - +(0.333333 * +(fTemp27)))) * +(0. - +(0.25 * +(fTemp28)))) + +(+(+(fTemp23) - +(2. + +((iTemp24 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp24 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp26))) * +(0. - +(0.5 * +(fTemp27)))) * +(0. - +(0.333333 * +(fTemp28)))) + +(0.5 * +(+(+(+(fTemp25) * +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp24 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp27))) * +(0. - +(0.5 * +(fTemp28)))))) + +(0.166667 * +(+(+(fTemp29) * +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp24 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp28))))) + +(0.0416667 * +(+(+(fTemp29) * +(fTemp27)) * +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp24 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 491864 + (0 << 2) >> 2] = (iSlow12 | 0);HEAPF32[dsp + 491872 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 491872 + (1 << 2) >> 2])) + +(fSlow13));HEAPF32[dsp + 491880 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 491880 + (1 << 2) >> 2]) + +((((((iSlow12 | 0) - (HEAP32[dsp + 491864 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 491872 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 491880 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 98304 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 491880 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp30 = +(+(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 491872 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp31 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 491872 + (0 << 2) >> 2]));HEAPF32[dsp + 491888 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 491888 + (1 << 2) >> 2]) * +(1. - +(fTemp31))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 491872 + (0 << 2) >> 2]) * +(fTemp30)))) / +(1. + +(fTemp31)));fTemp32 = +(+(0.215443 * +(fTemp30)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 491872 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491568 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491568 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491568 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 491888 + (0 << 2) >> 2]))));HEAPF32[dsp + 114688 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp32);fTemp33 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 491872 + (0 << 2) >> 2]));iTemp34 = ~~(+(+(fTemp33) - 3.49999));fTemp35 = +(+(fTemp33) - +(3. + +((iTemp34 | 0))));fTemp36 = +(+(fTemp33) - +(4. + +((iTemp34 | 0))));fTemp37 = +(+(fTemp33) - +(5. + +((iTemp34 | 0))));fTemp38 = +(+(fTemp33) - +(6. + +((iTemp34 | 0))));fTemp39 = +(+(fTemp35) * +(fTemp36));HEAPF32[dsp + 491568 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp34 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp35))) * +(0. - +(0.5 * +(fTemp36)))) * +(0. - +(0.333333 * +(fTemp37)))) * +(0. - +(0.25 * +(fTemp38)))) + +(+(+(fTemp33) - +(2. + +((iTemp34 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp34 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp36))) * +(0. - +(0.5 * +(fTemp37)))) * +(0. - +(0.333333 * +(fTemp38)))) + +(0.5 * +(+(+(+(fTemp35) * +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp34 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp37))) * +(0. - +(0.5 * +(fTemp38)))))) + +(0.166667 * +(+(+(fTemp39) * +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp34 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp38))))) + +(0.0416667 * +(+(+(fTemp39) * +(fTemp37)) * +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp34 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 491896 + (0 << 2) >> 2] = (iSlow14 | 0);HEAPF32[dsp + 491904 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 491904 + (1 << 2) >> 2])) + +(fSlow15));HEAPF32[dsp + 491912 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 491912 + (1 << 2) >> 2]) + +((((((iSlow14 | 0) - (HEAP32[dsp + 491896 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 491904 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 491912 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 131072 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 491912 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp40 = +(+(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 491904 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp41 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 491904 + (0 << 2) >> 2]));HEAPF32[dsp + 491920 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 491920 + (1 << 2) >> 2]) * +(1. - +(fTemp41))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 491904 + (0 << 2) >> 2]) * +(fTemp40)))) / +(1. + +(fTemp41)));fTemp42 = +(+(0.215443 * +(fTemp40)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 491904 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491584 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491584 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491584 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 491920 + (0 << 2) >> 2]))));HEAPF32[dsp + 147456 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp42);fTemp43 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 491904 + (0 << 2) >> 2]));iTemp44 = ~~(+(+(fTemp43) - 3.49999));fTemp45 = +(+(fTemp43) - +(3. + +((iTemp44 | 0))));fTemp46 = +(+(fTemp43) - +(4. + +((iTemp44 | 0))));fTemp47 = +(+(fTemp43) - +(5. + +((iTemp44 | 0))));fTemp48 = +(+(fTemp43) - +(6. + +((iTemp44 | 0))));fTemp49 = +(+(fTemp45) * +(fTemp46));HEAPF32[dsp + 491584 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp44 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp45))) * +(0. - +(0.5 * +(fTemp46)))) * +(0. - +(0.333333 * +(fTemp47)))) * +(0. - +(0.25 * +(fTemp48)))) + +(+(+(fTemp43) - +(2. + +((iTemp44 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp44 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp46))) * +(0. - +(0.5 * +(fTemp47)))) * +(0. - +(0.333333 * +(fTemp48)))) + +(0.5 * +(+(+(+(fTemp45) * +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp44 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp47))) * +(0. - +(0.5 * +(fTemp48)))))) + +(0.166667 * +(+(+(fTemp49) * +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp44 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp48))))) + +(0.0416667 * +(+(+(fTemp49) * +(fTemp47)) * +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp44 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 491928 + (0 << 2) >> 2] = (iSlow16 | 0);HEAPF32[dsp + 491936 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 491936 + (1 << 2) >> 2])) + +(fSlow17));HEAPF32[dsp + 491944 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 491944 + (1 << 2) >> 2]) + +((((((iSlow16 | 0) - (HEAP32[dsp + 491928 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 491936 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 491944 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 163840 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 163840 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 491944 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp50 = +(+(HEAPF32[dsp + 163840 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 163840 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 491936 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp51 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 491936 + (0 << 2) >> 2]));HEAPF32[dsp + 491952 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 491952 + (1 << 2) >> 2]) * +(1. - +(fTemp51))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 491936 + (0 << 2) >> 2]) * +(fTemp50)))) / +(1. + +(fTemp51)));fTemp52 = +(+(0.215443 * +(fTemp50)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 491936 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491600 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491600 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491600 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 491952 + (0 << 2) >> 2]))));HEAPF32[dsp + 180224 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp52);fTemp53 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 491936 + (0 << 2) >> 2]));iTemp54 = ~~(+(+(fTemp53) - 3.49999));fTemp55 = +(+(fTemp53) - +(3. + +((iTemp54 | 0))));fTemp56 = +(+(fTemp53) - +(4. + +((iTemp54 | 0))));fTemp57 = +(+(fTemp53) - +(5. + +((iTemp54 | 0))));fTemp58 = +(+(fTemp53) - +(6. + +((iTemp54 | 0))));fTemp59 = +(+(fTemp55) * +(fTemp56));HEAPF32[dsp + 491600 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp54 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp55))) * +(0. - +(0.5 * +(fTemp56)))) * +(0. - +(0.333333 * +(fTemp57)))) * +(0. - +(0.25 * +(fTemp58)))) + +(+(+(fTemp53) - +(2. + +((iTemp54 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp54 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp56))) * +(0. - +(0.5 * +(fTemp57)))) * +(0. - +(0.333333 * +(fTemp58)))) + +(0.5 * +(+(+(+(fTemp55) * +(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp54 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp57))) * +(0. - +(0.5 * +(fTemp58)))))) + +(0.166667 * +(+(+(fTemp59) * +(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp54 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp58))))) + +(0.0416667 * +(+(+(fTemp59) * +(fTemp57)) * +(HEAPF32[dsp + 180224 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp54 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 491960 + (0 << 2) >> 2] = (iSlow18 | 0);HEAPF32[dsp + 491968 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 491968 + (1 << 2) >> 2])) + +(fSlow19));HEAPF32[dsp + 491976 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 491976 + (1 << 2) >> 2]) + +((((((iSlow18 | 0) - (HEAP32[dsp + 491960 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 491968 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 491976 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 196608 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 196608 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 491976 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp60 = +(+(HEAPF32[dsp + 196608 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 196608 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 491968 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp61 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 491968 + (0 << 2) >> 2]));HEAPF32[dsp + 491984 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 491984 + (1 << 2) >> 2]) * +(1. - +(fTemp61))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 491968 + (0 << 2) >> 2]) * +(fTemp60)))) / +(1. + +(fTemp61)));fTemp62 = +(+(0.215443 * +(fTemp60)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 491968 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491616 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491616 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491616 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 491984 + (0 << 2) >> 2]))));HEAPF32[dsp + 212992 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp62);fTemp63 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 491968 + (0 << 2) >> 2]));iTemp64 = ~~(+(+(fTemp63) - 3.49999));fTemp65 = +(+(fTemp63) - +(3. + +((iTemp64 | 0))));fTemp66 = +(+(fTemp63) - +(4. + +((iTemp64 | 0))));fTemp67 = +(+(fTemp63) - +(5. + +((iTemp64 | 0))));fTemp68 = +(+(fTemp63) - +(6. + +((iTemp64 | 0))));fTemp69 = +(+(fTemp65) * +(fTemp66));HEAPF32[dsp + 491616 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp64 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp65))) * +(0. - +(0.5 * +(fTemp66)))) * +(0. - +(0.333333 * +(fTemp67)))) * +(0. - +(0.25 * +(fTemp68)))) + +(+(+(fTemp63) - +(2. + +((iTemp64 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp64 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp66))) * +(0. - +(0.5 * +(fTemp67)))) * +(0. - +(0.333333 * +(fTemp68)))) + +(0.5 * +(+(+(+(fTemp65) * +(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp64 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp67))) * +(0. - +(0.5 * +(fTemp68)))))) + +(0.166667 * +(+(+(fTemp69) * +(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp64 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp68))))) + +(0.0416667 * +(+(+(fTemp69) * +(fTemp67)) * +(HEAPF32[dsp + 212992 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp64 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 491992 + (0 << 2) >> 2] = (iSlow20 | 0);HEAPF32[dsp + 492000 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 492000 + (1 << 2) >> 2])) + +(fSlow21));HEAPF32[dsp + 492008 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 492008 + (1 << 2) >> 2]) + +((((((iSlow20 | 0) - (HEAP32[dsp + 491992 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 492000 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 492008 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 229376 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 229376 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 492008 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp70 = +(+(HEAPF32[dsp + 229376 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 229376 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 492000 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp71 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 492000 + (0 << 2) >> 2]));HEAPF32[dsp + 492016 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 492016 + (1 << 2) >> 2]) * +(1. - +(fTemp71))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 492000 + (0 << 2) >> 2]) * +(fTemp70)))) / +(1. + +(fTemp71)));fTemp72 = +(+(0.215443 * +(fTemp70)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 492000 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491632 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491632 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491632 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 492016 + (0 << 2) >> 2]))));HEAPF32[dsp + 245760 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp72);fTemp73 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 492000 + (0 << 2) >> 2]));iTemp74 = ~~(+(+(fTemp73) - 3.49999));fTemp75 = +(+(fTemp73) - +(3. + +((iTemp74 | 0))));fTemp76 = +(+(fTemp73) - +(4. + +((iTemp74 | 0))));fTemp77 = +(+(fTemp73) - +(5. + +((iTemp74 | 0))));fTemp78 = +(+(fTemp73) - +(6. + +((iTemp74 | 0))));fTemp79 = +(+(fTemp75) * +(fTemp76));HEAPF32[dsp + 491632 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp74 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp75))) * +(0. - +(0.5 * +(fTemp76)))) * +(0. - +(0.333333 * +(fTemp77)))) * +(0. - +(0.25 * +(fTemp78)))) + +(+(+(fTemp73) - +(2. + +((iTemp74 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp74 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp76))) * +(0. - +(0.5 * +(fTemp77)))) * +(0. - +(0.333333 * +(fTemp78)))) + +(0.5 * +(+(+(+(fTemp75) * +(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp74 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp77))) * +(0. - +(0.5 * +(fTemp78)))))) + +(0.166667 * +(+(+(fTemp79) * +(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp74 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp78))))) + +(0.0416667 * +(+(+(fTemp79) * +(fTemp77)) * +(HEAPF32[dsp + 245760 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp74 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 492024 + (0 << 2) >> 2] = (iSlow22 | 0);HEAPF32[dsp + 492032 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 492032 + (1 << 2) >> 2])) + +(fSlow23));HEAPF32[dsp + 492040 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 492040 + (1 << 2) >> 2]) + +((((((iSlow22 | 0) - (HEAP32[dsp + 492024 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 492032 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 492040 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 262144 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 492040 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp80 = +(+(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 262144 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 492032 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp81 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 492032 + (0 << 2) >> 2]));HEAPF32[dsp + 492048 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 492048 + (1 << 2) >> 2]) * +(1. - +(fTemp81))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 492032 + (0 << 2) >> 2]) * +(fTemp80)))) / +(1. + +(fTemp81)));fTemp82 = +(+(0.215443 * +(fTemp80)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 492032 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491648 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491648 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491648 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 492048 + (0 << 2) >> 2]))));HEAPF32[dsp + 278528 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp82);fTemp83 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 492032 + (0 << 2) >> 2]));iTemp84 = ~~(+(+(fTemp83) - 3.49999));fTemp85 = +(+(fTemp83) - +(3. + +((iTemp84 | 0))));fTemp86 = +(+(fTemp83) - +(4. + +((iTemp84 | 0))));fTemp87 = +(+(fTemp83) - +(5. + +((iTemp84 | 0))));fTemp88 = +(+(fTemp83) - +(6. + +((iTemp84 | 0))));fTemp89 = +(+(fTemp85) * +(fTemp86));HEAPF32[dsp + 491648 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp84 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp85))) * +(0. - +(0.5 * +(fTemp86)))) * +(0. - +(0.333333 * +(fTemp87)))) * +(0. - +(0.25 * +(fTemp88)))) + +(+(+(fTemp83) - +(2. + +((iTemp84 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp84 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp86))) * +(0. - +(0.5 * +(fTemp87)))) * +(0. - +(0.333333 * +(fTemp88)))) + +(0.5 * +(+(+(+(fTemp85) * +(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp84 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp87))) * +(0. - +(0.5 * +(fTemp88)))))) + +(0.166667 * +(+(+(fTemp89) * +(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp84 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp88))))) + +(0.0416667 * +(+(+(fTemp89) * +(fTemp87)) * +(HEAPF32[dsp + 278528 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp84 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 492056 + (0 << 2) >> 2] = (iSlow24 | 0);HEAPF32[dsp + 492064 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 492064 + (1 << 2) >> 2])) + +(fSlow25));HEAPF32[dsp + 492072 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 492072 + (1 << 2) >> 2]) + +((((((iSlow24 | 0) - (HEAP32[dsp + 492056 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 492064 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 492072 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 294912 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 294912 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 492072 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp90 = +(+(HEAPF32[dsp + 294912 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 294912 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 492064 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp91 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 492064 + (0 << 2) >> 2]));HEAPF32[dsp + 492080 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 492080 + (1 << 2) >> 2]) * +(1. - +(fTemp91))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 492064 + (0 << 2) >> 2]) * +(fTemp90)))) / +(1. + +(fTemp91)));fTemp92 = +(+(0.215443 * +(fTemp90)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 492064 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491664 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491664 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491664 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 492080 + (0 << 2) >> 2]))));HEAPF32[dsp + 311296 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp92);fTemp93 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 492064 + (0 << 2) >> 2]));iTemp94 = ~~(+(+(fTemp93) - 3.49999));fTemp95 = +(+(fTemp93) - +(3. + +((iTemp94 | 0))));fTemp96 = +(+(fTemp93) - +(4. + +((iTemp94 | 0))));fTemp97 = +(+(fTemp93) - +(5. + +((iTemp94 | 0))));fTemp98 = +(+(fTemp93) - +(6. + +((iTemp94 | 0))));fTemp99 = +(+(fTemp95) * +(fTemp96));HEAPF32[dsp + 491664 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp94 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp95))) * +(0. - +(0.5 * +(fTemp96)))) * +(0. - +(0.333333 * +(fTemp97)))) * +(0. - +(0.25 * +(fTemp98)))) + +(+(+(fTemp93) - +(2. + +((iTemp94 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp94 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp96))) * +(0. - +(0.5 * +(fTemp97)))) * +(0. - +(0.333333 * +(fTemp98)))) + +(0.5 * +(+(+(+(fTemp95) * +(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp94 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp97))) * +(0. - +(0.5 * +(fTemp98)))))) + +(0.166667 * +(+(+(fTemp99) * +(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp94 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp98))))) + +(0.0416667 * +(+(+(fTemp99) * +(fTemp97)) * +(HEAPF32[dsp + 311296 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp94 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 492088 + (0 << 2) >> 2] = (iSlow26 | 0);HEAPF32[dsp + 492096 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 492096 + (1 << 2) >> 2])) + +(fSlow27));HEAPF32[dsp + 492104 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 492104 + (1 << 2) >> 2]) + +((((((iSlow26 | 0) - (HEAP32[dsp + 492088 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 492096 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 492104 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 327680 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 327680 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 492104 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp100 = +(+(HEAPF32[dsp + 327680 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 327680 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 492096 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp101 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 492096 + (0 << 2) >> 2]));HEAPF32[dsp + 492112 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 492112 + (1 << 2) >> 2]) * +(1. - +(fTemp101))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 492096 + (0 << 2) >> 2]) * +(fTemp100)))) / +(1. + +(fTemp101)));fTemp102 = +(+(0.215443 * +(fTemp100)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 492096 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491680 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491680 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491680 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 492112 + (0 << 2) >> 2]))));HEAPF32[dsp + 344064 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp102);fTemp103 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 492096 + (0 << 2) >> 2]));iTemp104 = ~~(+(+(fTemp103) - 3.49999));fTemp105 = +(+(fTemp103) - +(3. + +((iTemp104 | 0))));fTemp106 = +(+(fTemp103) - +(4. + +((iTemp104 | 0))));fTemp107 = +(+(fTemp103) - +(5. + +((iTemp104 | 0))));fTemp108 = +(+(fTemp103) - +(6. + +((iTemp104 | 0))));fTemp109 = +(+(fTemp105) * +(fTemp106));HEAPF32[dsp + 491680 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 344064 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp104 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp105))) * +(0. - +(0.5 * +(fTemp106)))) * +(0. - +(0.333333 * +(fTemp107)))) * +(0. - +(0.25 * +(fTemp108)))) + +(+(+(fTemp103) - +(2. + +((iTemp104 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 344064 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp104 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp106))) * +(0. - +(0.5 * +(fTemp107)))) * +(0. - +(0.333333 * +(fTemp108)))) + +(0.5 * +(+(+(+(fTemp105) * +(HEAPF32[dsp + 344064 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp104 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp107))) * +(0. - +(0.5 * +(fTemp108)))))) + +(0.166667 * +(+(+(fTemp109) * +(HEAPF32[dsp + 344064 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp104 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp108))))) + +(0.0416667 * +(+(+(fTemp109) * +(fTemp107)) * +(HEAPF32[dsp + 344064 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp104 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 492120 + (0 << 2) >> 2] = (iSlow28 | 0);HEAPF32[dsp + 492128 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 492128 + (1 << 2) >> 2])) + +(fSlow29));HEAPF32[dsp + 492136 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 492136 + (1 << 2) >> 2]) + +((((((iSlow28 | 0) - (HEAP32[dsp + 492120 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 492128 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 492136 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 360448 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 360448 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 492136 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp110 = +(+(HEAPF32[dsp + 360448 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 360448 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 492128 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp111 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 492128 + (0 << 2) >> 2]));HEAPF32[dsp + 492144 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 492144 + (1 << 2) >> 2]) * +(1. - +(fTemp111))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 492128 + (0 << 2) >> 2]) * +(fTemp110)))) / +(1. + +(fTemp111)));fTemp112 = +(+(0.215443 * +(fTemp110)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 492128 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491696 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491696 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491696 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 492144 + (0 << 2) >> 2]))));HEAPF32[dsp + 376832 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp112);fTemp113 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 492128 + (0 << 2) >> 2]));iTemp114 = ~~(+(+(fTemp113) - 3.49999));fTemp115 = +(+(fTemp113) - +(3. + +((iTemp114 | 0))));fTemp116 = +(+(fTemp113) - +(4. + +((iTemp114 | 0))));fTemp117 = +(+(fTemp113) - +(5. + +((iTemp114 | 0))));fTemp118 = +(+(fTemp113) - +(6. + +((iTemp114 | 0))));fTemp119 = +(+(fTemp115) * +(fTemp116));HEAPF32[dsp + 491696 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 376832 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp114 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp115))) * +(0. - +(0.5 * +(fTemp116)))) * +(0. - +(0.333333 * +(fTemp117)))) * +(0. - +(0.25 * +(fTemp118)))) + +(+(+(fTemp113) - +(2. + +((iTemp114 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 376832 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp114 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp116))) * +(0. - +(0.5 * +(fTemp117)))) * +(0. - +(0.333333 * +(fTemp118)))) + +(0.5 * +(+(+(+(fTemp115) * +(HEAPF32[dsp + 376832 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp114 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp117))) * +(0. - +(0.5 * +(fTemp118)))))) + +(0.166667 * +(+(+(fTemp119) * +(HEAPF32[dsp + 376832 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp114 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp118))))) + +(0.0416667 * +(+(+(fTemp119) * +(fTemp117)) * +(HEAPF32[dsp + 376832 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp114 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 492152 + (0 << 2) >> 2] = (iSlow30 | 0);HEAPF32[dsp + 492160 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 492160 + (1 << 2) >> 2])) + +(fSlow31));HEAPF32[dsp + 492168 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 492168 + (1 << 2) >> 2]) + +((((((iSlow30 | 0) - (HEAP32[dsp + 492152 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 492160 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 492168 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 393216 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 393216 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 492168 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp120 = +(+(HEAPF32[dsp + 393216 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 393216 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 492160 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp121 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 492160 + (0 << 2) >> 2]));HEAPF32[dsp + 492176 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 492176 + (1 << 2) >> 2]) * +(1. - +(fTemp121))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 492160 + (0 << 2) >> 2]) * +(fTemp120)))) / +(1. + +(fTemp121)));fTemp122 = +(+(0.215443 * +(fTemp120)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 492160 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491712 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491712 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491712 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 492176 + (0 << 2) >> 2]))));HEAPF32[dsp + 409600 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp122);fTemp123 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 492160 + (0 << 2) >> 2]));iTemp124 = ~~(+(+(fTemp123) - 3.49999));fTemp125 = +(+(fTemp123) - +(3. + +((iTemp124 | 0))));fTemp126 = +(+(fTemp123) - +(4. + +((iTemp124 | 0))));fTemp127 = +(+(fTemp123) - +(5. + +((iTemp124 | 0))));fTemp128 = +(+(fTemp123) - +(6. + +((iTemp124 | 0))));fTemp129 = +(+(fTemp125) * +(fTemp126));HEAPF32[dsp + 491712 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 409600 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp124 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp125))) * +(0. - +(0.5 * +(fTemp126)))) * +(0. - +(0.333333 * +(fTemp127)))) * +(0. - +(0.25 * +(fTemp128)))) + +(+(+(fTemp123) - +(2. + +((iTemp124 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 409600 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp124 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp126))) * +(0. - +(0.5 * +(fTemp127)))) * +(0. - +(0.333333 * +(fTemp128)))) + +(0.5 * +(+(+(+(fTemp125) * +(HEAPF32[dsp + 409600 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp124 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp127))) * +(0. - +(0.5 * +(fTemp128)))))) + +(0.166667 * +(+(+(fTemp129) * +(HEAPF32[dsp + 409600 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp124 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp128))))) + +(0.0416667 * +(+(+(fTemp129) * +(fTemp127)) * +(HEAPF32[dsp + 409600 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp124 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 492184 + (0 << 2) >> 2] = (iSlow32 | 0);HEAPF32[dsp + 492192 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 492192 + (1 << 2) >> 2])) + +(fSlow33));HEAPF32[dsp + 492200 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 492200 + (1 << 2) >> 2]) + +((((((iSlow32 | 0) - (HEAP32[dsp + 492184 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 492192 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 492200 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 425984 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 425984 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 492200 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp130 = +(+(HEAPF32[dsp + 425984 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 425984 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 492192 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp131 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 492192 + (0 << 2) >> 2]));HEAPF32[dsp + 492208 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 492208 + (1 << 2) >> 2]) * +(1. - +(fTemp131))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 492192 + (0 << 2) >> 2]) * +(fTemp130)))) / +(1. + +(fTemp131)));fTemp132 = +(+(0.215443 * +(fTemp130)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 492192 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491728 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491728 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491728 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 492208 + (0 << 2) >> 2]))));HEAPF32[dsp + 442368 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp132);fTemp133 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 492192 + (0 << 2) >> 2]));iTemp134 = ~~(+(+(fTemp133) - 3.49999));fTemp135 = +(+(fTemp133) - +(3. + +((iTemp134 | 0))));fTemp136 = +(+(fTemp133) - +(4. + +((iTemp134 | 0))));fTemp137 = +(+(fTemp133) - +(5. + +((iTemp134 | 0))));fTemp138 = +(+(fTemp133) - +(6. + +((iTemp134 | 0))));fTemp139 = +(+(fTemp135) * +(fTemp136));HEAPF32[dsp + 491728 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 442368 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp134 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp135))) * +(0. - +(0.5 * +(fTemp136)))) * +(0. - +(0.333333 * +(fTemp137)))) * +(0. - +(0.25 * +(fTemp138)))) + +(+(+(fTemp133) - +(2. + +((iTemp134 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 442368 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp134 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp136))) * +(0. - +(0.5 * +(fTemp137)))) * +(0. - +(0.333333 * +(fTemp138)))) + +(0.5 * +(+(+(+(fTemp135) * +(HEAPF32[dsp + 442368 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp134 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp137))) * +(0. - +(0.5 * +(fTemp138)))))) + +(0.166667 * +(+(+(fTemp139) * +(HEAPF32[dsp + 442368 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp134 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp138))))) + +(0.0416667 * +(+(+(fTemp139) * +(fTemp137)) * +(HEAPF32[dsp + 442368 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp134 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAP32[dsp + 492216 + (0 << 2) >> 2] = (iSlow34 | 0);HEAPF32[dsp + 492224 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 492224 + (1 << 2) >> 2])) + +(fSlow35));HEAPF32[dsp + 492232 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 492232 + (1 << 2) >> 2]) + +((((((iSlow34 | 0) - (HEAP32[dsp + 492216 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(HEAPF32[dsp + 492264 >> 2]) * +(+(HEAPF32[dsp + 492224 + (0 << 2) >> 2]) * +(((+(HEAPF32[dsp + 492232 + (1 << 2) >> 2]) > 0.) | 0)))));HEAPF32[dsp + 458752 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(+(+(fSlow0) * +(HEAPF32[dsp + 458752 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 1) | 0) & 4095) | 0) << 2) >> 2])) + +(+(fSlow1) * +((imul((HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 492232 + (0 << 2) >> 2]) > 0.) | 0)) | 0))));fTemp140 = +(+(HEAPF32[dsp + 458752 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - 0) | 0) & 4095) | 0) << 2) >> 2]) - +(HEAPF32[dsp + 458752 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((~~(+(+(fSlow6) / +(HEAPF32[dsp + 492224 + (0 << 2) >> 2]))) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]));fTemp141 = +(+(HEAPF32[dsp + 492284 >> 2]) * +(HEAPF32[dsp + 492224 + (0 << 2) >> 2]));HEAPF32[dsp + 492240 + (0 << 2) >> 2] = +(+(+(+(HEAPF32[dsp + 492240 + (1 << 2) >> 2]) * +(1. - +(fTemp141))) + +(+(HEAPF32[dsp + 492284 >> 2]) * +(+(HEAPF32[dsp + 492224 + (0 << 2) >> 2]) * +(fTemp140)))) / +(1. + +(fTemp141)));fTemp142 = +(+(0.215443 * +(fTemp140)) + +(+(+(powf(0.001, +(+(fSlow7) / +(HEAPF32[dsp + 492224 + (0 << 2) >> 2])))) * +(+(0.75 * +(HEAPF32[dsp + 491744 + (2 << 2) >> 2])) + +(0.125 * +(+(HEAPF32[dsp + 491744 + (1 << 2) >> 2]) + +(HEAPF32[dsp + 491744 + (3 << 2) >> 2]))))) + +(0.683772 * +(HEAPF32[dsp + 492240 + (0 << 2) >> 2]))));HEAPF32[dsp + 475136 + ((((HEAP32[dsp + 492272 >> 2] | 0) & 4095) | 0) << 2) >> 2] = +(fTemp142);fTemp143 = +(+((HEAP32[dsp + 492260 >> 2] | 0)) / +(HEAPF32[dsp + 492224 + (0 << 2) >> 2]));iTemp144 = ~~(+(+(fTemp143) - 3.49999));fTemp145 = +(+(fTemp143) - +(3. + +((iTemp144 | 0))));fTemp146 = +(+(fTemp143) - +(4. + +((iTemp144 | 0))));fTemp147 = +(+(fTemp143) - +(5. + +((iTemp144 | 0))));fTemp148 = +(+(fTemp143) - +(6. + +((iTemp144 | 0))));fTemp149 = +(+(fTemp145) * +(fTemp146));HEAPF32[dsp + 491744 + (0 << 2) >> 2] = +(+(+(+(+(+(HEAPF32[dsp + 475136 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - (((iTemp144 | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp145))) * +(0. - +(0.5 * +(fTemp146)))) * +(0. - +(0.333333 * +(fTemp147)))) * +(0. - +(0.25 * +(fTemp148)))) + +(+(+(fTemp143) - +(2. + +((iTemp144 | 0)))) * +(+(+(+(+(+(+(HEAPF32[dsp + 475136 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((1 + (iTemp144 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]) * +(0. - +(fTemp146))) * +(0. - +(0.5 * +(fTemp147)))) * +(0. - +(0.333333 * +(fTemp148)))) + +(0.5 * +(+(+(+(fTemp145) * +(HEAPF32[dsp + 475136 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((2 + (iTemp144 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp147))) * +(0. - +(0.5 * +(fTemp148)))))) + +(0.166667 * +(+(+(fTemp149) * +(HEAPF32[dsp + 475136 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((3 + (iTemp144 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2])) * +(0. - +(fTemp148))))) + +(0.0416667 * +(+(+(fTemp149) * +(fTemp147)) * +(HEAPF32[dsp + 475136 + ((((((HEAP32[dsp + 492272 >> 2] | 0) - ((((4 + (iTemp144 | 0)) | 0) & 4095) | 0)) | 0) & 4095) | 0) << 2) >> 2]))))));HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(+(+(+(+(+(+(+(+(+(+(+(+(+(+(HEAPF32[dsp + 491520 + (0 << 2) >> 2]) + +(HEAPF32[dsp + 491536 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491552 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491568 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491584 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491600 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491616 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491632 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491648 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491664 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491680 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491696 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491712 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491728 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 491744 + (0 << 2) >> 2])));HEAP32[dsp + 491760 + (1 << 2) >> 2] = (HEAP32[dsp + 491760 + (0 << 2) >> 2] | 0);HEAP32[dsp + 491768 + (1 << 2) >> 2] = (HEAP32[dsp + 491768 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 491776 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491776 + (0 << 2) >> 2]);HEAPF32[dsp + 491784 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491784 + (0 << 2) >> 2]);HEAP32[dsp + 492272 >> 2] = (((HEAP32[dsp + 492272 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 491792 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491792 + (0 << 2) >> 2]);for (j0 = 3; (((j0 | 0) > 0) | 0); j0 = (((j0 | 0) - 1) | 0)) {HEAPF32[dsp + 491520 + ((j0 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491520 + ((((j0 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 491800 + (1 << 2) >> 2] = (HEAP32[dsp + 491800 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 491808 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491808 + (0 << 2) >> 2]);HEAPF32[dsp + 491816 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491816 + (0 << 2) >> 2]);HEAPF32[dsp + 491824 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491824 + (0 << 2) >> 2]);for (j1 = 3; (((j1 | 0) > 0) | 0); j1 = (((j1 | 0) - 1) | 0)) {HEAPF32[dsp + 491536 + ((j1 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491536 + ((((j1 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 491832 + (1 << 2) >> 2] = (HEAP32[dsp + 491832 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 491840 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491840 + (0 << 2) >> 2]);HEAPF32[dsp + 491848 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491848 + (0 << 2) >> 2]);HEAPF32[dsp + 491856 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491856 + (0 << 2) >> 2]);for (j2 = 3; (((j2 | 0) > 0) | 0); j2 = (((j2 | 0) - 1) | 0)) {HEAPF32[dsp + 491552 + ((j2 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491552 + ((((j2 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 491864 + (1 << 2) >> 2] = (HEAP32[dsp + 491864 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 491872 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491872 + (0 << 2) >> 2]);HEAPF32[dsp + 491880 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491880 + (0 << 2) >> 2]);HEAPF32[dsp + 491888 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491888 + (0 << 2) >> 2]);for (j3 = 3; (((j3 | 0) > 0) | 0); j3 = (((j3 | 0) - 1) | 0)) {HEAPF32[dsp + 491568 + ((j3 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491568 + ((((j3 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 491896 + (1 << 2) >> 2] = (HEAP32[dsp + 491896 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 491904 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491904 + (0 << 2) >> 2]);HEAPF32[dsp + 491912 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491912 + (0 << 2) >> 2]);HEAPF32[dsp + 491920 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491920 + (0 << 2) >> 2]);for (j4 = 3; (((j4 | 0) > 0) | 0); j4 = (((j4 | 0) - 1) | 0)) {HEAPF32[dsp + 491584 + ((j4 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491584 + ((((j4 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 491928 + (1 << 2) >> 2] = (HEAP32[dsp + 491928 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 491936 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491936 + (0 << 2) >> 2]);HEAPF32[dsp + 491944 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491944 + (0 << 2) >> 2]);HEAPF32[dsp + 491952 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491952 + (0 << 2) >> 2]);for (j5 = 3; (((j5 | 0) > 0) | 0); j5 = (((j5 | 0) - 1) | 0)) {HEAPF32[dsp + 491600 + ((j5 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491600 + ((((j5 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 491960 + (1 << 2) >> 2] = (HEAP32[dsp + 491960 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 491968 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491968 + (0 << 2) >> 2]);HEAPF32[dsp + 491976 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491976 + (0 << 2) >> 2]);HEAPF32[dsp + 491984 + (1 << 2) >> 2] = +(HEAPF32[dsp + 491984 + (0 << 2) >> 2]);for (j6 = 3; (((j6 | 0) > 0) | 0); j6 = (((j6 | 0) - 1) | 0)) {HEAPF32[dsp + 491616 + ((j6 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491616 + ((((j6 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 491992 + (1 << 2) >> 2] = (HEAP32[dsp + 491992 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 492000 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492000 + (0 << 2) >> 2]);HEAPF32[dsp + 492008 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492008 + (0 << 2) >> 2]);HEAPF32[dsp + 492016 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492016 + (0 << 2) >> 2]);for (j7 = 3; (((j7 | 0) > 0) | 0); j7 = (((j7 | 0) - 1) | 0)) {HEAPF32[dsp + 491632 + ((j7 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491632 + ((((j7 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 492024 + (1 << 2) >> 2] = (HEAP32[dsp + 492024 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 492032 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492032 + (0 << 2) >> 2]);HEAPF32[dsp + 492040 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492040 + (0 << 2) >> 2]);HEAPF32[dsp + 492048 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492048 + (0 << 2) >> 2]);for (j8 = 3; (((j8 | 0) > 0) | 0); j8 = (((j8 | 0) - 1) | 0)) {HEAPF32[dsp + 491648 + ((j8 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491648 + ((((j8 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 492056 + (1 << 2) >> 2] = (HEAP32[dsp + 492056 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 492064 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492064 + (0 << 2) >> 2]);HEAPF32[dsp + 492072 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492072 + (0 << 2) >> 2]);HEAPF32[dsp + 492080 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492080 + (0 << 2) >> 2]);for (j9 = 3; (((j9 | 0) > 0) | 0); j9 = (((j9 | 0) - 1) | 0)) {HEAPF32[dsp + 491664 + ((j9 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491664 + ((((j9 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 492088 + (1 << 2) >> 2] = (HEAP32[dsp + 492088 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 492096 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492096 + (0 << 2) >> 2]);HEAPF32[dsp + 492104 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492104 + (0 << 2) >> 2]);HEAPF32[dsp + 492112 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492112 + (0 << 2) >> 2]);for (j10 = 3; (((j10 | 0) > 0) | 0); j10 = (((j10 | 0) - 1) | 0)) {HEAPF32[dsp + 491680 + ((j10 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491680 + ((((j10 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 492120 + (1 << 2) >> 2] = (HEAP32[dsp + 492120 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 492128 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492128 + (0 << 2) >> 2]);HEAPF32[dsp + 492136 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492136 + (0 << 2) >> 2]);HEAPF32[dsp + 492144 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492144 + (0 << 2) >> 2]);for (j11 = 3; (((j11 | 0) > 0) | 0); j11 = (((j11 | 0) - 1) | 0)) {HEAPF32[dsp + 491696 + ((j11 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491696 + ((((j11 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 492152 + (1 << 2) >> 2] = (HEAP32[dsp + 492152 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 492160 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492160 + (0 << 2) >> 2]);HEAPF32[dsp + 492168 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492168 + (0 << 2) >> 2]);HEAPF32[dsp + 492176 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492176 + (0 << 2) >> 2]);for (j12 = 3; (((j12 | 0) > 0) | 0); j12 = (((j12 | 0) - 1) | 0)) {HEAPF32[dsp + 491712 + ((j12 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491712 + ((((j12 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 492184 + (1 << 2) >> 2] = (HEAP32[dsp + 492184 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 492192 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492192 + (0 << 2) >> 2]);HEAPF32[dsp + 492200 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492200 + (0 << 2) >> 2]);HEAPF32[dsp + 492208 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492208 + (0 << 2) >> 2]);for (j13 = 3; (((j13 | 0) > 0) | 0); j13 = (((j13 | 0) - 1) | 0)) {HEAPF32[dsp + 491728 + ((j13 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491728 + ((((j13 | 0) - 1) | 0) << 2) >> 2]);}HEAP32[dsp + 492216 + (1 << 2) >> 2] = (HEAP32[dsp + 492216 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 492224 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492224 + (0 << 2) >> 2]);HEAPF32[dsp + 492232 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492232 + (0 << 2) >> 2]);HEAPF32[dsp + 492240 + (1 << 2) >> 2] = +(HEAPF32[dsp + 492240 + (0 << 2) >> 2]);for (j14 = 3; (((j14 | 0) > 0) | 0); j14 = (((j14 | 0) - 1) | 0)) {HEAPF32[dsp + 491744 + ((j14 | 0) << 2) >> 2] = +(HEAPF32[dsp + 491744 + ((((j14 | 0) - 1) | 0) << 2) >> 2]);}}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp5() {return 492288;}function getPathTablemydsp5() {var pathTable = [];pathTable[\"/SBouncyHarp/Dry/Soft_Strings\"] = 492248;pathTable[\"/SBouncyHarp/Instrument_Hand\"] = 492252;pathTable[\"/SBouncyHarp/Hight\"] = 492268;pathTable[\"/SBouncyHarp/Picking_Position\"] = 492276;pathTable[\"/SBouncyHarp/Resonance_(InstrReverb)\"] = 492280;return pathTable;}function getJSONmydsp5() {return \"{ \\\"name\\\": \\\"Bouncy Harp\\\", \\\"inputs\\\": \\\"0\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"author\\\": \\\"ER\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_author\\\": \\\"Priyanka Shekar (pshekar@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\\\": \\\"Copyright (c) 2013 Priyanka Shekar\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_license\\\": \\\"MIT License (MIT)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_name\\\": \\\"Harmonic Exciter\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/name\\\": \\\"Faust Audio Effect Library\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/version\\\": \\\"1.33\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/author\\\": \\\"Romain Michon (rmichon@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/copyright\\\": \\\"Romain Michon\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/licence\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/name\\\": \\\"Faust-STK Tools Library\\\" }, { \\\"http://192.168.1.61/faustcode/instrument.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"name\\\": \\\"Bouncy Harp\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"SBouncyHarp\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Hight\\\", \\\"address\\\": \\\"/SBouncyHarp/Hight\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"2 0 -10 0 10\\\" } ], \\\"init\\\": \\\"3\\\", \\\"min\\\": \\\"1\\\", \\\"max\\\": \\\"6\\\", \\\"step\\\": \\\"0.1\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Instrument Hand\\\", \\\"address\\\": \\\"/SBouncyHarp/Instrument_Hand\\\", \\\"meta\\\": [ { \\\"1\\\": \\\"\\\" }, { \\\"acc\\\": \\\"1 1 -8 0 11\\\" } ], \\\"init\\\": \\\"0\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"15\\\", \\\"step\\\": \\\"1\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Dry/Soft Strings\\\", \\\"address\\\": \\\"/SBouncyHarp/Dry/Soft_Strings\\\", \\\"meta\\\": [ { \\\"3\\\": \\\"\\\" }, { \\\"acc\\\": \\\"2 0 -10 0 10\\\" } ], \\\"init\\\": \\\"0.45\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"0.9\\\", \\\"step\\\": \\\"0.1\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Picking Position\\\", \\\"address\\\": \\\"/SBouncyHarp/Picking_Position\\\", \\\"meta\\\": [ { \\\"4\\\": \\\"\\\" }, { \\\"acc\\\": \\\"2 0 -10 0 10\\\" } ], \\\"init\\\": \\\"0.13\\\", \\\"min\\\": \\\"0.02\\\", \\\"max\\\": \\\"0.5\\\", \\\"step\\\": \\\"0.01\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Resonance (InstrReverb)\\\", \\\"address\\\": \\\"/SBouncyHarp/Resonance_(InstrReverb)\\\", \\\"meta\\\": [ { \\\"5\\\": \\\"\\\" }, { \\\"acc\\\": \\\"1 0 -10 0 10\\\" } ], \\\"init\\\": \\\"5\\\", \\\"min\\\": \\\"0.5\\\", \\\"max\\\": \\\"10\\\", \\\"step\\\": \\\"0.01\\\" } ] } ] } \";}function metadatamydsp5(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"author\", \"ER\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_author\", \"Priyanka Shekar (pshekar@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\", \"Copyright (c) 2013 Priyanka Shekar\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_license\", \"MIT License (MIT)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_name\", \"Harmonic Exciter\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/name\", \"Faust Audio Effect Library\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/version\", \"1.33\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/author\", \"Romain Michon (rmichon@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/copyright\", \"Romain Michon\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/licence\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/name\", \"Faust-STK Tools Library\");m.declare(\"http://192.168.1.61/faustcode/instrument.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"name\", \"Bouncy Harp\");}"}},"6":{"patchId":"6","code":"process = vgroup(\"CombFilter\",environment{declare name \"Comb Filter\";\r\n\r\n/* =========== DESCRIPTION ==============\r\n\r\n- A comb filter creates interferences in a sound\r\n- Rocking = to change the filtering frequency\r\n- Head = no filter\r\n- Bottom = maximum filtering\r\n\r\n*/\r\n\r\nimport(\"math.lib\");\r\nimport(\"music.lib\");\r\nimport(\"filter.lib\");\r\n\r\nprocess = fb_fcomb(maxdel,del,b0,aN) \r\n\t\t\twith {\r\n\t\t\t\tmaxdel = 1<<16; \r\n\t\t\t\tfreq = 1/(hslider(\"Frequency[acc:0 0 -10 0 10]\", 2500,100,20000,0.001)):smooth(0.99);\r\n\t\t\t\tdel = freq *(SR) : smooth(0.99);\r\n\t\t\t\tb0 = 1;\r\n\t\t\t\taN = hslider(\"Intensity[acc:1 1 -10 0 10]\", 80,0,100,0.01)*(0.01):smooth(0.99):min(0.999):max(0);\r\n\t\t\t};\r\n\t\t\t\r\n}.process);","name":"CombFilter","x":"740","y":"460","inputs":{"source":["1"]},"outputs":{"destination":["output"]},"params":{"sliders":[{"path":"/CombFilter/Frequency","value":2500},{"path":"/CombFilter/Intensity","value":80}]},"factory":{"name":"mydsp6","code":"/* ------------------------------------------------------------name: \"Comb Filter\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp6Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var max = global.Math.max;var min = global.Math.min;function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputs(dsp) {dsp = dsp | 0;return 1;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;HEAP32[dsp + 262192 >> 2] = (samplingFreq | 0);HEAPF32[dsp + 262184 >> 2] = +(80.);for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAPF32[dsp + 262144 + ((i0 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 262188 >> 2] = 0;for (i1 = 0; (((i1 | 0) < 65536) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAPF32[dsp + 0 + ((i1 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 262196 >> 2] = +(0.01 * +(((min(192000, ((max(1, (HEAP32[dsp + 262192 >> 2] | 0))) | 0))) | 0)));HEAPF32[dsp + 262200 >> 2] = +(2500.);for (i2 = 0; (((i2 | 0) < 2) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAPF32[dsp + 262152 + ((i2 | 0) << 2) >> 2] = 0.;}for (i3 = 0; (((i3 | 0) < 2) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAPF32[dsp + 262160 + ((i3 | 0) << 2) >> 2] = 0.;}for (i4 = 0; (((i4 | 0) < 2) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAPF32[dsp + 262168 + ((i4 | 0) << 2) >> 2] = 0.;}for (i5 = 0; (((i5 | 0) < 2) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAPF32[dsp + 262176 + ((i5 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var input0 = 0;var output0 = 0;var fSlow0 = 0.;var fSlow1 = 0.;var i = 0;var fTemp0 = 0.;var iTemp1 = 0;input0 = (HEAP32[inputs + (0 << 2) >> 2] | 0);output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);fSlow0 = +(0.0001 * +(+(HEAPF32[dsp + 262184 >> 2])));fSlow1 = +(0.01 / +(+(HEAPF32[dsp + 262200 >> 2])));for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAPF32[dsp + 262144 + (0 << 2) >> 2] = +(+(0.99 * +(HEAPF32[dsp + 262144 + (1 << 2) >> 2])) + +(fSlow0));fTemp0 = +(+(+(HEAPF32[input0 + ((i | 0) << 2) >> 2])) + +(+(0. - +(max(0., +(min(0.999, +(HEAPF32[dsp + 262144 + (0 << 2) >> 2])))))) * +(HEAPF32[dsp + 262168 + (1 << 2) >> 2])));HEAPF32[dsp + 0 + ((((HEAP32[dsp + 262188 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(fTemp0);HEAPF32[dsp + 262152 + (0 << 2) >> 2] = +(+(0.99 * +(HEAPF32[dsp + 262152 + (1 << 2) >> 2])) + +(fSlow1));HEAPF32[dsp + 262160 + (0 << 2) >> 2] = +(+(0.99 * +(HEAPF32[dsp + 262160 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 262196 >> 2]) * +(HEAPF32[dsp + 262152 + (0 << 2) >> 2])));iTemp1 = ~~(+(+(HEAPF32[dsp + 262160 + (0 << 2) >> 2]) - 1.));HEAPF32[dsp + 262168 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 262188 >> 2] | 0) - (((iTemp1 | 0) & 65535) | 0)) | 0) & 65535) | 0) << 2) >> 2]) * +(+(2. + +((iTemp1 | 0))) - +(HEAPF32[dsp + 262160 + (0 << 2) >> 2]))) + +(+(+(HEAPF32[dsp + 262160 + (0 << 2) >> 2]) - +(1. + +((iTemp1 | 0)))) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 262188 >> 2] | 0) - ((((1 + (iTemp1 | 0)) | 0) & 65535) | 0)) | 0) & 65535) | 0) << 2) >> 2])));HEAPF32[dsp + 262176 + (0 << 2) >> 2] = +(fTemp0);HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(HEAPF32[dsp + 262176 + (1 << 2) >> 2]));HEAPF32[dsp + 262144 + (1 << 2) >> 2] = +(HEAPF32[dsp + 262144 + (0 << 2) >> 2]);HEAP32[dsp + 262188 >> 2] = (((HEAP32[dsp + 262188 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 262152 + (1 << 2) >> 2] = +(HEAPF32[dsp + 262152 + (0 << 2) >> 2]);HEAPF32[dsp + 262160 + (1 << 2) >> 2] = +(HEAPF32[dsp + 262160 + (0 << 2) >> 2]);HEAPF32[dsp + 262168 + (1 << 2) >> 2] = +(HEAPF32[dsp + 262168 + (0 << 2) >> 2]);HEAPF32[dsp + 262176 + (1 << 2) >> 2] = +(HEAPF32[dsp + 262176 + (0 << 2) >> 2]);}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp6() {return 262204;}function getPathTablemydsp6() {var pathTable = [];pathTable[\"/CombFilter/Intensity\"] = 262184;pathTable[\"/CombFilter/Frequency\"] = 262200;return pathTable;}function getJSONmydsp6() {return \"{ \\\"name\\\": \\\"Comb Filter\\\", \\\"inputs\\\": \\\"1\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"name\\\": \\\"Comb Filter\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"CombFilter\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Frequency\\\", \\\"address\\\": \\\"/CombFilter/Frequency\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"0 0 -10 0 10\\\" } ], \\\"init\\\": \\\"2500\\\", \\\"min\\\": \\\"100\\\", \\\"max\\\": \\\"20000\\\", \\\"step\\\": \\\"0.001\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Intensity\\\", \\\"address\\\": \\\"/CombFilter/Intensity\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"1 1 -10 0 10\\\" } ], \\\"init\\\": \\\"80\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"100\\\", \\\"step\\\": \\\"0.01\\\" } ] } ] } \";}function metadatamydsp6(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"name\", \"Comb Filter\");}"}},"7":{"patchId":"7","code":"process = vgroup(\"Echo\",environment{declare name \"Echo\";\r\n\r\nimport(\"math.lib\");\r\nimport(\"music.lib\");\r\nimport(\"filter.lib\");\r\n\r\n/* ============ DESCRIPTION =============\r\n\r\n- Variable delay echo\r\n- Echo Delay = Pick manually which amount of time in seconds must be repeated by the echo\r\n- Rocking = To vary the intensity of the echo\r\n\r\n*/\r\n\r\nprocess = echo;\r\n\r\n\r\necho = +~ @(echoDelay)*(feedback);\r\nsmooth(s) = *(1.0 - s) : + ~ *(s);\r\n\r\nechoDelay = hslider(\"Echo Delay[unit:s]\", 0.5, 0.01, 1, 0.001):min(1):max(0.01)*(44100):int;\r\nfeedback = hslider(\"Echo Intensity (Feedback)[style:knob][acc:0 0 -10 0 10]\", 0.001, 0.001, 0.65, 0.001):smooth(0.999);\r\n}.process);","name":"Echo","x":"788","y":"347","inputs":{"source":["2"]},"outputs":{"destination":["output"]},"params":{"sliders":[{"path":"/Echo/Echo_Delay","value":0.5},{"path":"/Echo/Echo_Intensity_(Feedback)","value":0.0010000000474974513}]},"factory":{"name":"mydsp7","code":"/* ------------------------------------------------------------name: \"Echo\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp7Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var max = global.Math.max;var min = global.Math.min;function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputs(dsp) {dsp = dsp | 0;return 1;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;HEAP32[dsp + 262164 >> 2] = (samplingFreq | 0);HEAPF32[dsp + 262152 >> 2] = +(0.001);for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAPF32[dsp + 262144 + ((i0 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 262156 >> 2] = +(0.5);HEAP32[dsp + 262160 >> 2] = 0;for (i1 = 0; (((i1 | 0) < 65536) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAPF32[dsp + 0 + ((i1 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var input0 = 0;var output0 = 0;var fSlow0 = 0.;var iSlow1 = 0;var i = 0;input0 = (HEAP32[inputs + (0 << 2) >> 2] | 0);output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);fSlow0 = +(0.001 * +(+(HEAPF32[dsp + 262152 >> 2])));iSlow1 = ((1 + ~~(+(44100. * +(max(0.01, +(min(1., +(+(HEAPF32[dsp + 262156 >> 2]))))))))) | 0);for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAPF32[dsp + 262144 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 262144 + (1 << 2) >> 2])) + +(fSlow0));HEAPF32[dsp + 0 + ((((HEAP32[dsp + 262160 >> 2] | 0) & 65535) | 0) << 2) >> 2] = +(+(+(HEAPF32[input0 + ((i | 0) << 2) >> 2])) + +(+(HEAPF32[dsp + 262144 + (0 << 2) >> 2]) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 262160 >> 2] | 0) - (iSlow1 | 0)) | 0) & 65535) | 0) << 2) >> 2])));HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 262160 >> 2] | 0) - 0) | 0) & 65535) | 0) << 2) >> 2]));HEAPF32[dsp + 262144 + (1 << 2) >> 2] = +(HEAPF32[dsp + 262144 + (0 << 2) >> 2]);HEAP32[dsp + 262160 >> 2] = (((HEAP32[dsp + 262160 >> 2] | 0) + 1) | 0);}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp7() {return 262168;}function getPathTablemydsp7() {var pathTable = [];pathTable[\"/Echo/Echo_Intensity_(Feedback)\"] = 262152;pathTable[\"/Echo/Echo_Delay\"] = 262156;return pathTable;}function getJSONmydsp7() {return \"{ \\\"name\\\": \\\"Echo\\\", \\\"inputs\\\": \\\"1\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"name\\\": \\\"Echo\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Echo\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Echo Delay\\\", \\\"address\\\": \\\"/Echo/Echo_Delay\\\", \\\"meta\\\": [ { \\\"unit\\\": \\\"s\\\" } ], \\\"init\\\": \\\"0.5\\\", \\\"min\\\": \\\"0.01\\\", \\\"max\\\": \\\"1\\\", \\\"step\\\": \\\"0.001\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Echo Intensity (Feedback)\\\", \\\"address\\\": \\\"/Echo/Echo_Intensity_(Feedback)\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"0 0 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" } ], \\\"init\\\": \\\"0.001\\\", \\\"min\\\": \\\"0.001\\\", \\\"max\\\": \\\"0.65\\\", \\\"step\\\": \\\"0.001\\\" } ] } ] } \";}function metadatamydsp7(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"name\", \"Echo\");}"}},"8":{"patchId":"8","code":"process = vgroup(\"Flanger\",environment{declare name \"Flanger\";\r\n\r\nimport(\"effect.lib\");//flanger_demo\r\nimport(\"filter.lib\");\r\nimport(\"music.lib\");\r\n\r\n/* =========== DESCRIPTION ==========\r\n\r\n- Flanger effect\r\n- Head = No effect\r\n- Bottom = Maximum Intensity and Amplitude\r\n- Left = Slow Flanging\r\n- Right = Maximum Speed\r\n\r\n*/\r\n\r\nprocess = _<:_,(_<:FlangerDemo:>*(0.1)):drywet;\r\n\r\n\r\nFlangerDemo = flanger_stereo_demo with {\r\n flanger_group(x) =\r\n vgroup(\"FLANGER [tooltip: Reference: https://ccrma.stanford.edu/~jos/pasp/Flanging.html]\", x);\r\n ctl_group(x) = flanger_group(hgroup(\"[1]\", x));\r\n\r\n invert = 0;// meter_group(checkbox(\"[1] Invert Flange Sum\"));\r\n\r\n flanger_stereo_demo(x,y) = x,y : flanger_stereo(dmax,curdel1,curdel2,depth,fb,invert);\r\n\r\n lfol = component(\"oscillator.lib\").oscrs; // sine for left channel\r\n lfor = component(\"oscillator.lib\").oscrc; // cosine for right channel\r\n dmax = 2048;\r\n dflange = 0.001 * SR * 10;\r\n odflange = 0.001 * SR * 1;\r\n freq = ctl_group(hslider(\"[1] Speed [acc:0 0 -10 0 10][unit:Hz] [style:knob]\", 3, 0, 10, 0.01));\r\n depth = 1;\r\n fb = 0.99;\r\n curdel1 = odflange+dflange*(1 + lfol(freq))/2;\r\n curdel2 = odflange+dflange*(1 + lfor(freq))/2;\r\n};\r\n\r\ndrywet(x,y) \t= (1-c)*x + c*y\r\n\t\t\t\twith {\r\n\t\t\t\t\tc = hslider(\"[3] Flanger Intensity [unit:%][acc:1 1 -10 0 10]\", 10,0,100,0.01)*(0.01):smooth(0.999);\r\n\t\t\t\t\t};\r\n}.process);","name":"Flanger","x":"759","y":"251","inputs":{"source":["5"]},"outputs":{"destination":["output"]},"params":{"sliders":[{"path":"/Flanger/FLANGER/0x00/Speed","value":3},{"path":"/Flanger/Flanger_Intensity","value":10}]},"factory":{"name":"mydsp8","code":"/* ------------------------------------------------------------name: \"Flanger\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp8Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var cosf = global.Math.cos;var max = global.Math.max;var min = global.Math.min;var sinf = global.Math.sin;function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputs(dsp) {dsp = dsp | 0;return 1;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;var i6 = 0;var i7 = 0;HEAP32[dsp + 16440 >> 2] = (samplingFreq | 0);for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAP32[dsp + 16384 + ((i0 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 16432 >> 2] = +(10.);for (i1 = 0; (((i1 | 0) < 2) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAPF32[dsp + 16392 + ((i1 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 16436 >> 2] = 0;for (i2 = 0; (((i2 | 0) < 2048) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAPF32[dsp + 0 + ((i2 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 16444 >> 2] = ((min(192000, ((max(1, (HEAP32[dsp + 16440 >> 2] | 0))) | 0))) | 0);HEAPF32[dsp + 16448 >> 2] = +(6.28319 / +((HEAP32[dsp + 16444 >> 2] | 0)));HEAPF32[dsp + 16452 >> 2] = +(3.);for (i3 = 0; (((i3 | 0) < 2) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAPF32[dsp + 16400 + ((i3 | 0) << 2) >> 2] = 0.;}for (i4 = 0; (((i4 | 0) < 2) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAPF32[dsp + 16408 + ((i4 | 0) << 2) >> 2] = 0.;}for (i5 = 0; (((i5 | 0) < 2) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAPF32[dsp + 16416 + ((i5 | 0) << 2) >> 2] = 0.;}for (i6 = 0; (((i6 | 0) < 2048) | 0); i6 = (((i6 | 0) + 1) | 0)) {HEAPF32[dsp + 8192 + ((i6 | 0) << 2) >> 2] = 0.;}for (i7 = 0; (((i7 | 0) < 2) | 0); i7 = (((i7 | 0) + 1) | 0)) {HEAPF32[dsp + 16424 + ((i7 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var input0 = 0;var output0 = 0;var fSlow0 = 0.;var fSlow1 = 0.;var fSlow2 = 0.;var fSlow3 = 0.;var fSlow4 = 0.;var i = 0;var fTemp0 = 0.;var fTemp1 = 0.;var fTemp2 = 0.;var iTemp3 = 0;var iTemp4 = 0;var fTemp5 = 0.;var fTemp6 = 0.;var iTemp7 = 0;var iTemp8 = 0;input0 = (HEAP32[inputs + (0 << 2) >> 2] | 0);output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);fSlow0 = +(1.e-05 * +(+(HEAPF32[dsp + 16432 >> 2])));fSlow1 = +(+(HEAPF32[dsp + 16448 >> 2]) * +(+(HEAPF32[dsp + 16452 >> 2])));fSlow2 = +(sinf(+(fSlow1)));fSlow3 = +(cosf(+(fSlow1)));fSlow4 = +(0. - +(fSlow2));for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {fTemp0 = +(+(HEAPF32[input0 + ((i | 0) << 2) >> 2]));HEAP32[dsp + 16384 + (0 << 2) >> 2] = 1;HEAPF32[dsp + 16392 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 16392 + (1 << 2) >> 2])) + +(fSlow0));fTemp1 = +(+(0.99 * +(HEAPF32[dsp + 16416 + (1 << 2) >> 2])) - +(fTemp0));HEAPF32[dsp + 0 + ((((HEAP32[dsp + 16436 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(fTemp1);HEAPF32[dsp + 16400 + (0 << 2) >> 2] = +(+(+(fSlow2) * +(HEAPF32[dsp + 16408 + (1 << 2) >> 2])) + +(+(fSlow3) * +(HEAPF32[dsp + 16400 + (1 << 2) >> 2])));HEAPF32[dsp + 16408 + (0 << 2) >> 2] = +(+(1. + +(+(+(fSlow3) * +(HEAPF32[dsp + 16408 + (1 << 2) >> 2])) + +(+(fSlow4) * +(HEAPF32[dsp + 16400 + (1 << 2) >> 2])))) - +((HEAP32[dsp + 16384 + (1 << 2) >> 2] | 0)));fTemp2 = +(+((HEAP32[dsp + 16444 >> 2] | 0)) * +(0.001 + +(0.005 * +(1. + +(HEAPF32[dsp + 16400 + (0 << 2) >> 2])))));iTemp3 = ~~(+(fTemp2));iTemp4 = ((1 + (iTemp3 | 0)) | 0);HEAPF32[dsp + 16416 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 16436 >> 2] | 0) - (((iTemp3 | 0) & 2047) | 0)) | 0) & 2047) | 0) << 2) >> 2]) * +(+((iTemp4 | 0)) - +(fTemp2))) + +(+(+(fTemp2) - +((iTemp3 | 0))) * +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 16436 >> 2] | 0) - (((iTemp4 | 0) & 2047) | 0)) | 0) & 2047) | 0) << 2) >> 2])));fTemp5 = +(+(0.99 * +(HEAPF32[dsp + 16424 + (1 << 2) >> 2])) - +(fTemp0));HEAPF32[dsp + 8192 + ((((HEAP32[dsp + 16436 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(fTemp5);fTemp6 = +(+((HEAP32[dsp + 16444 >> 2] | 0)) * +(0.001 + +(0.005 * +(1. + +(HEAPF32[dsp + 16408 + (0 << 2) >> 2])))));iTemp7 = ~~(+(fTemp6));iTemp8 = ((1 + (iTemp7 | 0)) | 0);HEAPF32[dsp + 16424 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 8192 + ((((((HEAP32[dsp + 16436 >> 2] | 0) - (((iTemp7 | 0) & 2047) | 0)) | 0) & 2047) | 0) << 2) >> 2]) * +(+((iTemp8 | 0)) - +(fTemp6))) + +(+(+(fTemp6) - +((iTemp7 | 0))) * +(HEAPF32[dsp + 8192 + ((((((HEAP32[dsp + 16436 >> 2] | 0) - (((iTemp8 | 0) & 2047) | 0)) | 0) & 2047) | 0) << 2) >> 2])));HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(+(+(fTemp0) * +(1. - +(HEAPF32[dsp + 16392 + (0 << 2) >> 2]))) + +(0.05 * +(+(HEAPF32[dsp + 16392 + (0 << 2) >> 2]) * +(+(+(fTemp0) + +(HEAPF32[dsp + 16416 + (0 << 2) >> 2])) + +(+(fTemp0) + +(HEAPF32[dsp + 16424 + (0 << 2) >> 2])))))));HEAP32[dsp + 16384 + (1 << 2) >> 2] = (HEAP32[dsp + 16384 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 16392 + (1 << 2) >> 2] = +(HEAPF32[dsp + 16392 + (0 << 2) >> 2]);HEAP32[dsp + 16436 >> 2] = (((HEAP32[dsp + 16436 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 16400 + (1 << 2) >> 2] = +(HEAPF32[dsp + 16400 + (0 << 2) >> 2]);HEAPF32[dsp + 16408 + (1 << 2) >> 2] = +(HEAPF32[dsp + 16408 + (0 << 2) >> 2]);HEAPF32[dsp + 16416 + (1 << 2) >> 2] = +(HEAPF32[dsp + 16416 + (0 << 2) >> 2]);HEAPF32[dsp + 16424 + (1 << 2) >> 2] = +(HEAPF32[dsp + 16424 + (0 << 2) >> 2]);}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp8() {return 16456;}function getPathTablemydsp8() {var pathTable = [];pathTable[\"/Flanger/Flanger_Intensity\"] = 16432;pathTable[\"/Flanger/FLANGER/0x00/Speed\"] = 16452;return pathTable;}function getJSONmydsp8() {return \"{ \\\"name\\\": \\\"Flanger\\\", \\\"inputs\\\": \\\"1\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_author\\\": \\\"Priyanka Shekar (pshekar@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\\\": \\\"Copyright (c) 2013 Priyanka Shekar\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_license\\\": \\\"MIT License (MIT)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_name\\\": \\\"Harmonic Exciter\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/name\\\": \\\"Faust Audio Effect Library\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/version\\\": \\\"1.33\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/name\\\": \\\"Faust Oscillator Library\\\" }, { \\\"http://192.168.1.61/faustcode/oscillator.lib/version\\\": \\\"1.11\\\" }, { \\\"name\\\": \\\"Flanger\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Flanger\\\", \\\"items\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"FLANGER\\\", \\\"meta\\\": [ { \\\"tooltip\\\": \\\"Reference: https://ccrma.stanford.edu/~jos/pasp/Flanging.html\\\" } ], \\\"items\\\": [ { \\\"type\\\": \\\"hgroup\\\", \\\"label\\\": \\\"0x00\\\", \\\"meta\\\": [ { \\\"1\\\": \\\"\\\" } ], \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Speed\\\", \\\"address\\\": \\\"/Flanger/FLANGER/0x00/Speed\\\", \\\"meta\\\": [ { \\\"1\\\": \\\"\\\" }, { \\\"acc\\\": \\\"0 0 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" }, { \\\"unit\\\": \\\"Hz\\\" } ], \\\"init\\\": \\\"3\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"10\\\", \\\"step\\\": \\\"0.01\\\" } ] } ] }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Flanger Intensity\\\", \\\"address\\\": \\\"/Flanger/Flanger_Intensity\\\", \\\"meta\\\": [ { \\\"3\\\": \\\"\\\" }, { \\\"acc\\\": \\\"1 1 -10 0 10\\\" }, { \\\"unit\\\": \\\"%\\\" } ], \\\"init\\\": \\\"10\\\", \\\"min\\\": \\\"0\\\", \\\"max\\\": \\\"100\\\", \\\"step\\\": \\\"0.01\\\" } ] } ] } \";}function metadatamydsp8(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_author\", \"Priyanka Shekar (pshekar@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\", \"Copyright (c) 2013 Priyanka Shekar\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_license\", \"MIT License (MIT)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_name\", \"Harmonic Exciter\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/name\", \"Faust Audio Effect Library\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/version\", \"1.33\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/name\", \"Faust Oscillator Library\");m.declare(\"http://192.168.1.61/faustcode/oscillator.lib/version\", \"1.11\");m.declare(\"name\", \"Flanger\");}"}},"9":{"patchId":"9","code":"process = vgroup(\"Freeverb\",environment{declare name \"freeverb\";\r\ndeclare version \"1.0\";\r\ndeclare author \"Grame\";\r\ndeclare license \"BSD\";\r\ndeclare copyright \"(c) GRAME 2006\";\r\ndeclare reference \"https://ccrma.stanford.edu/~jos/pasp/Freeverb.html\";\r\n\r\nimport(\"music.lib\");\r\nimport(\"filter.lib\");\r\n\r\n\r\n\r\n/* Description : \r\n\r\n- Reverberation processor.\r\n- Head = maximum reverberation.\r\n\r\n*/ \r\n\r\nfreeverb = vgroup(\"Freeverb\", fxctrl(fixedgain, wetSlider, stereoReverb(combfeed, allpassfeed, dampSlider, stereospread)));\r\n\r\nprocess = _<: freeverb :>_;\r\n\r\n//======================================================\r\n//\r\n// Freeverb\r\n// Faster version using fixed delays (20% gain)\r\n//\r\n//======================================================\r\n\r\n// Constant Parameters\r\n//--------------------\r\n\r\nfixedgain = 0.015; //value of the gain of fxctrl\r\nscalewet = 3.0;\r\nscaledry = 2.0;\r\nscaledamp = 0.4;\r\nscaleroom = 0.28;\r\noffsetroom = 0.7;\r\ninitialroom = 0.5;\r\ninitialdamp = 0.5;\r\ninitialwet = 1.0/scalewet;\r\ninitialdry = 0;\r\ninitialwidth= 1.0;\r\ninitialmode = 0.0;\r\nfreezemode = 0.5;\r\nstereospread= 23;\r\nallpassfeed = 0.5; //feedback of the delays used in allpass filters\r\n\r\n\r\n// Filter Parameters\r\n//------------------\r\n\r\ncombtuningL1 = 1116;\r\ncombtuningL2 = 1188;\r\ncombtuningL3 = 1277;\r\ncombtuningL4 = 1356;\r\ncombtuningL5 = 1422;\r\ncombtuningL6 = 1491;\r\ncombtuningL7 = 1557;\r\ncombtuningL8 = 1617;\r\n\r\nallpasstuningL1 = 556;\r\nallpasstuningL2 = 441;\r\nallpasstuningL3 = 341;\r\nallpasstuningL4 = 225;\r\n\r\n\r\n// Control Sliders\r\n//--------------------\r\n// Damp : filters the high frequencies of the echoes (especially active for great values of RoomSize)\r\n// RoomSize : size of the reverberation room\r\n// Dry : original signal\r\n// Wet : reverberated signal\r\n\r\n//dampSlider = hslider(\"Damp\",0.5, 0, 1, 0.025)*scaledamp;\r\n\r\ndampSlider \t\t= 0.7*scaledamp;\r\nroomsizeSlider = hslider(\"Reverberation Room Size[acc:1 0 -10 0 10]\", 0.5, 0.1, 0.9, 0.025) : smooth(0.999) : min(0.9) :max(0.1) *scaleroom + offsetroom;\r\nwetSlider = hslider(\"Reverberation Intensity[acc:1 0 -10 0 10]\", 0.3333, 0.1, 0.9, 0.025) : smooth(0.999) : min(0.9) :max(0.1);\r\ncombfeed = roomsizeSlider;\r\n\r\n\r\n// Comb and Allpass filters\r\n//-------------------------\r\n\r\nallpass(dt,fb) = (_,_ <: (*(fb),_:+:@(dt)), -) ~ _ : (!,_);\r\n\r\ncomb(dt, fb, damp) = (+:@(dt)) ~ (*(1-damp) : (+ ~ *(damp)) : *(fb));\r\n\r\n\r\n// Reverb components\r\n//------------------\r\n\r\nmonoReverb(fb1, fb2, damp, spread)\r\n = _ <: comb(combtuningL1+spread, fb1, damp),\r\n comb(combtuningL2+spread, fb1, damp),\r\n comb(combtuningL3+spread, fb1, damp),\r\n comb(combtuningL4+spread, fb1, damp),\r\n comb(combtuningL5+spread, fb1, damp),\r\n comb(combtuningL6+spread, fb1, damp),\r\n comb(combtuningL7+spread, fb1, damp),\r\n comb(combtuningL8+spread, fb1, damp)\r\n +>\r\n allpass (allpasstuningL1+spread, fb2)\r\n : allpass (allpasstuningL2+spread, fb2)\r\n : allpass (allpasstuningL3+spread, fb2)\r\n : allpass (allpasstuningL4+spread, fb2)\r\n ;\r\n\r\nstereoReverb(fb1, fb2, damp, spread)\r\n = + <: monoReverb(fb1, fb2, damp, 0), monoReverb(fb1, fb2, damp, spread);\r\n\r\n\r\n// fxctrl : add an input gain and a wet-dry control to a stereo FX\r\n//----------------------------------------------------------------\r\n\r\nfxctrl(g,w,Fx) = _,_ <: (*(g),*(g) : Fx : *(w),*(w)), *(1-w), *(1-w) +> _,_;\r\n}.process);","name":"Freeverb","x":"748","y":"151","inputs":{"source":["4"]},"outputs":{"destination":["output"]},"params":{"sliders":[{"path":"/Freeverb/Freeverb/Reverberation_Intensity","value":0.33329999446868896},{"path":"/Freeverb/Freeverb/Reverberation_Room_Size","value":0.5}]},"factory":{"name":"mydsp9","code":"/* ------------------------------------------------------------author: \"Grame\"copyright: \"(c) GRAME 2006\"license: \"BSD\"name: \"freeverb\"version: \"1.0\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp9Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var max = global.Math.max;var min = global.Math.min;function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputs(dsp) {dsp = dsp | 0;return 1;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;var i6 = 0;var i7 = 0;var i8 = 0;var i9 = 0;var i10 = 0;var i11 = 0;var i12 = 0;var i13 = 0;var i14 = 0;var i15 = 0;var i16 = 0;var i17 = 0;var i18 = 0;var i19 = 0;var i20 = 0;var i21 = 0;var i22 = 0;var i23 = 0;var i24 = 0;var i25 = 0;var i26 = 0;var i27 = 0;var i28 = 0;var i29 = 0;var i30 = 0;var i31 = 0;var i32 = 0;var i33 = 0;var i34 = 0;var i35 = 0;var i36 = 0;var i37 = 0;var i38 = 0;var i39 = 0;var i40 = 0;var i41 = 0;var i42 = 0;var i43 = 0;var i44 = 0;var i45 = 0;var i46 = 0;var i47 = 0;var i48 = 0;var i49 = 0;var i50 = 0;var i51 = 0;var i52 = 0;var i53 = 0;var i54 = 0;var i55 = 0;var i56 = 0;var i57 = 0;var i58 = 0;var i59 = 0;var i60 = 0;var i61 = 0;var i62 = 0;var i63 = 0;var i64 = 0;var i65 = 0;HEAP32[dsp + 149852 >> 2] = (samplingFreq | 0);HEAPF32[dsp + 149840 >> 2] = +(0.3333);for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAPF32[dsp + 149504 + ((i0 | 0) << 2) >> 2] = 0.;}for (i1 = 0; (((i1 | 0) < 2) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAPF32[dsp + 149512 + ((i1 | 0) << 2) >> 2] = 0.;}HEAPF32[dsp + 149844 >> 2] = +(0.5);for (i2 = 0; (((i2 | 0) < 2) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAPF32[dsp + 149520 + ((i2 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 149848 >> 2] = 0;for (i3 = 0; (((i3 | 0) < 2048) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAPF32[dsp + 0 + ((i3 | 0) << 2) >> 2] = 0.;}for (i4 = 0; (((i4 | 0) < 2) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAPF32[dsp + 149528 + ((i4 | 0) << 2) >> 2] = 0.;}for (i5 = 0; (((i5 | 0) < 2) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAPF32[dsp + 149536 + ((i5 | 0) << 2) >> 2] = 0.;}for (i6 = 0; (((i6 | 0) < 2048) | 0); i6 = (((i6 | 0) + 1) | 0)) {HEAPF32[dsp + 8192 + ((i6 | 0) << 2) >> 2] = 0.;}for (i7 = 0; (((i7 | 0) < 2) | 0); i7 = (((i7 | 0) + 1) | 0)) {HEAPF32[dsp + 149544 + ((i7 | 0) << 2) >> 2] = 0.;}for (i8 = 0; (((i8 | 0) < 2) | 0); i8 = (((i8 | 0) + 1) | 0)) {HEAPF32[dsp + 149552 + ((i8 | 0) << 2) >> 2] = 0.;}for (i9 = 0; (((i9 | 0) < 2048) | 0); i9 = (((i9 | 0) + 1) | 0)) {HEAPF32[dsp + 16384 + ((i9 | 0) << 2) >> 2] = 0.;}for (i10 = 0; (((i10 | 0) < 2) | 0); i10 = (((i10 | 0) + 1) | 0)) {HEAPF32[dsp + 149560 + ((i10 | 0) << 2) >> 2] = 0.;}for (i11 = 0; (((i11 | 0) < 2) | 0); i11 = (((i11 | 0) + 1) | 0)) {HEAPF32[dsp + 149568 + ((i11 | 0) << 2) >> 2] = 0.;}for (i12 = 0; (((i12 | 0) < 2048) | 0); i12 = (((i12 | 0) + 1) | 0)) {HEAPF32[dsp + 24576 + ((i12 | 0) << 2) >> 2] = 0.;}for (i13 = 0; (((i13 | 0) < 2) | 0); i13 = (((i13 | 0) + 1) | 0)) {HEAPF32[dsp + 149576 + ((i13 | 0) << 2) >> 2] = 0.;}for (i14 = 0; (((i14 | 0) < 2) | 0); i14 = (((i14 | 0) + 1) | 0)) {HEAPF32[dsp + 149584 + ((i14 | 0) << 2) >> 2] = 0.;}for (i15 = 0; (((i15 | 0) < 2048) | 0); i15 = (((i15 | 0) + 1) | 0)) {HEAPF32[dsp + 32768 + ((i15 | 0) << 2) >> 2] = 0.;}for (i16 = 0; (((i16 | 0) < 2) | 0); i16 = (((i16 | 0) + 1) | 0)) {HEAPF32[dsp + 149592 + ((i16 | 0) << 2) >> 2] = 0.;}for (i17 = 0; (((i17 | 0) < 2) | 0); i17 = (((i17 | 0) + 1) | 0)) {HEAPF32[dsp + 149600 + ((i17 | 0) << 2) >> 2] = 0.;}for (i18 = 0; (((i18 | 0) < 2048) | 0); i18 = (((i18 | 0) + 1) | 0)) {HEAPF32[dsp + 40960 + ((i18 | 0) << 2) >> 2] = 0.;}for (i19 = 0; (((i19 | 0) < 2) | 0); i19 = (((i19 | 0) + 1) | 0)) {HEAPF32[dsp + 149608 + ((i19 | 0) << 2) >> 2] = 0.;}for (i20 = 0; (((i20 | 0) < 2) | 0); i20 = (((i20 | 0) + 1) | 0)) {HEAPF32[dsp + 149616 + ((i20 | 0) << 2) >> 2] = 0.;}for (i21 = 0; (((i21 | 0) < 2048) | 0); i21 = (((i21 | 0) + 1) | 0)) {HEAPF32[dsp + 49152 + ((i21 | 0) << 2) >> 2] = 0.;}for (i22 = 0; (((i22 | 0) < 2) | 0); i22 = (((i22 | 0) + 1) | 0)) {HEAPF32[dsp + 149624 + ((i22 | 0) << 2) >> 2] = 0.;}for (i23 = 0; (((i23 | 0) < 2) | 0); i23 = (((i23 | 0) + 1) | 0)) {HEAPF32[dsp + 149632 + ((i23 | 0) << 2) >> 2] = 0.;}for (i24 = 0; (((i24 | 0) < 2048) | 0); i24 = (((i24 | 0) + 1) | 0)) {HEAPF32[dsp + 57344 + ((i24 | 0) << 2) >> 2] = 0.;}for (i25 = 0; (((i25 | 0) < 2) | 0); i25 = (((i25 | 0) + 1) | 0)) {HEAPF32[dsp + 149640 + ((i25 | 0) << 2) >> 2] = 0.;}for (i26 = 0; (((i26 | 0) < 1024) | 0); i26 = (((i26 | 0) + 1) | 0)) {HEAPF32[dsp + 131072 + ((i26 | 0) << 2) >> 2] = 0.;}for (i27 = 0; (((i27 | 0) < 2) | 0); i27 = (((i27 | 0) + 1) | 0)) {HEAPF32[dsp + 149648 + ((i27 | 0) << 2) >> 2] = 0.;}for (i28 = 0; (((i28 | 0) < 512) | 0); i28 = (((i28 | 0) + 1) | 0)) {HEAPF32[dsp + 139264 + ((i28 | 0) << 2) >> 2] = 0.;}for (i29 = 0; (((i29 | 0) < 2) | 0); i29 = (((i29 | 0) + 1) | 0)) {HEAPF32[dsp + 149656 + ((i29 | 0) << 2) >> 2] = 0.;}for (i30 = 0; (((i30 | 0) < 512) | 0); i30 = (((i30 | 0) + 1) | 0)) {HEAPF32[dsp + 141312 + ((i30 | 0) << 2) >> 2] = 0.;}for (i31 = 0; (((i31 | 0) < 2) | 0); i31 = (((i31 | 0) + 1) | 0)) {HEAPF32[dsp + 149664 + ((i31 | 0) << 2) >> 2] = 0.;}for (i32 = 0; (((i32 | 0) < 256) | 0); i32 = (((i32 | 0) + 1) | 0)) {HEAPF32[dsp + 147456 + ((i32 | 0) << 2) >> 2] = 0.;}for (i33 = 0; (((i33 | 0) < 2) | 0); i33 = (((i33 | 0) + 1) | 0)) {HEAPF32[dsp + 149672 + ((i33 | 0) << 2) >> 2] = 0.;}for (i34 = 0; (((i34 | 0) < 2) | 0); i34 = (((i34 | 0) + 1) | 0)) {HEAPF32[dsp + 149680 + ((i34 | 0) << 2) >> 2] = 0.;}for (i35 = 0; (((i35 | 0) < 2048) | 0); i35 = (((i35 | 0) + 1) | 0)) {HEAPF32[dsp + 65536 + ((i35 | 0) << 2) >> 2] = 0.;}for (i36 = 0; (((i36 | 0) < 2) | 0); i36 = (((i36 | 0) + 1) | 0)) {HEAPF32[dsp + 149688 + ((i36 | 0) << 2) >> 2] = 0.;}for (i37 = 0; (((i37 | 0) < 2) | 0); i37 = (((i37 | 0) + 1) | 0)) {HEAPF32[dsp + 149696 + ((i37 | 0) << 2) >> 2] = 0.;}for (i38 = 0; (((i38 | 0) < 2048) | 0); i38 = (((i38 | 0) + 1) | 0)) {HEAPF32[dsp + 73728 + ((i38 | 0) << 2) >> 2] = 0.;}for (i39 = 0; (((i39 | 0) < 2) | 0); i39 = (((i39 | 0) + 1) | 0)) {HEAPF32[dsp + 149704 + ((i39 | 0) << 2) >> 2] = 0.;}for (i40 = 0; (((i40 | 0) < 2) | 0); i40 = (((i40 | 0) + 1) | 0)) {HEAPF32[dsp + 149712 + ((i40 | 0) << 2) >> 2] = 0.;}for (i41 = 0; (((i41 | 0) < 2048) | 0); i41 = (((i41 | 0) + 1) | 0)) {HEAPF32[dsp + 81920 + ((i41 | 0) << 2) >> 2] = 0.;}for (i42 = 0; (((i42 | 0) < 2) | 0); i42 = (((i42 | 0) + 1) | 0)) {HEAPF32[dsp + 149720 + ((i42 | 0) << 2) >> 2] = 0.;}for (i43 = 0; (((i43 | 0) < 2) | 0); i43 = (((i43 | 0) + 1) | 0)) {HEAPF32[dsp + 149728 + ((i43 | 0) << 2) >> 2] = 0.;}for (i44 = 0; (((i44 | 0) < 2048) | 0); i44 = (((i44 | 0) + 1) | 0)) {HEAPF32[dsp + 90112 + ((i44 | 0) << 2) >> 2] = 0.;}for (i45 = 0; (((i45 | 0) < 2) | 0); i45 = (((i45 | 0) + 1) | 0)) {HEAPF32[dsp + 149736 + ((i45 | 0) << 2) >> 2] = 0.;}for (i46 = 0; (((i46 | 0) < 2) | 0); i46 = (((i46 | 0) + 1) | 0)) {HEAPF32[dsp + 149744 + ((i46 | 0) << 2) >> 2] = 0.;}for (i47 = 0; (((i47 | 0) < 2048) | 0); i47 = (((i47 | 0) + 1) | 0)) {HEAPF32[dsp + 98304 + ((i47 | 0) << 2) >> 2] = 0.;}for (i48 = 0; (((i48 | 0) < 2) | 0); i48 = (((i48 | 0) + 1) | 0)) {HEAPF32[dsp + 149752 + ((i48 | 0) << 2) >> 2] = 0.;}for (i49 = 0; (((i49 | 0) < 2) | 0); i49 = (((i49 | 0) + 1) | 0)) {HEAPF32[dsp + 149760 + ((i49 | 0) << 2) >> 2] = 0.;}for (i50 = 0; (((i50 | 0) < 2048) | 0); i50 = (((i50 | 0) + 1) | 0)) {HEAPF32[dsp + 106496 + ((i50 | 0) << 2) >> 2] = 0.;}for (i51 = 0; (((i51 | 0) < 2) | 0); i51 = (((i51 | 0) + 1) | 0)) {HEAPF32[dsp + 149768 + ((i51 | 0) << 2) >> 2] = 0.;}for (i52 = 0; (((i52 | 0) < 2) | 0); i52 = (((i52 | 0) + 1) | 0)) {HEAPF32[dsp + 149776 + ((i52 | 0) << 2) >> 2] = 0.;}for (i53 = 0; (((i53 | 0) < 2048) | 0); i53 = (((i53 | 0) + 1) | 0)) {HEAPF32[dsp + 114688 + ((i53 | 0) << 2) >> 2] = 0.;}for (i54 = 0; (((i54 | 0) < 2) | 0); i54 = (((i54 | 0) + 1) | 0)) {HEAPF32[dsp + 149784 + ((i54 | 0) << 2) >> 2] = 0.;}for (i55 = 0; (((i55 | 0) < 2) | 0); i55 = (((i55 | 0) + 1) | 0)) {HEAPF32[dsp + 149792 + ((i55 | 0) << 2) >> 2] = 0.;}for (i56 = 0; (((i56 | 0) < 2048) | 0); i56 = (((i56 | 0) + 1) | 0)) {HEAPF32[dsp + 122880 + ((i56 | 0) << 2) >> 2] = 0.;}for (i57 = 0; (((i57 | 0) < 2) | 0); i57 = (((i57 | 0) + 1) | 0)) {HEAPF32[dsp + 149800 + ((i57 | 0) << 2) >> 2] = 0.;}for (i58 = 0; (((i58 | 0) < 1024) | 0); i58 = (((i58 | 0) + 1) | 0)) {HEAPF32[dsp + 135168 + ((i58 | 0) << 2) >> 2] = 0.;}for (i59 = 0; (((i59 | 0) < 2) | 0); i59 = (((i59 | 0) + 1) | 0)) {HEAPF32[dsp + 149808 + ((i59 | 0) << 2) >> 2] = 0.;}for (i60 = 0; (((i60 | 0) < 512) | 0); i60 = (((i60 | 0) + 1) | 0)) {HEAPF32[dsp + 143360 + ((i60 | 0) << 2) >> 2] = 0.;}for (i61 = 0; (((i61 | 0) < 2) | 0); i61 = (((i61 | 0) + 1) | 0)) {HEAPF32[dsp + 149816 + ((i61 | 0) << 2) >> 2] = 0.;}for (i62 = 0; (((i62 | 0) < 512) | 0); i62 = (((i62 | 0) + 1) | 0)) {HEAPF32[dsp + 145408 + ((i62 | 0) << 2) >> 2] = 0.;}for (i63 = 0; (((i63 | 0) < 2) | 0); i63 = (((i63 | 0) + 1) | 0)) {HEAPF32[dsp + 149824 + ((i63 | 0) << 2) >> 2] = 0.;}for (i64 = 0; (((i64 | 0) < 256) | 0); i64 = (((i64 | 0) + 1) | 0)) {HEAPF32[dsp + 148480 + ((i64 | 0) << 2) >> 2] = 0.;}for (i65 = 0; (((i65 | 0) < 2) | 0); i65 = (((i65 | 0) + 1) | 0)) {HEAPF32[dsp + 149832 + ((i65 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var input0 = 0;var output0 = 0;var fSlow0 = 0.;var fSlow1 = 0.;var i = 0;var fTemp0 = 0.;var fTemp1 = 0.;var fTemp2 = 0.;var fTemp3 = 0.;var fTemp4 = 0.;var fRec8 = 0.;var fRec6 = 0.;var fRec4 = 0.;var fRec2 = 0.;var fTemp5 = 0.;var fRec33 = 0.;var fRec31 = 0.;var fRec29 = 0.;var fRec27 = 0.;input0 = (HEAP32[inputs + (0 << 2) >> 2] | 0);output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);fSlow0 = +(0.001 * +(+(HEAPF32[dsp + 149840 >> 2])));fSlow1 = +(0.001 * +(+(HEAPF32[dsp + 149844 >> 2])));for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAPF32[dsp + 149504 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 149504 + (1 << 2) >> 2])) + +(fSlow0));fTemp0 = +(max(0.1, +(min(0.9, +(HEAPF32[dsp + 149504 + (0 << 2) >> 2])))));HEAPF32[dsp + 149512 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149512 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149528 + (1 << 2) >> 2])));HEAPF32[dsp + 149520 + (0 << 2) >> 2] = +(+(0.999 * +(HEAPF32[dsp + 149520 + (1 << 2) >> 2])) + +(fSlow1));fTemp1 = +(0.7 + +(0.28 * +(max(0.1, +(min(0.9, +(HEAPF32[dsp + 149520 + (0 << 2) >> 2])))))));fTemp2 = +(+(HEAPF32[input0 + ((i | 0) << 2) >> 2]));fTemp3 = +(0.03 * +(fTemp2));HEAPF32[dsp + 0 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(+(HEAPF32[dsp + 149512 + (0 << 2) >> 2]) * +(fTemp1)) + +(fTemp3));HEAPF32[dsp + 149528 + (0 << 2) >> 2] = +(HEAPF32[dsp + 0 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1116) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149536 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149536 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149544 + (1 << 2) >> 2])));HEAPF32[dsp + 8192 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149536 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149544 + (0 << 2) >> 2] = +(HEAPF32[dsp + 8192 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1188) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149552 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149552 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149560 + (1 << 2) >> 2])));HEAPF32[dsp + 16384 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149552 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149560 + (0 << 2) >> 2] = +(HEAPF32[dsp + 16384 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1277) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149568 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149568 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149576 + (1 << 2) >> 2])));HEAPF32[dsp + 24576 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149568 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149576 + (0 << 2) >> 2] = +(HEAPF32[dsp + 24576 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1356) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149584 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149584 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149592 + (1 << 2) >> 2])));HEAPF32[dsp + 32768 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149584 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149592 + (0 << 2) >> 2] = +(HEAPF32[dsp + 32768 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1422) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149600 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149600 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149608 + (1 << 2) >> 2])));HEAPF32[dsp + 40960 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149600 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149608 + (0 << 2) >> 2] = +(HEAPF32[dsp + 40960 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1491) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149616 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149616 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149624 + (1 << 2) >> 2])));HEAPF32[dsp + 49152 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149616 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149624 + (0 << 2) >> 2] = +(HEAPF32[dsp + 49152 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1557) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149632 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149632 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149640 + (1 << 2) >> 2])));HEAPF32[dsp + 57344 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149632 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149640 + (0 << 2) >> 2] = +(HEAPF32[dsp + 57344 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1617) | 0) & 2047) | 0) << 2) >> 2]);fTemp4 = +(+(+(+(+(+(+(+(HEAPF32[dsp + 149528 + (0 << 2) >> 2]) + +(HEAPF32[dsp + 149544 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149560 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149576 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149592 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149608 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149624 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149640 + (0 << 2) >> 2]));HEAPF32[dsp + 131072 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 1023) | 0) << 2) >> 2] = +(+(fTemp4) + +(0.5 * +(HEAPF32[dsp + 149648 + (1 << 2) >> 2])));HEAPF32[dsp + 149648 + (0 << 2) >> 2] = +(HEAPF32[dsp + 131072 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 556) | 0) & 1023) | 0) << 2) >> 2]);fRec8 = +(0. - +(+(fTemp4) - +(HEAPF32[dsp + 149648 + (1 << 2) >> 2])));HEAPF32[dsp + 139264 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(fRec8) + +(0.5 * +(HEAPF32[dsp + 149656 + (1 << 2) >> 2])));HEAPF32[dsp + 149656 + (0 << 2) >> 2] = +(HEAPF32[dsp + 139264 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 441) | 0) & 511) | 0) << 2) >> 2]);fRec6 = +(+(HEAPF32[dsp + 149656 + (1 << 2) >> 2]) - +(fRec8));HEAPF32[dsp + 141312 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(fRec6) + +(0.5 * +(HEAPF32[dsp + 149664 + (1 << 2) >> 2])));HEAPF32[dsp + 149664 + (0 << 2) >> 2] = +(HEAPF32[dsp + 141312 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 341) | 0) & 511) | 0) << 2) >> 2]);fRec4 = +(+(HEAPF32[dsp + 149664 + (1 << 2) >> 2]) - +(fRec6));HEAPF32[dsp + 147456 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(fRec4) + +(0.5 * +(HEAPF32[dsp + 149672 + (1 << 2) >> 2])));HEAPF32[dsp + 149672 + (0 << 2) >> 2] = +(HEAPF32[dsp + 147456 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 225) | 0) & 255) | 0) << 2) >> 2]);fRec2 = +(+(HEAPF32[dsp + 149672 + (1 << 2) >> 2]) - +(fRec4));HEAPF32[dsp + 149680 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149680 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149688 + (1 << 2) >> 2])));HEAPF32[dsp + 65536 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149680 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149688 + (0 << 2) >> 2] = +(HEAPF32[dsp + 65536 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1139) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149696 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149696 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149704 + (1 << 2) >> 2])));HEAPF32[dsp + 73728 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149696 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149704 + (0 << 2) >> 2] = +(HEAPF32[dsp + 73728 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1211) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149712 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149712 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149720 + (1 << 2) >> 2])));HEAPF32[dsp + 81920 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149712 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149720 + (0 << 2) >> 2] = +(HEAPF32[dsp + 81920 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1300) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149728 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149728 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149736 + (1 << 2) >> 2])));HEAPF32[dsp + 90112 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149728 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149736 + (0 << 2) >> 2] = +(HEAPF32[dsp + 90112 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1379) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149744 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149744 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149752 + (1 << 2) >> 2])));HEAPF32[dsp + 98304 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149744 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149752 + (0 << 2) >> 2] = +(HEAPF32[dsp + 98304 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1445) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149760 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149760 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149768 + (1 << 2) >> 2])));HEAPF32[dsp + 106496 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149760 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149768 + (0 << 2) >> 2] = +(HEAPF32[dsp + 106496 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1514) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149776 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149776 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149784 + (1 << 2) >> 2])));HEAPF32[dsp + 114688 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149776 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149784 + (0 << 2) >> 2] = +(HEAPF32[dsp + 114688 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1580) | 0) & 2047) | 0) << 2) >> 2]);HEAPF32[dsp + 149792 + (0 << 2) >> 2] = +(+(0.28 * +(HEAPF32[dsp + 149792 + (1 << 2) >> 2])) + +(0.72 * +(HEAPF32[dsp + 149800 + (1 << 2) >> 2])));HEAPF32[dsp + 122880 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 2047) | 0) << 2) >> 2] = +(+(fTemp3) + +(+(HEAPF32[dsp + 149792 + (0 << 2) >> 2]) * +(fTemp1)));HEAPF32[dsp + 149800 + (0 << 2) >> 2] = +(HEAPF32[dsp + 122880 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 1640) | 0) & 2047) | 0) << 2) >> 2]);fTemp5 = +(+(+(+(+(+(+(+(HEAPF32[dsp + 149688 + (0 << 2) >> 2]) + +(HEAPF32[dsp + 149704 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149720 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149736 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149752 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149768 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149784 + (0 << 2) >> 2])) + +(HEAPF32[dsp + 149800 + (0 << 2) >> 2]));HEAPF32[dsp + 135168 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 1023) | 0) << 2) >> 2] = +(+(fTemp5) + +(0.5 * +(HEAPF32[dsp + 149808 + (1 << 2) >> 2])));HEAPF32[dsp + 149808 + (0 << 2) >> 2] = +(HEAPF32[dsp + 135168 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 579) | 0) & 1023) | 0) << 2) >> 2]);fRec33 = +(0. - +(+(fTemp5) - +(HEAPF32[dsp + 149808 + (1 << 2) >> 2])));HEAPF32[dsp + 143360 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(fRec33) + +(0.5 * +(HEAPF32[dsp + 149816 + (1 << 2) >> 2])));HEAPF32[dsp + 149816 + (0 << 2) >> 2] = +(HEAPF32[dsp + 143360 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 464) | 0) & 511) | 0) << 2) >> 2]);fRec31 = +(+(HEAPF32[dsp + 149816 + (1 << 2) >> 2]) - +(fRec33));HEAPF32[dsp + 145408 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 511) | 0) << 2) >> 2] = +(+(fRec31) + +(0.5 * +(HEAPF32[dsp + 149824 + (1 << 2) >> 2])));HEAPF32[dsp + 149824 + (0 << 2) >> 2] = +(HEAPF32[dsp + 145408 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 364) | 0) & 511) | 0) << 2) >> 2]);fRec29 = +(+(HEAPF32[dsp + 149824 + (1 << 2) >> 2]) - +(fRec31));HEAPF32[dsp + 148480 + ((((HEAP32[dsp + 149848 >> 2] | 0) & 255) | 0) << 2) >> 2] = +(+(fRec29) + +(0.5 * +(HEAPF32[dsp + 149832 + (1 << 2) >> 2])));HEAPF32[dsp + 149832 + (0 << 2) >> 2] = +(HEAPF32[dsp + 148480 + ((((((HEAP32[dsp + 149848 >> 2] | 0) - 248) | 0) & 255) | 0) << 2) >> 2]);fRec27 = +(+(HEAPF32[dsp + 149832 + (1 << 2) >> 2]) - +(fRec29));HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(+(+(fTemp0) * +(+(fRec2) + +(fRec27))) + +(2. * +(+(fTemp2) * +(1. - +(fTemp0))))));HEAPF32[dsp + 149504 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149504 + (0 << 2) >> 2]);HEAPF32[dsp + 149512 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149512 + (0 << 2) >> 2]);HEAPF32[dsp + 149520 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149520 + (0 << 2) >> 2]);HEAP32[dsp + 149848 >> 2] = (((HEAP32[dsp + 149848 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 149528 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149528 + (0 << 2) >> 2]);HEAPF32[dsp + 149536 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149536 + (0 << 2) >> 2]);HEAPF32[dsp + 149544 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149544 + (0 << 2) >> 2]);HEAPF32[dsp + 149552 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149552 + (0 << 2) >> 2]);HEAPF32[dsp + 149560 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149560 + (0 << 2) >> 2]);HEAPF32[dsp + 149568 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149568 + (0 << 2) >> 2]);HEAPF32[dsp + 149576 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149576 + (0 << 2) >> 2]);HEAPF32[dsp + 149584 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149584 + (0 << 2) >> 2]);HEAPF32[dsp + 149592 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149592 + (0 << 2) >> 2]);HEAPF32[dsp + 149600 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149600 + (0 << 2) >> 2]);HEAPF32[dsp + 149608 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149608 + (0 << 2) >> 2]);HEAPF32[dsp + 149616 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149616 + (0 << 2) >> 2]);HEAPF32[dsp + 149624 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149624 + (0 << 2) >> 2]);HEAPF32[dsp + 149632 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149632 + (0 << 2) >> 2]);HEAPF32[dsp + 149640 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149640 + (0 << 2) >> 2]);HEAPF32[dsp + 149648 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149648 + (0 << 2) >> 2]);HEAPF32[dsp + 149656 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149656 + (0 << 2) >> 2]);HEAPF32[dsp + 149664 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149664 + (0 << 2) >> 2]);HEAPF32[dsp + 149672 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149672 + (0 << 2) >> 2]);HEAPF32[dsp + 149680 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149680 + (0 << 2) >> 2]);HEAPF32[dsp + 149688 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149688 + (0 << 2) >> 2]);HEAPF32[dsp + 149696 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149696 + (0 << 2) >> 2]);HEAPF32[dsp + 149704 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149704 + (0 << 2) >> 2]);HEAPF32[dsp + 149712 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149712 + (0 << 2) >> 2]);HEAPF32[dsp + 149720 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149720 + (0 << 2) >> 2]);HEAPF32[dsp + 149728 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149728 + (0 << 2) >> 2]);HEAPF32[dsp + 149736 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149736 + (0 << 2) >> 2]);HEAPF32[dsp + 149744 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149744 + (0 << 2) >> 2]);HEAPF32[dsp + 149752 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149752 + (0 << 2) >> 2]);HEAPF32[dsp + 149760 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149760 + (0 << 2) >> 2]);HEAPF32[dsp + 149768 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149768 + (0 << 2) >> 2]);HEAPF32[dsp + 149776 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149776 + (0 << 2) >> 2]);HEAPF32[dsp + 149784 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149784 + (0 << 2) >> 2]);HEAPF32[dsp + 149792 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149792 + (0 << 2) >> 2]);HEAPF32[dsp + 149800 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149800 + (0 << 2) >> 2]);HEAPF32[dsp + 149808 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149808 + (0 << 2) >> 2]);HEAPF32[dsp + 149816 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149816 + (0 << 2) >> 2]);HEAPF32[dsp + 149824 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149824 + (0 << 2) >> 2]);HEAPF32[dsp + 149832 + (1 << 2) >> 2] = +(HEAPF32[dsp + 149832 + (0 << 2) >> 2]);}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp9() {return 149856;}function getPathTablemydsp9() {var pathTable = [];pathTable[\"/Freeverb/Freeverb/Reverberation_Intensity\"] = 149840;pathTable[\"/Freeverb/Freeverb/Reverberation_Room_Size\"] = 149844;return pathTable;}function getJSONmydsp9() {return \"{ \\\"name\\\": \\\"freeverb\\\", \\\"inputs\\\": \\\"1\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"author\\\": \\\"Grame\\\" }, { \\\"copyright\\\": \\\"(c) GRAME 2006\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"license\\\": \\\"BSD\\\" }, { \\\"name\\\": \\\"freeverb\\\" }, { \\\"reference\\\": \\\"https://ccrma.stanford.edu/~jos/pasp/Freeverb.html\\\" }, { \\\"version\\\": \\\"1.0\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Freeverb\\\", \\\"items\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Freeverb\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Reverberation Intensity\\\", \\\"address\\\": \\\"/Freeverb/Freeverb/Reverberation_Intensity\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"1 0 -10 0 10\\\" } ], \\\"init\\\": \\\"0.3333\\\", \\\"min\\\": \\\"0.1\\\", \\\"max\\\": \\\"0.9\\\", \\\"step\\\": \\\"0.025\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Reverberation Room Size\\\", \\\"address\\\": \\\"/Freeverb/Freeverb/Reverberation_Room_Size\\\", \\\"meta\\\": [ { \\\"acc\\\": \\\"1 0 -10 0 10\\\" } ], \\\"init\\\": \\\"0.5\\\", \\\"min\\\": \\\"0.1\\\", \\\"max\\\": \\\"0.9\\\", \\\"step\\\": \\\"0.025\\\" } ] } ] } ] } \";}function metadatamydsp9(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"author\", \"Grame\");m.declare(\"copyright\", \"(c) GRAME 2006\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"license\", \"BSD\");m.declare(\"name\", \"freeverb\");m.declare(\"reference\", \"https://ccrma.stanford.edu/~jos/pasp/Freeverb.html\");m.declare(\"version\", \"1.0\");}"}},"10":{"patchId":"10","code":"process = vgroup(\"Granulator\",environment{declare name \"Granulator\";\r\ndeclare author \"Adapted from sfIter by Christophe Lebreton\";\r\n\r\n/* =========== DESCRITPTION =============\r\n\r\n- The granulator takes very small parts of a sound, called GRAINS, and plays them at a varying speed\r\n- Front = Medium size grains\r\n- Back = short grains\r\n- Left Slow rhythm\r\n- Right = Fast rhythm\r\n- Bottom = Regular occurrences\r\n- Head = Irregular occurrences \r\n*/\r\n\r\nimport(\"music.lib\"); \t// Define SR, delay \r\nimport(\"filter.lib\"); \t// smooth, ffcombfilter,fdelay4\r\nimport(\"effect.lib\"); \t// stereopanner\r\nimport(\"reduce.lib\"); // amp_follower\r\n\r\n\r\nprocess = hgroup(\"Granulator\", *(excitation : ampf));\r\n\r\nexcitation = noiseburst(gate,P) * (gain);\r\nampf = amp_follower_ud(duree_env,duree_env);\r\n\r\n//----------------------- NOISEBURST ------------------------- \r\n\r\nnoiseburst(gate,P) = noise : *(gate : trigger(P))\r\n\twith { \r\n\tupfront(x) = (x-x') > 0; \r\n\tdecay(n,x) = x - (x>0)/n; \r\n\trelease(n) = + ~ decay(n); \r\n\ttrigger(n) = upfront : release(n) : > (0.0);\r\n\t};\r\n\t\r\nP = freq; // fundamental period in samples \r\nPmax = 4096; // maximum P (for delay-line allocation)\r\n\r\ngate = phasor_bin(1) :-(0.001):pulsar;\r\ngain = 1;\r\nfreq = hslider(\"[1]Grain Size[style:knob][acc:2 0 -10 0 10]\", 200,5,2205,1);\r\n// la fréquence donne la largeur de bande extraite du bruit blanc\r\n\r\n// PHASOR_BIN //////////////////////////////\r\nphasor_bin (init) = (+(float(speed)/float(SR)) : fmod(_,1.0)) ~ *(init);\r\n\t\t\t\t\t\t\r\n// PULSAR //////////////////////////////\r\n//Le pulsar permet de créer une 'pulsation' plus ou moins aléatoire (proba).\r\n\r\npulsar = _<:((_<(ratio_env)):@(100))*(proba>(_,abs(noise):latch)); \r\nspeed = hslider (\"[2]Speed[unit:Hz][style:knob][acc:0 0 -10 0 10]\", 10,1,20,0.0001):lowpass(1,1); \r\nratio_env = 0.5;\r\nfade = (0.5); // min > 0 pour eviter division par 0\r\nproba = hslider (\"[3]Probability[unit:%][style:knob][acc:1 1 -10 0 10]\", 70,50,100,1) * (0.01):lowpass(1,1);\r\nduree_env = 1/(speed: / (ratio_env*(0.25)*fade));}.process);","name":"Granulator","x":"733","y":"61","inputs":{"source":["3"]},"outputs":{"destination":["output"]},"params":{"sliders":[{"path":"/Granulator/Granulator/Grain_Size","value":200},{"path":"/Granulator/Granulator/Speed","value":10},{"path":"/Granulator/Granulator/Probability","value":70}]},"factory":{"name":"mydsp10","code":"/* ------------------------------------------------------------author: \"Adapted from sfIter by Christophe Lebreton\"name: \"Granulator\"Code generated with Faust 2.0.a41 (http://faust.grame.fr)------------------------------------------------------------ */function mydsp10Module(global, foreign, buffer) {'use asm';var HEAP32 = new global.Int32Array(buffer);var HEAPF32 = new global.Float32Array(buffer);var imul = global.Math.imul;var log = global.Math.log;var expf = global.Math.exp;var fabsf = global.Math.abs;var max = global.Math.max;var min = global.Math.min;var tanf = global.Math.tan;function fmodf(x, y) { x = +x; y = +y; return +(x % y); }function log10f(a) { a = +a; return +(+log(a) / +log(10.)); }function getNumInputs(dsp) {dsp = dsp | 0;return 1;}function getNumOutputs(dsp) {dsp = dsp | 0;return 1;}function classInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;}function instanceInit(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;var i0 = 0;var i1 = 0;var i2 = 0;var i3 = 0;var i4 = 0;var i5 = 0;var i6 = 0;var i7 = 0;var i8 = 0;var i9 = 0;var i10 = 0;var i11 = 0;var i12 = 0;HEAP32[dsp + 608 >> 2] = (samplingFreq | 0);HEAP32[dsp + 612 >> 2] = ((min(192000, ((max(1, (HEAP32[dsp + 608 >> 2] | 0))) | 0))) | 0);HEAPF32[dsp + 616 >> 2] = +(16. / +((HEAP32[dsp + 612 >> 2] | 0)));HEAPF32[dsp + 620 >> 2] = +(1. / +(tanf(+(3.14159 / +((HEAP32[dsp + 612 >> 2] | 0))))));HEAPF32[dsp + 624 >> 2] = +(1. + +(HEAPF32[dsp + 620 >> 2]));HEAPF32[dsp + 628 >> 2] = +(0. - +(+(1. - +(HEAPF32[dsp + 620 >> 2])) / +(HEAPF32[dsp + 624 >> 2])));HEAPF32[dsp + 632 >> 2] = +(1. / +(HEAPF32[dsp + 624 >> 2]));HEAPF32[dsp + 636 >> 2] = +(10.);for (i0 = 0; (((i0 | 0) < 2) | 0); i0 = (((i0 | 0) + 1) | 0)) {HEAPF32[dsp + 512 + ((i0 | 0) << 2) >> 2] = 0.;}for (i1 = 0; (((i1 | 0) < 2) | 0); i1 = (((i1 | 0) + 1) | 0)) {HEAPF32[dsp + 520 + ((i1 | 0) << 2) >> 2] = 0.;}for (i2 = 0; (((i2 | 0) < 2) | 0); i2 = (((i2 | 0) + 1) | 0)) {HEAP32[dsp + 528 + ((i2 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 640 >> 2] = +(1. / +((HEAP32[dsp + 612 >> 2] | 0)));for (i3 = 0; (((i3 | 0) < 2) | 0); i3 = (((i3 | 0) + 1) | 0)) {HEAPF32[dsp + 536 + ((i3 | 0) << 2) >> 2] = 0.;}for (i4 = 0; (((i4 | 0) < 2) | 0); i4 = (((i4 | 0) + 1) | 0)) {HEAPF32[dsp + 544 + ((i4 | 0) << 2) >> 2] = 0.;}HEAP32[dsp + 644 >> 2] = 0;for (i5 = 0; (((i5 | 0) < 128) | 0); i5 = (((i5 | 0) + 1) | 0)) {HEAP32[dsp + 0 + ((i5 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 648 >> 2] = +(0.01 / +(HEAPF32[dsp + 624 >> 2]));HEAPF32[dsp + 652 >> 2] = +(70.);for (i6 = 0; (((i6 | 0) < 2) | 0); i6 = (((i6 | 0) + 1) | 0)) {HEAPF32[dsp + 552 + ((i6 | 0) << 2) >> 2] = 0.;}for (i7 = 0; (((i7 | 0) < 2) | 0); i7 = (((i7 | 0) + 1) | 0)) {HEAPF32[dsp + 560 + ((i7 | 0) << 2) >> 2] = 0.;}for (i8 = 0; (((i8 | 0) < 2) | 0); i8 = (((i8 | 0) + 1) | 0)) {HEAPF32[dsp + 568 + ((i8 | 0) << 2) >> 2] = 0.;}for (i9 = 0; (((i9 | 0) < 2) | 0); i9 = (((i9 | 0) + 1) | 0)) {HEAP32[dsp + 576 + ((i9 | 0) << 2) >> 2] = 0;}HEAPF32[dsp + 656 >> 2] = +(200.);for (i10 = 0; (((i10 | 0) < 2) | 0); i10 = (((i10 | 0) + 1) | 0)) {HEAPF32[dsp + 584 + ((i10 | 0) << 2) >> 2] = 0.;}for (i11 = 0; (((i11 | 0) < 2) | 0); i11 = (((i11 | 0) + 1) | 0)) {HEAPF32[dsp + 592 + ((i11 | 0) << 2) >> 2] = 0.;}for (i12 = 0; (((i12 | 0) < 2) | 0); i12 = (((i12 | 0) + 1) | 0)) {HEAPF32[dsp + 600 + ((i12 | 0) << 2) >> 2] = 0.;}}function init(dsp, samplingFreq) {dsp = dsp | 0;samplingFreq = samplingFreq | 0;classInit(dsp, samplingFreq);instanceInit(dsp, samplingFreq);}function setValue(dsp, offset, value) {dsp = dsp | 0;offset = offset | 0;value = +value;HEAPF32[dsp + offset >> 2] = value;}function getValue(dsp, offset) {dsp = dsp | 0;offset = offset | 0;return +HEAPF32[dsp + offset >> 2];}function compute(dsp, count, inputs, outputs) {dsp = dsp | 0;count = count | 0;inputs = inputs | 0;outputs = outputs | 0;var input0 = 0;var output0 = 0;var fSlow0 = 0.;var fSlow1 = 0.;var fSlow2 = 0.;var i = 0;var fTemp0 = 0.;var fTemp1 = 0.;var iTemp2 = 0;var iTemp3 = 0;var fTemp4 = 0.;var fTemp5 = 0.;input0 = (HEAP32[inputs + (0 << 2) >> 2] | 0);output0 = (HEAP32[outputs + (0 << 2) >> 2] | 0);fSlow0 = +(+(HEAPF32[dsp + 636 >> 2]));fSlow1 = +(+(HEAPF32[dsp + 652 >> 2]));fSlow2 = +(1. / +(+(HEAPF32[dsp + 656 >> 2])));for (i = 0; (((i | 0) < (count | 0)) | 0); i = (((i | 0) + 1) | 0)) {HEAPF32[dsp + 512 + (0 << 2) >> 2] = +(fSlow0);HEAPF32[dsp + 520 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 628 >> 2]) * +(HEAPF32[dsp + 520 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 632 >> 2]) * +(+(fSlow0) + +(HEAPF32[dsp + 512 + (1 << 2) >> 2]))));fTemp0 = +(expf(+(0. - +(+(HEAPF32[dsp + 616 >> 2]) * +(HEAPF32[dsp + 520 + (0 << 2) >> 2])))));HEAP32[dsp + 528 + (0 << 2) >> 2] = ((12345 + (imul(1103515245, (HEAP32[dsp + 528 + (1 << 2) >> 2] | 0)) | 0)) | 0);HEAPF32[dsp + 536 + (0 << 2) >> 2] = +(fmodf(+(+(HEAPF32[dsp + 536 + (1 << 2) >> 2]) + +(+(HEAPF32[dsp + 640 >> 2]) * +(HEAPF32[dsp + 520 + (0 << 2) >> 2]))), 1.));fTemp1 = +(+(HEAPF32[dsp + 536 + (0 << 2) >> 2]) - 0.001);HEAPF32[dsp + 544 + (0 << 2) >> 2] = +(fTemp1);HEAP32[dsp + 0 + ((((HEAP32[dsp + 644 >> 2] | 0) & 127) | 0) << 2) >> 2] = ((+(fTemp1) < 0.5) | 0);HEAPF32[dsp + 552 + (0 << 2) >> 2] = +(fSlow1);HEAPF32[dsp + 560 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 628 >> 2]) * +(HEAPF32[dsp + 560 + (1 << 2) >> 2])) + +(+(HEAPF32[dsp + 648 >> 2]) * +(+(fSlow1) + +(HEAPF32[dsp + 552 + (1 << 2) >> 2]))));iTemp2 = ((((+(HEAPF32[dsp + 544 + (1 << 2) >> 2]) <= 0.) | 0) & ((+(fTemp1) > 0.) | 0)) | 0);HEAPF32[dsp + 568 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 568 + (1 << 2) >> 2]) * +(((1 - (iTemp2 | 0)) | 0))) + +(+((iTemp2 | 0)) * +(fabsf(+(4.65661e-10 * +((HEAP32[dsp + 528 + (0 << 2) >> 2] | 0)))))));iTemp3 = (imul((HEAP32[dsp + 0 + ((((((HEAP32[dsp + 644 >> 2] | 0) - 100) | 0) & 127) | 0) << 2) >> 2] | 0), ((+(HEAPF32[dsp + 560 + (0 << 2) >> 2]) > +(HEAPF32[dsp + 568 + (0 << 2) >> 2])) | 0)) | 0);HEAP32[dsp + 576 + (0 << 2) >> 2] = (iTemp3 | 0);HEAPF32[dsp + 584 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 584 + (1 << 2) >> 2]) + +((((((iTemp3 | 0) - (HEAP32[dsp + 576 + (1 << 2) >> 2] | 0)) | 0) > 0) | 0))) - +(+(fSlow2) * +(((+(HEAPF32[dsp + 584 + (1 << 2) >> 2]) > 0.) | 0))));fTemp4 = +(fabsf(+(4.65661e-10 * +((imul((HEAP32[dsp + 528 + (0 << 2) >> 2] | 0), ((+(HEAPF32[dsp + 584 + (0 << 2) >> 2]) > 0.) | 0)) | 0)))));fTemp5 = +(1. - +(fTemp0));HEAPF32[dsp + 592 + (0 << 2) >> 2] = +(max(+(fTemp4), +(+(+(fTemp0) * +(HEAPF32[dsp + 592 + (1 << 2) >> 2])) + +(+(fTemp4) * +(fTemp5)))));HEAPF32[dsp + 600 + (0 << 2) >> 2] = +(+(+(HEAPF32[dsp + 600 + (1 << 2) >> 2]) * +(fTemp0)) + +(+(HEAPF32[dsp + 592 + (0 << 2) >> 2]) * +(fTemp5)));HEAPF32[output0 + ((i | 0) << 2) >> 2] = +(+(+(+(HEAPF32[input0 + ((i | 0) << 2) >> 2])) * +(HEAPF32[dsp + 600 + (0 << 2) >> 2])));HEAPF32[dsp + 512 + (1 << 2) >> 2] = +(HEAPF32[dsp + 512 + (0 << 2) >> 2]);HEAPF32[dsp + 520 + (1 << 2) >> 2] = +(HEAPF32[dsp + 520 + (0 << 2) >> 2]);HEAP32[dsp + 528 + (1 << 2) >> 2] = (HEAP32[dsp + 528 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 536 + (1 << 2) >> 2] = +(HEAPF32[dsp + 536 + (0 << 2) >> 2]);HEAPF32[dsp + 544 + (1 << 2) >> 2] = +(HEAPF32[dsp + 544 + (0 << 2) >> 2]);HEAP32[dsp + 644 >> 2] = (((HEAP32[dsp + 644 >> 2] | 0) + 1) | 0);HEAPF32[dsp + 552 + (1 << 2) >> 2] = +(HEAPF32[dsp + 552 + (0 << 2) >> 2]);HEAPF32[dsp + 560 + (1 << 2) >> 2] = +(HEAPF32[dsp + 560 + (0 << 2) >> 2]);HEAPF32[dsp + 568 + (1 << 2) >> 2] = +(HEAPF32[dsp + 568 + (0 << 2) >> 2]);HEAP32[dsp + 576 + (1 << 2) >> 2] = (HEAP32[dsp + 576 + (0 << 2) >> 2] | 0);HEAPF32[dsp + 584 + (1 << 2) >> 2] = +(HEAPF32[dsp + 584 + (0 << 2) >> 2]);HEAPF32[dsp + 592 + (1 << 2) >> 2] = +(HEAPF32[dsp + 592 + (0 << 2) >> 2]);HEAPF32[dsp + 600 + (1 << 2) >> 2] = +(HEAPF32[dsp + 600 + (0 << 2) >> 2]);}}return { getNumInputs : getNumInputs, getNumOutputs : getNumOutputs, classInit : classInit, instanceInit : instanceInit, init : init, setValue : setValue, getValue : getValue, compute : compute };}function getSizemydsp10() {return 660;}function getPathTablemydsp10() {var pathTable = [];pathTable[\"/Granulator/Granulator/Speed\"] = 636;pathTable[\"/Granulator/Granulator/Probability\"] = 652;pathTable[\"/Granulator/Granulator/Grain_Size\"] = 656;return pathTable;}function getJSONmydsp10() {return \"{ \\\"name\\\": \\\"Granulator\\\", \\\"inputs\\\": \\\"1\\\", \\\"outputs\\\": \\\"1\\\", \\\"meta\\\": [ { \\\"DSP\\\": \\\"MONO\\\" }, { \\\"author\\\": \\\"Adapted from sfIter by Christophe Lebreton\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_author\\\": \\\"Priyanka Shekar (pshekar@ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\\\": \\\"Copyright (c) 2013 Priyanka Shekar\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_license\\\": \\\"MIT License (MIT)\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_name\\\": \\\"Harmonic Exciter\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/exciter_version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/name\\\": \\\"Faust Audio Effect Library\\\" }, { \\\"http://192.168.1.61/faustcode/effect.lib/version\\\": \\\"1.33\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/author\\\": \\\"Julius O. Smith (jos at ccrma.stanford.edu)\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/copyright\\\": \\\"Julius O. Smith III\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/license\\\": \\\"STK-4.3\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/name\\\": \\\"Faust Filter Library\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/reference\\\": \\\"https://ccrma.stanford.edu/~jos/filters/\\\" }, { \\\"http://192.168.1.61/faustcode/filter.lib/version\\\": \\\"1.29\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/name\\\": \\\"Math Library\\\" }, { \\\"http://192.168.1.61/faustcode/math.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/author\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/copyright\\\": \\\"GRAME\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/license\\\": \\\"LGPL with exception\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/name\\\": \\\"Music Library\\\" }, { \\\"http://192.168.1.61/faustcode/music.lib/version\\\": \\\"1.0\\\" }, { \\\"http://192.168.1.61/faustcode/reduce.lib/author\\\": \\\"Yann Orlarey (orlarey at grame.fr)\\\" }, { \\\"http://192.168.1.61/faustcode/reduce.lib/copyright\\\": \\\"Grame\\\" }, { \\\"http://192.168.1.61/faustcode/reduce.lib/license\\\": \\\"LGPL\\\" }, { \\\"http://192.168.1.61/faustcode/reduce.lib/name\\\": \\\"Reduce Library\\\" }, { \\\"http://192.168.1.61/faustcode/reduce.lib/version\\\": \\\"0.1\\\" }, { \\\"name\\\": \\\"Granulator\\\" } ], \\\"ui\\\": [ { \\\"type\\\": \\\"vgroup\\\", \\\"label\\\": \\\"Granulator\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hgroup\\\", \\\"label\\\": \\\"Granulator\\\", \\\"items\\\": [ { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Grain Size\\\", \\\"address\\\": \\\"/Granulator/Granulator/Grain_Size\\\", \\\"meta\\\": [ { \\\"1\\\": \\\"\\\" }, { \\\"acc\\\": \\\"2 0 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" } ], \\\"init\\\": \\\"200\\\", \\\"min\\\": \\\"5\\\", \\\"max\\\": \\\"2205\\\", \\\"step\\\": \\\"1\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Speed\\\", \\\"address\\\": \\\"/Granulator/Granulator/Speed\\\", \\\"meta\\\": [ { \\\"2\\\": \\\"\\\" }, { \\\"acc\\\": \\\"0 0 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" }, { \\\"unit\\\": \\\"Hz\\\" } ], \\\"init\\\": \\\"10\\\", \\\"min\\\": \\\"1\\\", \\\"max\\\": \\\"20\\\", \\\"step\\\": \\\"0.0001\\\" }, { \\\"type\\\": \\\"hslider\\\", \\\"label\\\": \\\"Probability\\\", \\\"address\\\": \\\"/Granulator/Granulator/Probability\\\", \\\"meta\\\": [ { \\\"3\\\": \\\"\\\" }, { \\\"acc\\\": \\\"1 1 -10 0 10\\\" }, { \\\"style\\\": \\\"knob\\\" }, { \\\"unit\\\": \\\"%\\\" } ], \\\"init\\\": \\\"70\\\", \\\"min\\\": \\\"50\\\", \\\"max\\\": \\\"100\\\", \\\"step\\\": \\\"1\\\" } ] } ] } ] } \";}function metadatamydsp10(m) {m.declare(\"DSP\", \"MONO\");m.declare(\"author\", \"Adapted from sfIter by Christophe Lebreton\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_author\", \"Priyanka Shekar (pshekar@ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_copyright\", \"Copyright (c) 2013 Priyanka Shekar\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_license\", \"MIT License (MIT)\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_name\", \"Harmonic Exciter\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/exciter_version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/name\", \"Faust Audio Effect Library\");m.declare(\"http://192.168.1.61/faustcode/effect.lib/version\", \"1.33\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/author\", \"Julius O. Smith (jos at ccrma.stanford.edu)\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/copyright\", \"Julius O. Smith III\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/license\", \"STK-4.3\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/name\", \"Faust Filter Library\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/reference\", \"https://ccrma.stanford.edu/~jos/filters/\");m.declare(\"http://192.168.1.61/faustcode/filter.lib/version\", \"1.29\");m.declare(\"http://192.168.1.61/faustcode/math.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/math.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/math.lib/name\", \"Math Library\");m.declare(\"http://192.168.1.61/faustcode/math.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/music.lib/author\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/copyright\", \"GRAME\");m.declare(\"http://192.168.1.61/faustcode/music.lib/license\", \"LGPL with exception\");m.declare(\"http://192.168.1.61/faustcode/music.lib/name\", \"Music Library\");m.declare(\"http://192.168.1.61/faustcode/music.lib/version\", \"1.0\");m.declare(\"http://192.168.1.61/faustcode/reduce.lib/author\", \"Yann Orlarey (orlarey at grame.fr)\");m.declare(\"http://192.168.1.61/faustcode/reduce.lib/copyright\", \"Grame\");m.declare(\"http://192.168.1.61/faustcode/reduce.lib/license\", \"LGPL\");m.declare(\"http://192.168.1.61/faustcode/reduce.lib/name\", \"Reduce Library\");m.declare(\"http://192.168.1.61/faustcode/reduce.lib/version\", \"0.1\");m.declare(\"name\", \"Granulator\");}"}}}